"Key","Item Type","Publication Year","Author","Title","Publication Title","ISBN","ISSN","DOI","Url","Abstract Note","Date","Date Added","Date Modified","Access Date","Pages","Num Pages","Issue","Volume","Number Of Volumes","Journal Abbreviation","Short Title","Series","Series Number","Series Text","Series Title","Publisher","Place","Language","Rights","Type","Archive","Archive Location","Library Catalog","Call Number","Extra","Notes","File Attachments","Link Attachments","Manual Tags","Automatic Tags","Editor","Series Editor","Translator","Contributor","Attorney Agent","Book Author","Cast Member","Commenter","Composer","Cosponsor","Counsel","Interviewer","Producer","Recipient","Reviewed Author","Scriptwriter","Words By","Guest","Number","Edition","Running Time","Scale","Medium","Artwork Size","Filing Date","Application Number","Assignee","Issuing Authority","Country","Meeting Name","Conference Name","Court","References","Reporter","Legal Status","Priority Numbers","Programming Language","Version","System","Code","Code Number","Section","Session","Committee","History","Legislative Body"
"BXYQ93U5","journalArticle","2008","Cao, Lan; Ramesh, Balasubramaniam","Agile Requirements Engineering Practices: An Empirical Study","IEEE Software","","1937-4194","10.1109/MS.2008.1","","An analysis of data from 16 software development organizations reveals seven agile RE practices, along with their benefits and challenges. The rapidly changing business environment in which most organizations operate is challenging traditional requirements-engineering (RE) approaches. Software development organizations often must deal with requirements that tend to evolve quickly and become obsolete even before project completion. Rapid changes in competitive threats, stakeholder preferences, development technology, and time-to-market pressures make prespecified requirements inappropriate.","2008-01","2023-05-03 15:15:13","2023-05-03 15:15:13","","60-67","","1","25","","","Agile Requirements Engineering Practices","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\GFAPEXCU\4420071.html","","","agile software development; Data analysis; Design engineering; Feedback; Programming; Project management; Protection; Quality management; requirements engineering; Software development management; Software quality; Urban areas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z82Y5CP4","webpage","","","Requirements engineering and agile software development | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/1231428","","","2023-05-03 15:16:15","2023-05-03 15:16:15","2023-05-03 15:16:15","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T3FSZ7E5","conferencePaper","2003","Paetsch, F.; Eberlein, A.; Maurer, F.","Requirements engineering and agile software development","WET ICE 2003. Proceedings. Twelfth IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, 2003.","","","10.1109/ENABL.2003.1231428","","This article compares traditional requirements engineering approaches and agile software development. Our paper analyzes commonalities and differences of both approaches and determines possible ways how agile software development can benefit from requirements engineering methods.","2003-06","2023-05-03 15:16:20","2023-05-03 15:16:20","","308-313","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1080-1383","","","","","Programming; Collaboration; Collaborative software; Collaborative work; Context modeling; Customer satisfaction; Documentation; Knowledge engineering; Software engineering; System analysis and design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","WET ICE 2003. Proceedings. Twelfth IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, 2003.","","","","","","","","","","","","","","",""
"IVED7NZ3","webpage","","","Requirements engineering: A systematic mapping study in agile software development - ScienceDirect","","","","","https://www.sciencedirect.com/science/article/abs/pii/S0164121218300141","","","2023-05-03 15:16:37","2023-05-03 15:16:37","2023-05-03 15:16:37","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EGY8R9IP","journalArticle","2010","Lucia, Andrea De; Qusef, Abdallah","Requirements Engineering in Agile Software Development","Journal of Emerging Technologies in Web Intelligence","","1798-0461","10.4304/jetwi.2.3.212-220","http://www.jetwi.us/index.php?m=content&c=index&a=show&catid=161&id=923","Finding out, analyzing, documenting, and checking requirements are important activities in all development approaches, including agile development. This paper discusses problems concerned with the conduction of requirements engineering activities in agile software development processes and suggests some improvements to solve some challenges caused by agile requirements engineering practices in large projects, like properly handling and identifying sensitive (including nonfunctional) requirements, documenting and managing requirements documentation, keeping agile teams in contact with outside customers. The paper also discusses the requirements traceability problem in agile software development and the relationships between the traceability and refactoring processes and their impact on each other.","2010-08-20","2023-05-03 15:16:58","2023-05-03 15:16:59","2023-05-03 15:16:58","212-220","","3","2","","JETWI","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\JMUWZF6X\Lucia and Qusef - 2010 - Requirements Engineering in Agile Software Develop.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K9H33QQM","webpage","","","A Mapping Study on Requirements Engineering in Agile Software Development | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/7302452","","","2023-05-03 15:17:07","2023-05-03 15:17:07","2023-05-03 15:17:07","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"L326B76X","bookSection","2007","Düchting, Markus; Zimmermann, Dirk; Nebe, Karsten","Incorporating User Centered Requirement Engineering into Agile Software Development","Human-Computer Interaction. Interaction Design and Usability","978-3-540-73104-7 978-3-540-73105-4","","","http://link.springer.com/10.1007/978-3-540-73105-4_7","","2007","2023-05-03 15:17:26","2023-05-03 15:17:26","2023-05-03 15:17:26","58-67","","","4550","","","","","","","","Springer Berlin Heidelberg","Berlin, Heidelberg","en","","","","","DOI.org (Crossref)","","Series Title: Lecture Notes in Computer Science DOI: 10.1007/978-3-540-73105-4_7","","C:\Users\gabra\Zotero\storage\JLWB3XN3\Düchting et al. - 2007 - Incorporating User Centered Requirement Engineerin.pdf","","","","Jacko, Julie A.","Hutchison, David; Kanade, Takeo; Kittler, Josef; Kleinberg, Jon M.; Mattern, Friedemann; Mitchell, John C.; Naor, Moni; Nierstrasz, Oscar; Pandu Rangan, C.; Steffen, Bernhard; Sudan, Madhu; Terzopoulos, Demetri; Tygar, Doug; Vardi, Moshe Y.; Weikum, Gerhard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N4SNHIDW","journalArticle","2017","Schön, Eva-Maria; Thomaschewski, Jörg; Escalona, María José","Agile Requirements Engineering: A systematic literature review","Computer Standards & Interfaces","","0920-5489","10.1016/j.csi.2016.08.011","https://www.sciencedirect.com/science/article/pii/S0920548916300708","Nowadays, Agile Software Development (ASD) is used to cope with increasing complexity in system development. Hybrid development models, with the integration of User-Centered Design (UCD), are applied with the aim to deliver competitive products with a suitable User Experience (UX). Therefore, stakeholder and user involvement during Requirements Engineering (RE) are essential in order to establish a collaborative environment with constant feedback loops. The aim of this study is to capture the current state of the art of the literature related to Agile RE with focus on stakeholder and user involvement. In particular, we investigate what approaches exist to involve stakeholder in the process, which methodologies are commonly used to present the user perspective and how requirements management is been carried out. We conduct a Systematic Literature Review (SLR) with an extensive quality assessment of the included studies. We identified 27 relevant papers. After analyzing them in detail, we derive deep insights to the following aspects of Agile RE: stakeholder and user involvement, data gathering, user perspective, integrated methodologies, shared understanding, artifacts, documentation and Non-Functional Requirements (NFR). Agile RE is a complex research field with cross-functional influences. This study will contribute to the software development body of knowledge by assessing the involvement of stakeholder and user in Agile RE, providing methodologies that make ASD more human-centric and giving an overview of requirements management in ASD.","2017-01-01","2023-05-03 15:18:48","2023-05-03 15:18:48","2023-05-03 15:18:48","79-91","","","49","","Computer Standards & Interfaces","Agile Requirements Engineering","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\35IR423I\Schön et al. - 2017 - Agile Requirements Engineering A systematic liter.pdf","","","Agile software development; Human-computer interaction; Requirements Engineering; Systematic literature review; User-centered design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CDF8SQN6","journalArticle","2015","Inayat, Irum; Salim, Siti Salwah; Marczak, Sabrina; Daneva, Maya; Shamshirband, Shahaboddin","A systematic literature review on agile requirements engineering practices and challenges","Computers in Human Behavior","","0747-5632","10.1016/j.chb.2014.10.046","https://www.sciencedirect.com/science/article/pii/S074756321400569X","Unlike traditional software development methods, agile methods are marked by extensive collaboration, i.e. face-to-face communication. Although claimed to be beneficial, the software development community as a whole is still unfamiliar with the role of the requirements engineering practices in agile methods. The term “agile requirements engineering” is used to define the “agile way” of planning, executing and reasoning about requirements engineering activities. Moreover, not much is known about the challenges posed by collaboration-oriented agile way of dealing with requirements engineering activities. Our goal is to map the evidence available about requirements engineering practices adopted and challenges faced by agile teams in order to understand how traditional requirements engineering issues are resolved using agile requirements engineering. We conducted a systematic review of literature published between 2002 and June 2013 and identified 21 papers, that discuss agile requirements engineering. We formulated and applied specific inclusion and exclusion criteria in two distinct rounds to determine the most relevant studies for our research goal. The review identified 17 practices of agile requirements engineering, five challenges traceable to traditional requirements engineering that were overcome by agile requirements engineering, and eight challenges posed by the practice of agile requirements engineering. However, our findings suggest that agile requirements engineering as a research context needs additional attention and more empirical results are required to better understand the impact of agile requirements engineering practices e.g. dealing with non-functional requirements and self-organising teams.","2015-10-01","2023-05-03 15:18:53","2023-05-03 15:18:53","2023-05-03 15:18:53","915-929","","","51","","Computers in Human Behavior","","Computing for Human Learning, Behaviour and Collaboration in the Social and Mobile Networks Era","","","","","","en","","","","","ScienceDirect","","","","","","","Collaboration; Agile requirements engineering; Agile software development methods; Systematic review; Traditional requirements engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BDUIIJVQ","conferencePaper","2014","Wang, Xinyu; Zhao, Liping; Wang, Ye; Sun, Jie","The Role of Requirements Engineering Practices in Agile Development: An Empirical Study","Requirements Engineering","978-3-662-43610-3","","10.1007/978-3-662-43610-3_15","","Requirements Engineering (RE) plays a fundamental role in all sorts of software development processes. Recently, agile software development has been growing in popularity. However, in contrast to the extensive research of RE in traditional software development, the role of RE in agile development has not yet been studied in depth. In this paper, we present a survey with three research questions to explore the treatment of RE in the practical agile development by investigating eight agile groups from four software development organizations. To answer the three research questions, we targeted at 108 participants with rich agile experiences and designed a questionnaire to collect their answers. Our survey shows that agile RE practices play a crucial role in agile development and they are an important prerequisite for projects’ success though many agile methods advocate coding without waiting for formal requirements and design specifications.","2014","2023-05-03 15:19:01","2023-05-03 15:19:01","","195-209","","","","","","The Role of Requirements Engineering Practices in Agile Development","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","agile software development; requirements engineering; requirements analysis; scrum; survey","Zowghi, Didar; Jin, Zhi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FPHQQ7V8","conferencePaper","2011","Bjarnason, Elizabeth; Wnuk, Krzysztof; Regnell, Björn","A case study on benefits and side-effects of agile practices in large-scale requirements engineering","Proceedings of the 1st Workshop on Agile Requirements Engineering","978-1-4503-0890-8","","10.1145/2068783.2068786","https://doi.org/10.1145/2068783.2068786","In the software industry, there is a strong shift from traditional phase-based development towards agile methods and practices. This paper reports on a case study aimed at investigating if, and how, agile Requirements Engineering (RE) can remedy the challenges of traditional RE, and what new challenges agile RE may pose. The results from an initial case study with 9 practitioners from a large software development company, which is transitioning towards agile-inspired processes, show that agile practices address some RE challenges such as communication gaps and overscoping, but also cause new challenges, such as striking a good balance between agility and stability, and ensuring sufficient competence in cross-functional development teams.","2011-07-26","2023-05-03 15:19:03","2023-05-03 15:19:03","2023-05-03","1–5","","","","","","","AREW '11","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\CCTXGCKN\Bjarnason et al. - 2011 - A case study on benefits and side-effects of agile.pdf","","","requirements engineering; agile; case study; empirical study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LCP6YRUV","conferencePaper","2016","Elghariani, Kaiss; Kama, Nazri","Review on Agile requirements engineering challenges","2016 3rd International Conference on Computer and Information Sciences (ICCOINS)","","","10.1109/ICCOINS.2016.7783267","","The popularity of agile methodology has been increased since agile offers further collaboration. Requirements engineering (RE) is one of the software development process in agile approaches. The features of face to face communication is one of agile way which unlike to other traditional software methods. Software developers are using the definition agile way to improve the agile way of activities. Besides, the challenge of dealing with RE practices is not much is known in agile way or model. However, many literature works have been done in RE in agile approaches and challenges faced by teamwork. The aim of this paper is to fill the gap by presenting RE practices in agile methodology also the challenges of RE activities which are faced by agile team members. 80 systematic literature reviews are conducted and 22 research papers are identified. Moreover, the reviews discuss RE in agile methodology approaches. This paper has adopted a systematic literature review and has applied a certain inclusion and exclusion criteria to detect the research studies related to RE in agile methodology to achieve the aim of this research. This research determined most of agile requirements engineering activities, also challenges of requirements engineering in agile methodology. Therefore, the research findings can be a reference to all researchers who are interested in this research area because the paper's findings clarify that RE in agile methodology need to have further attention by researchers and more practical results are needed to gain understandable information about RE practices in Agile methodology.","2016-08","2023-05-03 15:19:30","2023-05-03 15:19:30","","507-512","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Collaboration; Agile methodology; agile requirements engineering; Bibliographies; Databases; Requirements engineering; Search problems; Software; systematic review; Systematics; Teamwork; traditional requirements engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2016 3rd International Conference on Computer and Information Sciences (ICCOINS)","","","","","","","","","","","","","","",""
"SZWSV3WS","conferencePaper","2017","Kasauli, Rashidah; Liebel, Grischa; Knauss, Eric; Gopakumar, Swathi; Kanagwa, Benjamin","Requirements Engineering Challenges in Large-Scale Agile System Development","2017 IEEE 25th International Requirements Engineering Conference (RE)","","","10.1109/RE.2017.60","","Motivated by their success in software development, companies implement agile methods and their practices increasingly for software-intense, large products, such as cars, telecommunication infrastructure, and embedded systems. Such systems are usually subject to safety and regulative concerns as well as different development cycles of hardware and software. Consequently, requirements engineering involves upfront and detailed analysis, which can be at odds with agile (software) development. In this paper, we present results from a multiple case study with two car manufacturers, a telecommunications company, and a technology company that are on the journey to introduce organization wide continuous integration and continuous delivery to customers. Based on 20 qualitative interviews, 5 focus groups, and 2 cross-company workshops, we discuss possible scopes of agile methods within system development, the consequences this has on the role of requirements, and the challenges that arise from the interplay of requirements engineering and agile methods in large-scale system development. These relate in particular to communicating and managing knowledge about a) customer value and b) the system under development. We conclude that better alignment of a holistic requirements model with agile development practices promises rich gains in development speed, flexibility, and overall quality of software and systems.","2017-09","2023-05-03 15:19:31","2023-05-03 15:19:31","","352-361","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","requirements engineering; Software; Automotive engineering; Companies; Conferences; Interviews; large-scale agile; Large-scale systems; system engineering; Telecommunications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 IEEE 25th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"NH7DR6DE","journalArticle","2018","Ochodek, Mirosław; Kopczyńska, Sylwia","Perceived importance of agile requirements engineering practices – A survey","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2018.05.012","https://www.sciencedirect.com/science/article/pii/S0164121218300955","Context:Requirements Engineering (RE) is one of the key processes in software development. Since Agile software development advocates continuous improvement, the question arises which Agile RE practices are the most essential and shall be adopted/improved at first? Objective:Investigate and rank the Agile RE practices based on how practitioners perceive their importance for a software project. Method:We conducted a survey asking 136 Agile software development practitioners how they perceive the importance of the 31 Agile RE practices that we had identified in a literature study. We used a ranking method based on the PROMETHEE family methods to create the ranking of relative importance of the practices. Results:The opinions of respondents from a wide range of countries around the globe allowed us to determine the perceived importance of the Agile RE practices and create a seven-tier ranking of the practices. Moreover, the analysis concerning demographic data let us identify some relationships between the experience of the respondents and their view on the importance of the Agile RE practices. Conclusions:Our findings suggest the most critical Agile RE practices are those supporting iterative development with emergent requirements and short feedback loop. Moreover, in many cases, the perceived importance of practices seems to depend on the context of the project (e.g., methodology, domain). We also learned that the popularity of the practices is highly correlated with their perceived importance.","2018-09-01","2023-05-03 15:19:32","2023-05-03 15:19:32","2023-05-03 15:19:31","29-43","","","143","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\NBGXHE5P\S0164121218300955.html","","","Requirements engineering; Agile; Importance; Practices; Survey study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7TFB3SNL","bookSection","2005","Sillitti, Alberto; Succi, Giancarlo","Requirements Engineering for Agile Methods","Engineering and Managing Software Requirements","978-3-540-28244-0","","","https://doi.org/10.1007/3-540-28244-0_14","Collecting, understanding, and managing requirements is a critical aspect in all development methods. This is true for Agile Methods as well. In particular, several agile practices deal with requirements in order to implement them correctly and satisfy the needs of the customer. These practices focus on a continuous interaction with the customer to address the requirements evolution over time, prioritize them, and deliver the most valuable functionalities first. This chapter introduces Agile Methods as the implementation of the principles of the lean production in software development. Therefore, Agile Methods focus on continuous process improvement through the identification and the removal of waste, whatever does not add value for the customer.","2005","2023-05-03 15:19:50","2023-05-03 15:19:50","2023-05-03 15:19:50","309-326","","","","","","","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/3-540-28244-0_14","","","","","Agile methods; Lean management; Process management; Requirements management; Variability management","Aurum, Aybüke; Wohlin, Claes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NWVKLVQF","journalArticle","2010","Ramesh, Balasubramaniam; Cao, Lan; Baskerville, Richard","Agile requirements engineering practices and challenges: an empirical study","Information Systems Journal","","1365-2575","10.1111/j.1365-2575.2007.00259.x","https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2575.2007.00259.x","This paper describes empirical research into agile requirements engineering (RE) practices. Based on an analysis of data collected in 16 US software development organizations, we identify six agile practices. We also identify seven challenges that are created by the use of these practices. We further analyse how this collection of practices helps mitigate some, while exacerbating other risks in RE. We provide a framework for evaluating the impact and appropriateness of agile RE practices by relating them to RE risks. Two risks that are intractable by agile RE practices emerge from the analysis. First, problems with customer inability and a lack of concurrence among customers significantly impact agile development. Second, risks associated with the neglecting non-functional requirements such as security and scalability are a serious concern. Developers should carefully evaluate the risk factors in their project environment to understand whether the benefits of agile RE practices outweigh the costs imposed by the challenges.","2010","2023-05-03 15:19:54","2023-05-03 15:19:54","2023-05-03 15:19:54","449-480","","5","20","","","Agile requirements engineering practices and challenges","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1365-2575.2007.00259.x","","C:\Users\gabra\Zotero\storage\Q9A5X4VI\j.1365-2575.2007.00259.html","","","agile software development; requirements engineering; agile practices; requirements engineering risks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BSPT99QW","conferencePaper","2015","Käpyaho, Marja; Kauppinen, Marjo","Agile requirements engineering with prototyping: A case study","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","10.1109/RE.2015.7320450","","The rise of agile software development methods has led to the abandonment of many traditional practices especially in requirements engineering (RE). Agile RE is still a relatively new research area and the growing use of agile methods in large projects is forcing companies to look for more formal practices for RE. This paper describes experiences gained from a case study of a large agile project. The goal of this case study was to explore how prototyping can solve the challenges of agile RE. Our findings indicate that while prototyping can help with some challenges of agile RE such as lack of documentation, motivation for RE work and poor quality communication, it also needs complementary practices to reach its full potential. These practices include reviewing the big picture regularly, keeping track of quality requirements, and using ATDD (Acceptance Test Driven Development).","2015-08","2023-05-03 15:20:15","2023-05-03 15:20:15","","334-343","","","","","","Agile requirements engineering with prototyping","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","requirements engineering; Documentation; Agile software development; Software; Companies; Interviews; agility; good practices; Prototypes; prototyping; RE process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"GQYAEU83","conferencePaper","2009","Adikari, Sisira; McDonald, Craig; Campbell, John","Little Design Up-Front: A Design Science Approach to Integrating Usability into Agile Requirements Engineering","Human-Computer Interaction. New Trends","978-3-642-02574-7","","10.1007/978-3-642-02574-7_62","","In recent years, Design Science has gained wide recognition and acceptance as a formal research method in many disciplines including information systems. Design Science research in Human-Computer Interaction is not so abundant. HCI is a discipline primarily focusing on design, evaluation, and implementation where design plays the role as a process as well as an artefact. In this paper, we present a design science approach using “Little Design Up Front” to integrate the User-Centred Design perspective into Agile Requirements Engineering. We also present the results of two agile projects to validate the proposition that incorporating UCD perspective into Agile Software Development improves the design quality of software systems.","2009","2023-05-03 15:20:15","2023-05-03 15:20:15","","549-558","","","","","","Little Design Up-Front","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\BK2VXTN2\Adikari et al. - 2009 - Little Design Up-Front A Design Science Approach .pdf","","","Agile Requirements Engineering; Design Science; Usability","Jacko, Julie A.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LTV45MGR","conferencePaper","2010","Savolainen, Juha; Kuusela, Juha; Vilavaara, Asko","Transition to Agile Development - Rediscovery of Important Requirements Engineering Practices","2010 18th IEEE International Requirements Engineering Conference","","","10.1109/RE.2010.41","","Many organizations have started to use agile development processes to speed up the development cycle and to improve the ability of the company in reacting to changing requirements. Adopting agile practices may happen as a revolution where all old practices are removed or as a more gradual process. In this paper, we discuss lessons learnt in two agile transition processes. Based on our experience, agile processes can be used in embedded software development for products. The challenges include the varying size of user requirements, the role of system requirements, and architecturally significant requirements. It is difficult for large organizations to be agile. Work allocation for a large number of different teams with different competencies tends to decrease speed, and increase the role of design and management. We conclude that agile development in this context needs very skilled developers and has to be a combination of new and old practices.","2010-09","2023-05-03 15:20:19","2023-05-03 15:20:19","","289-294","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Programming; requirements engineering; Software; Companies; agility; best practices; Computer architecture; Hardware; Software architecture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 18th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"9ZJYGHRF","journalArticle","2011","Rubin, Eran; Rubin, Hillel","Supporting agile software development through active documentation","Requirements Engineering","","1432-010X","10.1007/s00766-010-0113-9","https://doi.org/10.1007/s00766-010-0113-9","Agile development processes are adaptive rather than predictive. Therefore, agile processes emphasize operational system code rather than its documentation. To overcome the absence of comprehensive documentation artifacts, agile methods require constant interaction between the system stakeholders. Ironically, however, some traditional documentation artifacts come to support this kind of interaction. In this study, we examine the relationship between software and documentation. We develop an approach that enables incorporating domain documentation to agile development, while keeping the processes adaptive. We also provide a system design that actively uses domain knowledge documentation. These ideas have been applied through the implementation and use of agile documentation support components.","2011-06-01","2023-05-03 15:20:32","2023-05-03 15:20:32","2023-05-03 15:20:32","117-132","","2","16","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Agile documentation; Conceptual modeling; Domain knowledge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KYKK8NQZ","journalArticle","2014","Belsis, Petros; Koutoumanos, Anastasios; Sgouropoulou, Cleo","PBURC: a patterns-based, unsupervised requirements clustering framework for distributed agile software development","Requirements Engineering","","1432-010X","10.1007/s00766-013-0172-9","https://doi.org/10.1007/s00766-013-0172-9","Agile software development methodologies are increasingly adopted by organizations because they focus on the client’s needs, thus safeguarding business value for the final product. At the same time, as the economy and society move toward globalization, more organizations shift to distributed development of software projects. From this perspective, while adopting agile techniques seems beneficial, there are still a number of challenges that need to be addressed; among these notable is the effective cooperation between the stakeholders and the geographically distributed development team. In addition, data collection and validation for requirements engineering demands efficient processing techniques in order to handle the volume of data as well as to manage different inconsistencies, when the data are collected using online tools. In this paper, we present “PBURC,” a patterns-based, unsupervised requirements clustering framework, which makes use of machine-learning methods for requirements validation, being able to overcome data inconsistencies and effectively determine appropriate requirements clusters for optimal definition of software development sprints.","2014-06-01","2023-05-03 15:20:37","2023-05-03 15:20:37","2023-05-03 15:20:37","213-225","","2","19","","Requirements Eng","PBURC","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Agile software process; Distributed software development; Requirements clustering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZKMNAHIN","journalArticle","2021","Kasauli, Rashidah; Knauss, Eric; Horkoff, Jennifer; Liebel, Grischa; de Oliveira Neto, Francisco Gomes","Requirements engineering challenges and practices in large-scale agile system development","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2020.110851","https://www.sciencedirect.com/science/article/pii/S0164121220302417","Context: Agile methods have become mainstream even in large-scale systems engineering companies that need to accommodate different development cycles of hardware and software. For such companies, requirements engineering is an essential activity that involves upfront and detailed analysis which can be at odds with agile development methods. Objective: This paper presents a multiple case study with seven large-scale systems companies, reporting their challenges, together with best practices from industry. We also analyze literature about two popular large-scale agile frameworks, SAFe® and LeSS, to derive potential solutions for the challenges. Methods: Our results are based on 20 qualitative interviews, five focus groups, and eight cross-company workshops which we used to both collect and validate our results. Results: We found 24 challenges which we grouped in six themes, then mapped to solutions from SAFe®, LeSS, and our companies, when available. Conclusion: In this way, we contribute a comprehensive overview of RE challenges in relation to large-scale agile system development, evaluate the degree to which they have been addressed, and outline research gaps. We expect these results to be useful for practitioners who are responsible for designing processes, methods, or tools for large scale agile development as well as guidance for researchers.","2021-02-01","2023-05-03 15:20:39","2023-05-03 15:20:39","2023-05-03 15:20:39","110851","","","172","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\EFXELEP9\Kasauli et al. - 2021 - Requirements engineering challenges and practices .pdf","","","Requirements engineering; Large-scale agile; Systems engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2I8D9WQC","journalArticle","2019","Melegati, Jorge; Goldman, Alfredo; Kon, Fabio; Wang, Xiaofeng","A model of requirements engineering in software startups","Information and Software Technology","","0950-5849","10.1016/j.infsof.2019.02.001","https://www.sciencedirect.com/science/article/pii/S095058491930028X","Context Over the past 20 years, software startups have created many products that have changed human life. Since these companies are creating brand-new products or services, requirements are difficult to gather and highly volatile. Although scientific interest in software development in this context has increased, the studies on requirements engineering in software startups are still scarce and mostly focused on elicitation activities. Objective This study overcomes this gap by answering how requirements engineering practices are performed in this context. Method We conducted a grounded theory study based on 17 interviews with software startups practitioners. Results We constructed a model to show that software startups do not follow a single set of practices but, instead, build a custom process, changed throughout the development of the company, combining different practices according to a set of influences (Founders, Software Development Manager, Developers, Market, Business Model and Startup Ecosystem). Conclusion Our findings show that requirements engineering activities in software startups are similar to those in agile teams, but some steps vary as a consequence of the lack of an accessible customer.","2019-05-01","2023-05-03 15:20:45","2023-05-03 15:20:45","2023-05-03 15:20:45","92-107","","","109","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements engineering; Customer development; Empirical software engineering; Product validation; Software startups","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VT5MIJI7","journalArticle","2017","Al-Zewairi, Malek; Biltawi, Mariam; Etaiwi, Wael; Shaout, Adnan","Agile Software Development Methodologies: Survey of Surveys","Journal of Computer and Communications","","","10.4236/jcc.2017.55007","http://www.scirp.org/journal/PaperInformation.aspx?PaperID=75114&#abstract","Agile software design and development methodologies have been gaining rigorous attention in the software engineering research community since their early introduction in the mid-nineties in addition to being highly adopted by the software development industry. In the last 15 years, an excessive number of research studies have been conducted on agile methods, a great number of notable methods have been proposed and various surveys have been presented by many researchers. In this study, the authors intend to conduct a literature survey study of the surveys of the different agile methodologies ranging from January 2000 to December 2015 using an intuitive research methodology called “Compare and Review” (CR). Furthermore, these survey papers were classified into four major categories according to their area of study. Additionally, the newly proposed agile methodologies that have not been addressed yet in any other literature review were reviewed and compared in terms of where the changes that they proposed lay on the SDLC.","2017","2023-05-03 15:20:47","2023-05-03 15:20:47","2023-05-03 15:20:47","74","","05","05","","","Agile Software Development Methodologies","","","","","","","en","","","","","www.scirp.org","","Number: 05 Publisher: Scientific Research Publishing","","C:\Users\gabra\Zotero\storage\4BUKQLVR\Al-Zewairi et al. - 2017 - Agile Software Development Methodologies Survey o.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TRYCJ9FZ","journalArticle","2018","Hoda, Rashina; Salleh, Norsaremah; Grundy, John","The Rise and Evolution of Agile Software Development","IEEE Software","","1937-4194","10.1109/MS.2018.290111318","","Agile software development has dominated the second half of the past 50 years of software engineering. Retrospectives, one of the most common agile practices, enables reflection on past performance, discussion of current progress, and charting forth directions for future improvement. Because of agile’s burgeoning popularity as the software development model of choice and a significant research subdomain of software engineering, it demands a retrospective of its own. This article provides a historical overview of agile’s main focus areas and a holistic synthesis of its trends, their evolution over the past two decades, agile’s current status, and, forecast from these, agile’s likely future. This article is part of a theme issue on software engineering’s 50th anniversary.","2018-09","2023-05-03 15:20:52","2023-05-03 15:20:52","","58-63","","5","35","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","agile software development; Software engineering; Agile software development; agile; Market research; Planning; software development; software engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VAH5V72J","journalArticle","2016","Ramadan, Nagy; Megahed, Salwa","Requirements Engineering in Scrum Framework","International Journal of Computer Applications","","","10.5120/ijca2016911530","","Engineering (RE) plays an important role in the success of software development life cycle. As RE is the starting point of the life cycle, any changes in requirements will be costly and time consuming. Failure in determining accurate requirements leads to errors in specifications and therefore to a mal system architecture. In addition, most of software development environments are characterized by user requests to change some requirements.Scrum as one of agile development methods that gained a great attention because of its ability to deal with the changing environments. This paper presents and discusses the current situation of RE activities in Scrum, how Scrum benefits from RE techniques and future challenges in this respect.","2016-09-15","2023-05-03 15:20:53","2023-05-03 15:20:53","","24-29","","","149","","International Journal of Computer Applications","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\WJN7DIU3\Ramadan and Megahed - 2016 - Requirements Engineering in Scrum Framework.pdf; ","https://www.researchgate.net/profile/Nagy-Ramadan/publication/308186449_Requirements_Engineering_in_Scrum_Framework/links/57de46b008aeea195938d140/Requirements-Engineering-in-Scrum-Framework.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YWWMNLHZ","conferencePaper","2014","Lin, Jun; Yu, Han; Shen, Zhiqi; Miao, Chunyan","Using goal net to model user stories in agile software development","15th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","","","10.1109/SNPD.2014.6888731","","Agile methodologies use user stories to capture software requirements. This often results in team members over emphasizing their understanding of the goals, without proper incorporation of goals from other stakeholders or customers. Existing UML or other goal oriented modeling methods tend to be overly complex for non-technical stakeholders to properly express their goals and communicate them to the agile team. In this paper, we propose a light weight Goal Net based method to model goal requirements in agile software development process to address this problem. It can be used to decompose complex processes into phased goals, and model low level user stories to high level hierarchy goal structures. Our preliminary analysis and studies in educational software engineering contexts show that it can improve agile team's group awareness to project goals and, thus, improve team productivity and artifact quality. The proposed approach was evaluated in university level agile software engineering projects. It has achieved an improvement of over 50 percentage points in terms of the proportion of high quality user stories generated by students compared to the standard user story template used in Scrum,","2014-06","2023-05-03 15:21:05","2023-05-03 15:21:05","","1-6","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Software engineering; Software; Agile Software Development; Educational institutions; Goal Net; Mobile communication; Mobile handsets; Software Engineering; Unified modeling language; Variable speed drives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","15th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","","","","","","","","","","","","","","",""
"H35TML2H","conferencePaper","2015","Kassab, Mohamad","The changing landscape of requirements engineering practices over the past decade","2015 IEEE Fifth International Workshop on Empirical Requirements Engineering (EmpiRE)","","","10.1109/EmpiRE.2015.7431299","","Even though there is ample information available on solid requirements engineering practices, anecdotal evidence still indicates poor practices in industry. The key issue in implementing an improvement is to first identify the areas that need most improvement. Three surveys were conducted in 2003, 2008 and 2013 on the state of practice of requirements engineering. Surveys data obtained includes characteristics of projects, practices, organizations, and practitioners related to requirements engineering. In this paper we present a comparison and analysis of the responses from the three surveys in order to understand the changing land-scape of requirements engineering industrial practices over the past years.","2015-08","2023-05-03 15:21:07","2023-05-03 15:21:07","","1-8","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2329-6356","","C:\Users\gabra\Zotero\storage\47VVGITG\7431299.html","","","Documentation; Software engineering; Agile software development; Requirements Engineering; agile; Requirements engineering; Software; Companies; common practices; Industries; software development industry; software professionals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE Fifth International Workshop on Empirical Requirements Engineering (EmpiRE)","","","","","","","","","","","","","","",""
"UCZCJ3YF","journalArticle","2016","Dingsøyr, Torgeir; Lassenius, Casper","Emerging themes in agile software development: Introduction to the special section on continuous value delivery","Information and Software Technology","","0950-5849","10.1016/j.infsof.2016.04.018","https://www.sciencedirect.com/science/article/pii/S0950584916300829","The relationship between customers and suppliers remains a challenge in agile software development. Two trends seek to improve this relationship, the increased focus on value and the move towards continuous deployment. In this special section on continuous value delivery, we describe these emerging research themes and show the increasing interest in these topics over time. Further, we discuss implications for future research.","2016-09-01","2023-05-03 15:23:48","2023-05-03 15:23:48","2023-05-03 15:23:47","56-60","","","77","","Information and Software Technology","Emerging themes in agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7AG3D589\Dingsøyr and Lassenius - 2016 - Emerging themes in agile software development Int.pdf","","","Agile software development; Requirements engineering; Continuous deployment; Extreme programming; Lean startup; Scrum; Software process improvement; Value-based software engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"49SPCVY6","journalArticle","2016","Lucassen, Garm; Dalpiaz, Fabiano; van der Werf, Jan Martijn E. M.; Brinkkemper, Sjaak","Improving agile requirements: the Quality User Story framework and tool","Requirements Engineering","","1432-010X","10.1007/s00766-016-0250-x","https://doi.org/10.1007/s00766-016-0250-x","User stories are a widely adopted requirements notation in agile development. Yet, user stories are too often poorly written in practice and exhibit inherent quality defects. Triggered by this observation, we propose the Quality User Story (QUS) framework, a set of 13 quality criteria that user story writers should strive to conform to. Based on QUS, we present the Automatic Quality User Story Artisan (AQUSA) software tool. Relying on natural language processing (NLP) techniques, AQUSA detects quality defects and suggest possible remedies. We describe the architecture of AQUSA, its implementation, and we report on an evaluation that analyzes 1023 user stories obtained from 18 software companies. Our tool does not yet reach the ambitious 100 % recall that Daniel Berry and colleagues require NLP tools for RE to achieve. However, we obtain promising results and we identify some improvements that will substantially improve recall and precision.","2016-09-01","2023-05-03 15:23:59","2023-05-03 15:23:59","2023-05-03 15:23:59","383-403","","3","21","","Requirements Eng","Improving agile requirements","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\9T7EEH2R\Lucassen et al. - 2016 - Improving agile requirements the Quality User Sto.pdf","","","AQUSA; Multi-case study; Natural language processing; QUS framework; Requirements quality; User stories","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5TLT5HDG","conferencePaper","2010","Sohaib, Osama; Khan, Khalid","Integrating usability engineering and agile software development: A literature review","2010 International Conference On Computer Design and Applications","","","10.1109/ICCDA.2010.5540916","","The various agile software development methodologies have promoted since their inception and even demanded high degree to improve the quality of the software product. Usability engineering has made its way into the software mainstream and has caught the attention of software engineers and researchers worldwide due to rapidly growing and volatile internet software industry, despite their different perspectives on creating software both have a major role in making good software. Usability focuses on how the end users will work with the software and agile development focuses on how the software should be developed. The way these two perspectives are being combined in practice is still not well understood. This study is a preliminary literature review that describes the key question that how usability-engineering practices should be integrated with agile software development in order to make stronger and effective usable software system. This paper focuses on identifying the tensions between usability and agile methods. The research aim is to identify the common approach of agile methods and usability engineering by surveying extensive related work on integration of usability and agile methods.","2010-06","2023-05-03 15:24:02","2023-05-03 15:24:02","","V2-32-V2-38","","","2","","","Integrating usability engineering and agile software development","","","","","","","","","","","","IEEE Xplore","","","","","","","Design engineering; Programming; Software quality; Usability; Educational institutions; agile development; Computer industry; extreme programming (XP); Internet; Software systems; Testing; usability; User centered design; user-centered design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 International Conference On Computer Design and Applications","","","","","","","","","","","","","","",""
"FHKVE4B6","conferencePaper","2016","Lombriser, Philipp; Dalpiaz, Fabiano; Lucassen, Garm; Brinkkemper, Sjaak","Gamified Requirements Engineering: Model and Experimentation","Requirements Engineering: Foundation for Software Quality","978-3-319-30282-9","","10.1007/978-3-319-30282-9_12","","[Context & Motivation] Engaging stakeholders in requirements engineering (RE) influences the quality of the requirements and ultimately of the system to-be. Unfortunately, stakeholder engagement is often insufficient, leading to too few, low-quality requirements. [Question/problem] We aim to evaluate the effectiveness of gamification to improve stakeholder engagement and ultimately performance in RE. We focus on agile requirements that are expressed as user stories and acceptance tests. [Principal ideas/results] We develop the gamified requirements engineering model (GREM) that relates gamification, stakeholder engagement, and RE performance. To evaluate GREM, we build an online gamified platform for requirements elicitation, and we report on a rigorous controlled experiment where two independent teams elicited requirements for the same system with and without gamification. The findings show that the performance of the treatment group is significantly higher, and their requirements are more numerous, have higher quality, and are more creative. [Contribution] The GREM model paves the way for further work in gamified RE. Our evaluation provides promising initial empirical insights, and leads us to the hypothesis that competitive game elements are advantageous for RE elicitation, while social game elements are favorable for RE phases where cooperation is demanded.","2016","2023-05-03 15:24:08","2023-05-03 15:24:08","","171-187","","","","","","Gamified Requirements Engineering","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Agile requirements; Empirical study; Gamification; Gamified Requirements Engineering Model; Requirements elicitation","Daneva, Maya; Pastor, Oscar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XEAGLLQR","journalArticle","2016","Bjarnason, Elizabeth; Unterkalmsteiner, Michael; Borg, Markus; Engström, Emelie","A multi-case study of agile requirements engineering and the use of test cases as requirements","Information and Software Technology","","0950-5849","10.1016/j.infsof.2016.03.008","https://www.sciencedirect.com/science/article/pii/S0950584916300544","Context It is an enigma that agile projects can succeed ‘without requirements’ when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases. Objective We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies. Method We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups. Results The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements. Conclusions The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change.","2016-09-01","2023-05-03 15:24:11","2023-05-03 15:24:11","2023-05-03 15:24:11","61-79","","","77","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\WVP7IGYL\Bjarnason et al. - 2016 - A multi-case study of agile requirements engineeri.pdf","","","Empirical software engineering; Testing; Acceptance test; Agile development; Behaviour-driven development; Case study; Requirements; Test-driven development; Test-first development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6N379TCH","journalArticle","","Eberlein, Armin","Agile Requirements Definition: A View from Requirements Engineering","","","","","","Agile methods are an attractive alternative for those pressured to produce code fast. Many programmers like the hands-on strategy of these approaches which also help them avoid some of the less exciting tasks, such as specification. On the other hand, some people appear to welcome agile methods as an excuse to throw overboard everything that requirements engineering has been teaching. This position paper looks at numerous aspects of requirements engineering and argues about their suitability for agile approaches. The aim is to elicit lessons from requirements engineering that agile methods might consider, if quality is a major concern.","","2023-05-03 15:24:22","2023-05-03 15:24:22","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\NCVZC867\Eberlein - Agile Requirements Definition A View from Require.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R3VPU2XE","conferencePaper","2008","Racheva, Zornitza; Daneva, Maya; Buglione, Luigi","Supporting the Dynamic Reprioritization of Requirements in Agile Development of Software Products","2008 Second International Workshop on Software Product Management","","","10.1109/IWSPM.2008.7","","Agile requirements engineering is the approach of choice for many software producers whose realities include highly uncertain requirements, use of new development technology, and clients willing to explore the ways in which an evolving product can help their business goals. From customer's perspective, the activity of continuous requirements reprioritization forms the very core of today's agile approaches. However, the freedom for clients to do so does not come for free. This paper presents results of a literature review on agile requirements prioritization methods, derives a conceptual model for understanding the inter-iteration prioritization process in terms of inputs and outcomes, and identifies issues and solutions pertinent to agile prioritization. The latter are derived from the authors' experiences and by using empirical data, published earlier by other authors.","2008-09","2023-05-03 15:24:24","2023-05-03 15:24:24","","49-58","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\55PDA4PD\Racheva et al. - 2008 - Supporting the Dynamic Reprioritization of Require.pdf","","","Programming; Project management; Conferences; Computer architecture; Variable speed drives; Application software; Decision making; Delay; Product development; Scalability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 Second International Workshop on Software Product Management","","","","","","","","","","","","","","",""
"W72ITLLK","journalArticle","2004","Lindvall, M.; Muthig, D.; Dagnino, A.; Wallin, C.; Stupperich, M.; Kiefer, D.; May, J.; Kahkonen, T.","Agile software development in large organizations","Computer","","1558-0814","10.1109/MC.2004.231","","The need to see compelling evidence before adopting new methods looms greater in large organizations because of their complexity and the need to integrate new technologies and processes with existing ones. To further evaluate agile methods and their underlying software development practices, several Software Experience Center (SEC) member companies initiated a series of activities to discover if agile practices match their organizations' needs. Although each organization evaluated agile methods according to its specific needs, here we attempt to generalize their findings by analyzing some of their common experiences in the particular context of large organizations with well-established structures and processes. We base this analysis on experience collected and shared among four SEC members namely ABB, DaimlerChrysler, Motorola, and Nokia.","2004-12","2023-05-03 15:24:26","2023-05-03 15:24:26","","26-34","","12","37","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: Computer","","C:\Users\gabra\Zotero\storage\XFGAJML3\Lindvall et al. - 2004 - Agile software development in large organizations.pdf","","","Data analysis; Programming; Software quality; Software engineering; Companies; Costs; Driver circuits; Mission critical systems; Productivity; Software maintenance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UJD6MFCP","conferencePaper","2013","Aitken, Ashley; Ilango, Vishnu","A Comparative Analysis of Traditional Software Engineering and Agile Software Development","2013 46th Hawaii International Conference on System Sciences","","","10.1109/HICSS.2013.31","","Over the last decade (or two) the pendulum of developer mindshare has swung decidedly towards agile software development from a more traditional engineering approach to software development. To ascertain the essential differences and any possible incompatibilities between these two software development paradigms this research investigates a number of traditional and agile methodologies, methods, and techniques. The essential differences between traditional software engineering and agile software development are found not to be (as one may first suspect from a cursory consideration) related to iteration length or project management, but rather more related to other attributes like the variety of models employed, the purpose of the models, and the approach to modeling. In the end though the two approaches are not seen to be incompatible, leading to the future possibility of an Agile Software Engineering (ASE).","2013-01","2023-05-03 15:24:36","2023-05-03 15:24:36","","4751-4760","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1605","","","","","Software engineering; agile; Software; software development; software engineering; Unified modeling language; Variable speed drives; comparative analysis; Crystals; Iterative methods; Problem-solving","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 46th Hawaii International Conference on System Sciences","","","","","","","","","","","","","","",""
"VNSCRJLB","conferencePaper","2013","Martakis, Aias; Daneva, Maya","Handling requirements dependencies in agile projects: A focus group with agile software development practitioners","IEEE 7th International Conference on Research Challenges in Information Science (RCIS)","","","10.1109/RCIS.2013.6577679","","Agile practices on requirements dependencies are a relatively unexplored topic in literature. Empirical studies on it are scarce. This research sets out to uncover concepts that practitioners in companies of various sizes across the globe and in various industries, use for dealing with requirements dependencies in their agile software projects. Concepts were revealed through online focus group research, using an adapted forum for discussion, and grounded theory to analyze the responses. Our study resulted in the following findings: (1) requirements dependencies occur in agile projects and are important to these projects' success just as this is known for `traditional' software projects'; (2) requirements dependencies (i) were considered and treated as part of risk management, (ii) were deemed a responsibility of the individual team members, and (iii) mostly did affect project planning; (3) continuous communication and collaboration - two essential features of any agile method, were found critical to mitigating the risks due to dependencies; (4) a hybrid approach to architecture between agile and plan-driven methods was perceived to yield maximum scalability and help coping with dependencies; (5) `cross-cutting concerns', a category of dependencies, were not uniformly understood in an agile context and require more research.","2013-05","2023-05-03 15:24:44","2023-05-03 15:24:44","","1-11","","","","","","Handling requirements dependencies in agile projects","","","","","","","","","","","","IEEE Xplore","","ISSN: 2151-1357","","","","","agile software development; Software engineering; agile requirements engineering; Software; Companies; Industries; Cognition; Communities; Context; cross-cutting concerns; focus groups; grounded theory; qualitative research; requirements dependencies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IEEE 7th International Conference on Research Challenges in Information Science (RCIS)","","","","","","","","","","","","","","",""
"LHNTC634","conferencePaper","2002","Nawrocki, J.; Jasinski, M.; Walter, B.; Wojciechowski, A.","Extreme programming modified: embrace requirements engineering practices","Proceedings IEEE Joint International Conference on Requirements Engineering","","","10.1109/ICRE.2002.1048543","","Extreme programming (XP) is an agile (lightweight) software development methodology and it becomes more and more popular. XP proposes many interesting practices, but it also has some weaknesses. From the software engineering point of view the most important issues are: maintenance problems resulting from very limited documentation (XP relies on code and test cases only), and lack of wider perspective of a system to be built. Moreover, XP assumes that there is only one customer representative. In many cases there are several representatives (each one with his own view of the system and different priorities) and then some XP practices should be modified. In the paper we assess XP from two points of view: the capability maturity model and the Sommerville-Sawyer model (1997). We also propose how to introduce documented requirements to XP, how to modify the planning game to allow many customer representatives and how to get a wider perspective of a system to be built at the beginning of the project lifecycle.","2002-09","2023-05-03 15:24:49","2023-05-03 15:24:49","","303-310","","","","","","Extreme programming modified","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","","","","Documentation; Software engineering; Software maintenance; Automatic testing; Capability maturity model; Electronic mail; Oral communication; Programming profession; Software testing; System testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE Joint International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"A6YJTZ8C","conferencePaper","2015","Lucassen, Garm; Dalpiaz, Fabiano; van der Werf, Jan Martijn E.M.; Brinkkemper, Sjaak","Forging high-quality User Stories: Towards a discipline for Agile Requirements","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","10.1109/RE.2015.7320415","","User stories are a widely used notation for formulating requirements in agile development projects. Despite their popularity in industry, little to no academic work is available on assessing their quality. The few existing approaches are too generic or employ highly qualitative metrics. We propose the Quality User Story Framework, consisting of 14 quality criteria that user story writers should strive to conform to. Additionally, we introduce the conceptual model of a user story, which we rely on to design the AQUSA software tool. AQUSA aids requirements engineers in turning raw user stories into higher-quality ones by exposing defects and deviations from good practice in user stories. We evaluate our work by applying the framework and a prototype implementation to three user story sets from industry.","2015-08","2023-05-03 15:24:51","2023-05-03 15:24:51","","126-135","","","","","","Forging high-quality User Stories","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\4FC7HZI6\Lucassen et al. - 2015 - Forging high-quality User Stories Towards a disci.pdf","","","requirements engineering; Databases; Software; Unified modeling language; AQUSA; Natural language processing; User stories; Estimation; NLP; QUS Framework; requirements quality; Semantics; Syntactics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"8EE2D3W4","journalArticle","","Peeters, Johan","Agile Security Requirements Engineering","","","","","","Agile processes have been deemed unsuitable for security sensitive software development as the rigors of assurance are seen to conflict with the lightweight and informal nature of agile processes. However, such apparently conflicting demands may be reconciled by introducing the new notion of abuser stories in the requirements domain. These extend the wellestablished concept of user stories to achieve security requirements traceability and thus open the door to excellent security assurance, precisely because of their informal and lightweight nature.","","2023-05-03 15:24:56","2023-05-03 15:24:56","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\QC8F9TV9\Peeters - Agile Security Requirements Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GTF38LE6","conferencePaper","2006","Creighton, Oliver; Ott, Martin; Bruegge, Bernd","Software Cinema-Video-based Requirements Engineering","14th IEEE International Requirements Engineering Conference (RE'06)","","","10.1109/RE.2006.59","","The dialogue between end-user and developer presents several challenges in requirements development. One issue is the gap between the conceptual models of end-users and formal specification/analysis models of developers. This paper presents a novel technique for the video analysis of scenarios, relating the use of video-based requirements to process models of software development. It uses a knowledge model-an RDF graph-based on a semiotic interpretation of film language, which allows mapping conceptual into formal models. It can be queried with RDQL, a query language for RDF. The technique has been implemented with a tool which lets the analyst annotate objects as well as spatial or temporal relationships in the video, to represent the conceptual model. The video can be arranged in a scenario graph effectively representing a multi-path video. It can be viewed in linear time order to facilitate the review of individual scenarios by end-users. Each multi-path scene from the conceptual model is mapped to a UML use case in the formal model. A UML sequence diagram can also be generated from the annotations, which shows the direct mapping of film language to UML. This sequence diagram can be edited by the analyst, refining the conceptual model to reflect deeper understanding of the application domain. The use of the software cinema technique is demonstrated with several prototypical applications. One example is a loan application scenario for a financial services consulting firm which acted as an end-user","2006-09","2023-05-03 15:25:12","2023-05-03 15:25:12","","109-118","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","14th IEEE International Requirements Engineering Conference (RE'06)","","","","","","","","","","","","","","",""
"GSWN6W4E","journalArticle","2007","Hanisch, Jo; Corbitt, Brian","Impediments to requirements engineering during global software development","European Journal of Information Systems","","0960-085X","10.1057/palgrave.ejis.3000723","https://doi.org/10.1057/palgrave.ejis.3000723","Developing software when team members are located in widely distributed geographic locations poses many challenges for developers, particularly during the requirements engineering (RE) phase. Using a case study of a large software development project with users located in the UK and software developers from an international software house based in New Zealand, the paper argues that while global RE using electronic communication media may be desirable in achieving economy of resources, social and cultural aspects of RE need to be considered so that lasting relationships with clients may be formed, and RE activities achieved. The main impediments to the process of RE during global software development are communication resulting from differences in shared meanings and context associated with the following: distribution of the clients and the development team; distribution of the development team; cultural differences between the clients and the development team; and cultural differences among the development team.","2007-12-01","2023-05-03 15:25:15","2023-05-03 15:25:15","2023-05-03 15:25:15","793-805","","6","16","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1057/palgrave.ejis.3000723","","","","","requirements engineering; global software development; global virtual teams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2Z955A5L","journalArticle","2017","Fernández, D. Méndez; Wagner, S.; Kalinowski, M.; Felderer, M.; Mafra, P.; Vetrò, A.; Conte, T.; Christiansson, M.-T.; Greer, D.; Lassenius, C.; Männistö, T.; Nayabi, M.; Oivo, M.; Penzenstadler, B.; Pfahl, D.; Prikladnicki, R.; Ruhe, G.; Schekelmann, A.; Sen, S.; Spinola, R.; Tuzcu, A.; de la Vara, J. L.; Wieringa, R.","Naming the pain in requirements engineering","Empirical Software Engineering","","1573-7616","10.1007/s10664-016-9451-7","https://doi.org/10.1007/s10664-016-9451-7","Requirements Engineering (RE) has received much attention in research and practice due to its importance to software project success. Its interdisciplinary nature, the dependency to the customer, and its inherent uncertainty still render the discipline difficult to investigate. This results in a lack of empirical data. These are necessary, however, to demonstrate which practically relevant RE problems exist and to what extent they matter. Motivated by this situation, we initiated the Naming the Pain in Requirements Engineering (NaPiRE) initiative which constitutes a globally distributed, bi-yearly replicated family of surveys on the status quo and problems in practical RE. In this article, we report on the qualitative analysis of data obtained from 228 companies working in 10 countries in various domains and we reveal which contemporary problems practitioners encounter. To this end, we analyse 21 problems derived from the literature with respect to their relevance and criticality in dependency to their context, and we complement this picture with a cause-effect analysis showing the causes and effects surrounding the most critical problems. Our results give us a better understanding of which problems exist and how they manifest themselves in practical environments. Thus, we provide a first step to ground contributions to RE on empirical observations which, until now, were dominated by conventional wisdom only.","2017-10-01","2023-05-03 15:25:23","2023-05-03 15:25:23","2023-05-03 15:25:23","2298-2338","","5","22","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\RNBIX3BS\Fernández et al. - 2017 - Naming the pain in requirements engineering.pdf","","","Requirements engineering; Survey research","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V2QS9SXY","conferencePaper","2013","Kropp, Martin; Meier, Andreas","Teaching agile software development at university level: Values, management, and craftsmanship","2013 26th International Conference on Software Engineering Education and Training (CSEE&T)","","","10.1109/CSEET.2013.6595249","","Agile methodologies have come a long way over the last decade. Several recent surveys show that agile methodologies like Scrum, Extreme Programming and, more recently, Kanban have been successfully adopted by many companies to develop their software. However, the same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled personnel. Although teaching agile software development has drawn some attention in recent research and has been discussed in several papers, we do not yet seem to be able to “deliver” the appropriately skilled personnel. What is the reason for this, and more importantly, how can we improve the situation? In this paper we propose a more holistic approach for teaching agile software development, in which the required agile practices and values are not only integrated theoretically into our courses but also practically applied and repeated until they become a habit to our graduates. The proposed concept was realized in a new Software Engineering course held at Zurich University of Applied Sciences during 2012. The evaluation shows very encouraging results, but also leaves some challenges and problems to be solved.","2013-05","2023-05-03 15:25:27","2023-05-03 15:25:27","","179-188","","","","","","Teaching agile software development at university level","","","","","","","","","","","","IEEE Xplore","","ISSN: 2377-570X","","","","","Programming; Documentation; Software engineering; Software; Companies; Educational institutions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 26th International Conference on Software Engineering Education and Training (CSEE&T)","","","","","","","","","","","","","","",""
"Y6SRHI6Z","journalArticle","2009","Patel, Chetankumar; Ramachandran, Muthu","Agile Maturity Model (AMM): A Software Process Improvement framework for Agile Software Development Practices","","","","","","Agile software development methodologies have introduced best practices into software development. However we need to adopt and monitor those practices continuously to maximize its benefits. Our research has focused on adaptability, suitability and software maturity model called Agile Maturity Model (AMM) for agile software development environments. This paper introduces a process of adaptability assessment, suitability assessment, and improvement framework for assessing and improving agile best practices. We have also developed a web based automated tool support to assess adaptability, suitability, and improvement for agile practices.","2009","2023-05-03 15:25:34","2023-05-03 15:25:34","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\H6ZDCDGF\Patel and Ramachandran - 2009 - Agile Maturity Model (AMM) A Software Process Imp.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T9UHASW2","book","2012","Chemuturi, Murali","Requirements Engineering and Management for Software Development Projects","","978-1-4614-5376-5","","","","Requirements Engineering and Management for Software Development Projects presents a complete guide on requirements for software development including engineering, computer science and management activities. It is the first book to cover all aspects of requirements management in software development projects. This book introduces the understanding of the requirements, elicitation and gathering, requirements analysis, verification and validation of the requirements, establishment of requirements, different methodologies in brief, requirements traceability and change management among other topics. The best practices, pitfalls, and metrics used for efficient software requirements management are also covered. Intended for the professional market, including software engineers, programmers, designers and researchers, this book is also suitable for advanced-level students in computer science or engineering courses as a textbook or reference.","2012-09-27","2023-05-03 15:25:35","2023-05-03 15:25:35","","","275","","","","","","","","","","Springer Science & Business Media","","en","","","","","Google Books","","","","","https://books.google.co.in/books?id=K3SYPgrZ6-wC","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Systems Analysis & Design; Technology & Engineering / Engineering (General); Computers / Hardware / Cell Phones & Devices; Computers / Hardware / General; Computers / Information Technology; Computers / Operating Systems / General; Computers / Programming / General; Technology & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GPPFFYPP","journalArticle","2017","Alahyari, Hiva; Berntsson Svensson, Richard; Gorschek, Tony","A study of value in agile software development organizations","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2016.12.007","https://www.sciencedirect.com/science/article/pii/S0164121216302539","The Agile manifesto focuses on the delivery of valuable software. In Lean, the principles emphasise value, where every activity that does not add value is seen as waste. Despite the strong focus on value, and that the primary critical success factor for software intensive product development lies in the value domain, no empirical study has investigated specifically what value is. This paper presents an empirical study that investigates how value is interpreted and prioritised, and how value is assured and measured. Data was collected through semi-structured interviews with 23 participants from 14 agile software development organisations. The contribution of this study is fourfold. First, it examines how value is perceived amongst agile software development organisations. Second, it compares the perceptions and priorities of the perceived values by domains and roles. Third, it includes an examination of what practices are used to achieve value in industry, and what hinders the achievement of value. Fourth, it characterises what measurements are used to assure, and evaluate value-creation activities.","2017-03-01","2023-05-03 15:25:38","2023-05-03 15:25:38","2023-05-03 15:25:38","271-288","","","125","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","","","","Agile software development; Empirical; Value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZRW72IG4","journalArticle","2011","Mishra, Deepti; Mishra, Alok","Complex software project development: agile methods adoption","Journal of Software Maintenance and Evolution: Research and Practice","","1532-0618","10.1002/smr.528","https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.528","The Agile Software Development paradigm has become increasingly popular in the last few years, since it claims lower costs, better productivity, better quality and better business satisfaction. Supply chain management (SCM) is a complex software development project. Owing to its scope and uncertain, complex and unstable requirements, it is not possible to develop it with predictable software development process models. Agile methodologies are targeted toward such kinds of problems that involve change and uncertainty, and are adaptive rather than predictive. How an agile process is introduced will significantly impact the implementation success of the process change. The objective of this paper is to analyze the agile development methodologies and management approach used in developing a complex software project. This further demonstrates how to overcome risks and barriers in each development phase of such complex inventive software projects. It also provides a set of guidelines regarding how the agile methodologies can be adopted, combined and used in these kinds of complex software projects. These findings have implications for software engineers and managers developing software by agile methods. Copyright © 2011 John Wiley & Sons, Ltd.","2011","2023-05-03 15:25:43","2023-05-03 15:25:43","2023-05-03 15:25:43","549-564","","8","23","","","Complex software project development","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.528","","","","","Agile software development; Scrum; adaptive development; agile methods; dynamic systems development method (DSDM); eXtreme programming (XP); feature-driven development (FDD); supply chain management (SCM)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S5V4MR3I","journalArticle","2010","Cao, Lan; Ramesh, Balasubramaniam; Abdel-Hamid, Tarek","Modeling dynamics in agile software development","ACM Transactions on Management Information Systems","","2158-656X","10.1145/1877725.1877730","https://doi.org/10.1145/1877725.1877730","Changes in the business environment such as turbulent market forces, rapidly evolving system requirements, and advances in technology demand agility in the development of software systems. Though agile approaches have received wide attention, empirical research that evaluates their effectiveness and appropriateness is scarce. Further, research to-date has investigated individual practices in isolation rather than as an integrated system. Addressing these concerns, we develop a system dynamics simulation model that considers the complex interdependencies among the variety of practices used in agile development. The model is developed on the basis of an extensive review of the literature as well as quantitative and qualitative data collected from real projects in nine organizations. We present the structure of the model focusing on essential agile practices. The validity of the model is established based on extensive structural and behavioral validation tests. Insights gained from experimentation with the model answer important questions faced by development teams in implementing two unique practices used in agile development. The results suggest that due to refactoring, the cost of implementing changes to a system varies cyclically and increases during later phases of development. Delays in refactoring also increase costs and decrease development productivity. Also, the simulation shows that pair programming helps complete more tasks and at a lower cost. The systems dynamics model developed in this research can be used as a tool by IS organizations to understand and analyze the impacts of various agile development practices and project management strategies.","2010-12-10","2023-05-03 15:25:45","2023-05-03 15:25:45","2023-05-03 15:25:45","5:1–5:26","","1","1","","ACM Trans. Manage. Inf. Syst.","","","","","","","","","","","","","ACM Digital Library","","","","","","","Agile software development; process modeling; simulation; system dynamics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I5BXQ3IL","journalArticle","2005","Sommerville, I.","Integrated requirements engineering: a tutorial","IEEE Software","","1937-4194","10.1109/MS.2005.13","","This short tutorial introduces the fundamental activities of RE (requirements engineering) and discusses how it has evolved as a part of the software engineering process. However, rather than focusing on the established RE techniques, the author discusses how the changing nature of software engineering has led to the new challenges in RE. The author then introduces a number of new techniques that helps us to meet these challenges by integrating RE more closely with other systems implementation activities.","2005-01","2023-05-03 15:25:51","2023-05-03 15:25:51","","16-23","","1","22","","","Integrated requirements engineering","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","Software development management; Documentation; Software engineering; Banking; Object oriented modeling; Rail transportation; Railway engineering; Specification languages; Systems engineering and theory; Tutorial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3SA86UR6","conferencePaper","2007","Korkala, Mikko; Abrahamsson, Pekka","Communication in Distributed Agile Development: A Case Study","33rd EUROMICRO Conference on Software Engineering and Advanced Applications (EUROMICRO 2007)","","","10.1109/EUROMICRO.2007.23","","Distributed software development is an increasingly important development approach for software companies as it brings tempting opportunities. Distributed development is already burdened with several problems and agile methods bring further challenges in the form of their reliance on verbal communication and volatile requirements. There is little empirical knowledge on distributed agile software development. We conducted two distributed agile software development case studies and compared our findings against existing recommendations about communication in distributed agile development. Our findings along with existing literature conclude that presented recommendations are worthwhile considering in distributed agile development, but with some caution. Our empirically based findings indicate that the role of a well-defined customer is the key recommendation. The lack of a well-defined customer able to meet responsibilities, as well as volatile requirements and inefficient communication, can cause severe problems even in small-scale distributed agile software development projects. Discussed recommendations are complemented with an additional recommendation.","2007-08","2023-05-03 15:25:53","2023-05-03 15:25:53","","203-210","","","","","","Communication in Distributed Agile Development","","","","","","","","","","","","IEEE Xplore","","ISSN: 2376-9505","","","","","Programming; Software development management; Software quality; Collaboration; Costs; Cities and towns; Communication effectiveness; Cultural differences; Software tools; Teleconferencing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","33rd EUROMICRO Conference on Software Engineering and Advanced Applications (EUROMICRO 2007)","","","","","","","","","","","","","","",""
"DXICVCW4","conferencePaper","2012","Janes, Andrea A.; Succi, Giancarlo","The dark side of agile software development","Proceedings of the ACM international symposium on New ideas, new paradigms, and reflections on programming and software","978-1-4503-1562-3","","10.1145/2384592.2384612","https://doi.org/10.1145/2384592.2384612","We believe, that like most innovations, Agile has followed the Gartner Hype Cycle and it has now reached the Trough of Disillusionment, where it is currently stuck. Moreover, we believe this is due to a ""guru phenomenon."" However, we think that Agile can make a step forward. Our experience lead us to the conviction that through the application of a suitable quality improvement paradigm Agile will be able to reach what Gartner's experts call the Slope of Enlightenment and eventually the Plateau of Productivity.","2012-10-19","2023-05-03 15:29:23","2023-05-03 15:29:23","2023-05-03","215–228","","","","","","","Onward! 2012","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","agile software development; hype cycle; quality improvement paradigm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DV2TB3MP","conferencePaper","2017","Alsaqaf, Wasim; Daneva, Maya; Wieringa, Roel","Quality Requirements in Large-Scale Distributed Agile Projects – A Systematic Literature Review","Requirements Engineering: Foundation for Software Quality","978-3-319-54045-0","","10.1007/978-3-319-54045-0_17","","Context and Motivation: Agile development methods have become increasingly popular in the last years. However, these methods hardly pay attention to quality requirements (QRs), which could undermine the profits of fast delivery by introducing high rework efforts later on. This risk is high especially in agile large-scale distributed settings. Question/problem: Although several publications reported on the insufficient attention to quality requirements in agile methods, still little is known about agile requirements engineering practices and their impact on quality requirements in large-scale distributed settings. However, companies increasingly use agile methods in those settings, where the negative impact of ignoring quality requirements is large. Hence, the goal of this study is to identify the challenges in the engineering of quality requirements in large-scale distributed agile projects that have been researched so far, the agile practices that have contributed to the emergence of these challenges, and the proposed solutions. Principle ideas/results: Following an evidence-based research method, we examined 60 papers on quality requirements in agile. We found that, while there are multiple proposals to engineer quality requirements in agile, none of those has been tried out in real-life settings. Evaluating scalability of these proposals, therefore, is a priority for future research. Contribution: This paper identified 12 challenges in agile projects that harm the quality requirements. Besides, we identified and evaluated 13 proposals for dealing with quality requirements in agile projects, along with implications for practice and research.","2017","2023-05-03 15:29:28","2023-05-03 15:29:28","","219-234","","","","","","","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Systematic literature review; Agile requirements engineering; Large-scale distributed agile projects; Non-functional requirements; Quality requirements","Grünbacher, Paul; Perini, Anna","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"994XHRQP","journalArticle","2020","Alsaqqa, Samar; Sawalha, Samer; Abdel-Nabi, Heba","Agile Software Development: Methodologies and Trends","International Journal of Interactive Mobile Technologies (iJIM)","","1865-7923","10.3991/ijim.v14i11.13269","https://online-journals.org/index.php/i-jim/article/view/13269","Software engineering is a discipline that undergone many improvements that aims to keep up with the new advancements in technologies and the modern business requirements through developing effective approaches to reach the final software product, agile software development is one of these successful approaches. Agile software development is a lightweight approach that was proposed to overcome the convolutional development methods’ limitations and to reduce the overhead and the cost while providing flexibility to adopt the changes in requirements at any stage, this is done by managing the tasks and their coordination through a certain set of values and principles. In this work, a comprehensive review that outlines the main agile values and principles, and states the key differences that distinguish agile methods over the traditional ones are presented. Then a discussion of the most popular agile methodologies; their life cycles, their roles, and their advantages and disadvantages are outlined. The recent state of art trends that adopts agile development especially in cloud computing, big data, and coordination are also explored. And finally, this work highlights how to choose the best suitable agile methodology that must be selected according to the task at hand, how sensitive the product is and the organization structure.","2020-07-10","2023-05-03 15:29:35","2023-05-03 15:29:35","2023-05-03 15:29:35","246","","11","14","","Int. J. Interact. Mob. Technol.","Agile Software Development","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\KQJ7CG7R\Alsaqqa et al. - 2020 - Agile Software Development Methodologies and Tren.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R9SKJVIK","conferencePaper","2019","Belani, Hrvoje; Vukovic, Marin; Car, Željka","Requirements Engineering Challenges in Building AI-Based Complex Systems","2019 IEEE 27th International Requirements Engineering Conference Workshops (REW)","","","10.1109/REW.2019.00051","","This paper identifies and tackles the challenges of the requirements engineering discipline when applied to development of AI-based complex systems. Due to their complex behaviour, there is an immanent need for a tailored development process for such systems. However, there is still no widely used and specifically tailored process in place to effectively and efficiently deal with requirements suitable for specifying a software solution that uses machine learning. By analysing the related work from software engineering and artificial intelligence fields, potential contributions have been recognized from agent-based software engineering and goal-oriented requirements engineering research, as well as examples from large product development companies. The challenges have been discussed, with proposals given how and when to tackle them. RE4AI taxonomy has also been outlined, to inform the tailoring of development process.","2019-09","2023-05-03 15:29:36","2023-05-03 15:29:36","","252-255","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\QH3DE2NP\Belani et al. - 2019 - Requirements Engineering Challenges in Building AI.pdf","","","Software; Adaptation models; Analytical models; Artificial intelligence; Complex systems; Data models; requirements-engineering,-software-development,-artificial-intelligence,-complex-systems,-data-science,-machine-learning,-deep-learning,-development-process; Taxonomy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 IEEE 27th International Requirements Engineering Conference Workshops (REW)","","","","","","","","","","","","","","",""
"JAR7BKBJ","conferencePaper","2007","Livermore, Jeffrey A.","Factors that impact implementing an agile software development methodology","Proceedings 2007 IEEE SoutheastCon","","","10.1109/SECON.2007.342860","","The Internet economy has altered the rules of software engineering. Traditional development methodologies are too cumbersome to meet the rapidly changing requirements and short product cycles demanded by business. To meet these changing requirements, software developers have developed agile software development methodologies (SDMs) utilizing iterative development, prototyping, and templates. This research project investigated agile SDM implementation using an online survey sent to practitioners worldwide. This survey data were used to identify factors related to agile SDM implementation. Factors that included training, management involvement, access to external resources, and corporate size were found to impact implementation of an agile software development methodology. Factors such as using models, having an implementation plan, collocating the development team, and developing software for Internet or intranet use did not impact the implementation of an agile software development methodology. Several of the factors that impact the implementation of an agile development methodology are under the control of management. Organizations considering the implementation of an agile methodology may wish to manipulate some of these factors to increase the opportunities for success of their methodology.","2007-03","2023-05-03 15:29:39","2023-05-03 15:29:39","","82-86","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1558-058X","","","","","Programming; Software development management; Software engineering; Educational institutions; Internet; Testing; Iterative methods; Management training; Resource management; Software prototyping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings 2007 IEEE SoutheastCon","","","","","","","","","","","","","","",""
"FMXHLSYT","book","2013","Babar, Muhammad Ali; Brown, Alan W.; Mistrik, Ivan","Agile Software Architecture: Aligning Agile Processes and Software Architectures","","978-0-12-407885-7","","","","Agile software development approaches have had significant impact on industrial software development practices. Today, agile software development has penetrated to most IT companies across the globe, with an intention to increase quality, productivity, and profitability. Comprehensive knowledge is needed to understand the architectural challenges involved in adopting and using agile approaches and industrial practices to deal with the development of large, architecturally challenging systems in an agile way.  Agile Software Architecture focuses on gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox. Readers will learn how agile and architectural cultures can co-exist and support each other according to the context. Moreover, this book will also provide useful leads for future research in architecture and agile to bridge such gaps by developing appropriate approaches that incorporate architecturally sound practices in agile methods. Presents a consolidated view of the state-of-art and state-of-practice as well as the newest research findings  Identifies gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox  Explains whether or not and how agile and architectural cultures can co-exist and support each other depending upon the context  Provides useful leads for future research in both architecture and agile to bridge such gaps by developing appropriate approaches, which incorporate architecturally sound practices in agile methods","2013-11-27","2023-05-03 15:29:42","2023-05-03 15:29:42","","","433","","","","","Agile Software Architecture","","","","","Newnes","","en","","","","","Google Books","","Google-Books-ID: wJb9pG1gcUsC","","","https://books.google.co.in/books?id=wJb9pG1gcUsC","","Computers / Software Development & Engineering / General; Computers / Business & Productivity Software / Business Intelligence; Computers / Interactive & Multimedia","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X6QMB2MW","journalArticle","2015","Matharu, Gurpreet Singh; Mishra, Anju; Singh, Harmeet; Upadhyay, Priyanka","Empirical Study of Agile Software Development Methodologies: A Comparative Analysis","ACM SIGSOFT Software Engineering Notes","","0163-5948","10.1145/2693208.2693233","https://doi.org/10.1145/2693208.2693233","In today's software industry, technological prowess and ever-evolving customer requirements have led to more complex software demands. Agile based software development is increasingly being adopted by the software practitioners as it assures early software development and high quality software products. Also, it offers responsiveness to changes in user requirements, providing for their quick absorption during software development. In this paper, we elaborate the significance, benefits and increasing adoption of Agile methodologies in context of today's complex and evolving software demands. The main objective of this paper is to conduct an empirical study into the choice among the most popular Agile methodologies, Scrum, Extreme Programming and Kanban. Further, this paper provides for a comparative analysis among various agile software development methodologies. Our survey results reveal higher adoption of Scrum based development in present-day software industry as compared to Extreme Programming and Kanban methodologies.","2015-02-06","2023-05-03 15:29:46","2023-05-03 15:29:46","2023-05-03 15:29:46","1–6","","1","40","","SIGSOFT Softw. Eng. Notes","Empirical Study of Agile Software Development Methodologies","","","","","","","","","","","","ACM Digital Library","","","","","","","Scrum; Agile Methodologies; Extreme Programming (XP); Kanban; Lean; Software Development Life Cycle (SDLC)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4Z2E5EFZ","journalArticle","2013","Vetterli, Christophe; Brenner, Walter; Uebernickel, Falk; Petrie, Charles","From Palaces to Yurts: Why Requirements Engineering Needs Design Thinking","IEEE Internet Computing","","1941-0131","10.1109/MIC.2013.32","","Requirements engineering methods are geared for developing information systems and aren't what's needed for today's world of rapidly changing, app-enabled products. Today's apps are more and more an integrated and central part of service delivery of new products. Requirements engineering for this new world can greatly benefit from design thinking. Merging design thinking with requirements engineering will integrate the strongly diverging human-oriented perspective as well as the more technically driven perspective. Overall, this results in a holistic perspective to develop a more customer-oriented solution, incorporating functional and nonfunctional requirements.","2013-03","2023-05-03 15:29:49","2023-05-03 15:29:49","","91-94","","2","17","","","From Palaces to Yurts","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Internet Computing","","C:\Users\gabra\Zotero\storage\HASXPY6B\Vetterli et al. - 2013 - From Palaces to Yurts Why Requirements Engineerin.pdf","","","requirements engineering; apps; design thinking; paradigm shift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WP8Q7DH9","journalArticle","2003","Neill, C.J.; Laplante, P.A.","Requirements engineering: the state of the practice","IEEE Software","","1937-4194","10.1109/MS.2003.1241365","","Little contemporary data exists for document actual practices of software professionals for software requirements elicitation, requirements specification, document development, and specification validation. This exploratory survey and its quantitative results offer opportunities for further interpretation and comparison.","2003-11","2023-05-03 15:29:51","2023-05-03 15:29:51","","40-45","","6","20","","","Requirements engineering","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","Project management; Software quality; Prototypes; Educational institutions; Computer industry; Application software; Productivity; Data systems; Inspection; Mars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6ZF222MF","conferencePaper","2017","Darrin, M. Ann Garrison; Devereux, William S.","The Agile Manifesto, design thinking and systems engineering","2017 Annual IEEE International Systems Conference (SysCon)","","","10.1109/SYSCON.2017.7934765","","New and non-traditional movements in the engineering fields potentially have a positive impact on classical systems engineering models in terms of promoting innovation. These movements include off shoots of the Agile Manifesto such as Agile Software Engineering, Agile Software Systems Engineering and Agile Project Management, the rise and popularity of Design Thinking as practiced by IDEO and others and the success in new software programs of redefining basic engineering principles such as the Zen of Python. This paper discusses two of these movements and assesses the potential of incorporating them in generic system engineering steps. The viability and strength of systems engineering models (Classic V, Waterfall, Spiral and others) has been proven by their sheer longevity and the wealth of successful outcomes. However, today's external environment including what has been termed the technology explosion has dramatically truncated time to market requiring consideration of increasing agility in our process steps. It is agility that is the common thread in these new movements.","2017-04","2023-05-03 15:30:33","2023-05-03 15:30:33","","1-5","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2472-9647","","","","","Software; Prototypes; Complex systems; Agile Manifesto; Agile Systems Engineering; Design Thinking; Modeling; Robustness; Uncertainty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 Annual IEEE International Systems Conference (SysCon)","","","","","","","","","","","","","","",""
"54P6N7U2","journalArticle","2011","Vlaanderen, Kevin; Jansen, Slinger; Brinkkemper, Sjaak; Jaspers, Erik","The agile requirements refinery: Applying SCRUM principles to software product management","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.08.004","https://www.sciencedirect.com/science/article/pii/S0950584910001539","Context Although agile software development methods such as SCRUM and DSDM are gaining popularity, the consequences of applying agile principles to software product management have received little attention until now. Objective In this paper, this gap is filled by the introduction of a method for the application of SCRUM principles to software product management. Method A case study research approach is employed to describe and evaluate this method. Results This has resulted in the ‘agile requirements refinery’, an extension to the SCRUM process that enables product managers to cope with complex requirements in an agile development environment. A case study is presented to illustrate how agile methods can be applied to software product management. Conclusions The experiences of the case study company are provided as a set of lessons learned that will help others to apply agile principles to their software product management process.","2011-01-01","2023-05-03 15:30:33","2023-05-03 15:30:33","2023-05-03 15:30:33","58-70","","1","53","","Information and Software Technology","The agile requirements refinery","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements management; Agile development; Requirements refinery; SCRUM; Software product management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VQTCBMZX","conferencePaper","2012","Farid, Weam M.; Mitropoulos, Frank J.","NORMATIC: A visual tool for modeling Non-Functional Requirements in agile processes","2012 Proceedings of IEEE Southeastcon","","","10.1109/SECon.2012.6196989","","There is consensus in the research community that agile software development methodologies, such as Scrum, are becoming more and more popular in delivering quality Functional Requirements (FRs). However, agile methodologies have not adequately modeled Non-Functional Requirements (NFRs) and their potential solutions (operationalizations) with FRs in early development phases-let alone having tools to support such initiatives. This research proposes NORMATIC, a Java-based simulation tool for modeling non-functional requirements for semi-automatic agile processes. NORMATIC is the semi-automatic tool that supports the more general Non-Functional Requirements Modeling for Agile Processes (NORMAP) Methodology. Early results show that the tool can potentially help agile software development teams in reasoning about and visually modeling NFRs as first-class artifacts early on during requirements gathering and analysis phases. The tool can also aid project managers and Scrum teams in user story estimate and risk calculations as well as risk-driven planning and visualization of the proposed plans.","2012-03","2023-05-03 15:30:40","2023-05-03 15:30:40","","1-8","","","","","","NORMATIC","","","","","","","","","","","","IEEE Xplore","","ISSN: 1558-058X","","","","","Programming; Project management; Software; Planning; Scrum; Agile Choose Case; Agile Loose Case; Agile Requirements Modeling; Agile Use Case; Encryption; Measurement; NFRs; NORMAP Methodology; NORMATIC; Visualization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 Proceedings of IEEE Southeastcon","","","","","","","","","","","","","","",""
"ETERW2D3","conferencePaper","2009","Ktata, Oualid; Lévesque, Ghislain","Agile development: issues and avenues requiring a substantial enhancement of the business perspective in large projects","Proceedings of the 2nd Canadian Conference on Computer Science and Software Engineering","978-1-60558-401-0","","10.1145/1557626.1557636","https://doi.org/10.1145/1557626.1557636","Large-scale projects, are often delivering low value software to businesses due to stakeholders' misunderstanding. Evolutionary software development represents an alternative to plan-driven development in order to tackle today's turbulent environments. In agile development, a type of evolutionary development, the product owner (P.O.) who is the customer representative---real accountable role---is ill-equipped to identify and prioritize the stakeholders' most success-critical expectations and potential sources of business value. Furthermore, the tools he can use have their own scalability issues that question their underlying principles. Moreover, without a substantial involvement to take into account all stakeholders, software providers are more likely acting as commodity-utility providers than real business partners. In today's business context, there is a clear need for a value-driven development which embraces changes along with higher visibility and understanding of business transformations. The current problems of software crisis could be condensed in a twofold business perspective dilemma: Doing the right product and providing efficient guidance to the development project. Approaches based on goals have been successfully used in Requirements Engineering (RE) and IT governance to address issues similar to the current software crisis. Commonalities in motivations behind the use of goals in both domains can open new avenues for improving the business perspective in Scrum. A goal-value oriented approach is then proposed as a candidate approach to balance the stakeholders' needs and expectations for large-scale agile developments and ensure focus on delivering high value functionalities.","2009-05-19","2023-05-03 15:30:41","2023-05-03 15:30:41","2023-05-03","59–66","","","","","","Agile development","C3S2E '09","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements engineering; agile development; decision making; goal oriented approaches; project management; scrum and business modeling; software valuation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P39BBZTE","book","2005","Pressman, Roger S.","Software Engineering: A Practitioner's Approach","","978-0-07-301933-8","","","","Presents an engineering approach for the analysis, design, and testing of web applications. This book provides information on software tools, specific work flow for specific kinds of projects, and information on various topics. It includes resources for both instructors and students such as checklists, 700 categorized web references, and more.","2005","2023-05-03 15:30:49","2023-05-03 15:30:49","","","924","","","","","Software Engineering","","","","","Palgrave Macmillan","","en","","","","","Google Books","","Google-Books-ID: bL7QZHtWvaUC","","","https://books.google.co.in/books?id=bL7QZHtWvaUC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M5SEPGLF","journalArticle","2013","Khan, Muhammad Naeem Ahmed; Khalid, Muhammad; Haq, Sami Ul","Review of Requirements Management Issues in Software Development","International Journal of Modern Education and Computer Science","","20750161, 2075017X","10.5815/ijmecs.2013.01.03","http://www.mecs-press.org/ijmecs/ijmecs-v5-n1/v5n1-3.html","A requirement is a capability to which a product or service should conform to. A meticulous consideration to requirements engineering acts as a backbone of software projects. Ambiguous and unrealistic requirements are major source of failure in the software-intensive systems. Requirements engineering processes are complex as most of the requirements engineering documentation is written in natural languages which are less formal and often distract the designers and developers. Requirements management is a continuous process throughout the project lifecycle and relates to documenting, analyzing, tracing and prioritizing requirements and then finally controlling changes. The main issues related to requirements management are usually social, political and cultural. Software requirement engineers who gather the requirements generally consider that such issues are beyond the scope of their profession as they deem them within the project management ambit. In this study, we highlight the management issues that arise in the requirements engineering process and explore the possibilities to tackle them amicably. The study is supplemented with a critical review of the existing methodologies for resolving and managing software requirements.","2013-01-15","2023-05-03 15:30:52","2023-05-03 15:30:53","2023-05-03 15:30:52","21-27","","1","5","","IJMECS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\ECWEJV9D\Khan et al. - 2013 - Review of Requirements Management Issues in Softwa.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FXBL9ZWU","journalArticle","2010","Alves, Vander; Niu, Nan; Alves, Carina; Valença, George","Requirements engineering for software product lines: A systematic literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.03.014","https://www.sciencedirect.com/science/article/pii/S0950584910000625","Context Software product line engineering (SPLE) is a growing area showing promising results in research and practice. In order to foster its further development and acceptance in industry, it is necessary to assess the quality of the research so that proper evidence for adoption and validity are ensured. This holds in particular for requirements engineering (RE) within SPLE, where a growing number of approaches have been proposed. Objective This paper focuses on RE within SPLE and has the following goals: assess research quality, synthesize evidence to suggest important implications for practice, and identify research trends, open problems, and areas for improvement. Method A systematic literature review was conducted with three research questions and assessed 49 studies, dated from 1990 to 2009. Results The evidence for adoption of the methods is not mature, given the primary focus on toy examples. The proposed approaches still have serious limitations in terms of rigor, credibility, and validity of their findings. Additionally, most approaches still lack tool support addressing the heterogeneity and mostly textual nature of requirements formats as well as address only the proactive SPLE adoption strategy. Conclusions Further empirical studies should be performed with sufficient rigor to enhance the body of evidence in RE within SPLE. In this context, there is a clear need for conducting studies comparing alternative methods. In order to address scalability and popularization of the approaches, future research should be invested in tool support and in addressing combined SPLE adoption strategies.","2010-08-01","2023-05-03 15:30:52","2023-05-03 15:30:52","2023-05-03 15:30:52","806-820","","8","52","","Information and Software Technology","Requirements engineering for software product lines","","","","","","","en","","","","","ScienceDirect","","","","","","","Systematic literature review; Requirements engineering; Software product lines","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RA6FDXGJ","journalArticle","2017","Serna M., Edgar; Bachiller S., Oscar; Serna A., Alexei","Knowledge meaning and management in requirements engineering","International Journal of Information Management","","0268-4012","10.1016/j.ijinfomgt.2017.01.005","https://www.sciencedirect.com/science/article/pii/S0268401216306582","It is traditionally assumed that requirements specification, as a product of requirements engineering, has a high impact on the ensuing software development stages. Therefore, the knowledge management used to construct the requirements specification should be performed in a structured manner to discover, analyze and understand the data–information–knowledge chain, both tacit and explicit, that the interested parties possess. In this article, the results of a literature review are presented, seeking to answer the following questions: (1) What is the meaning of knowledge in requirements engineering? (2) What approaches are proposed to manage knowledge in requirements engineering? (3) Can the efficiency and the efficacy of knowledge management models be evidenced in requirements engineering? Thirty-six works were chosen for analysis out of a total 83 found in our search. The analysis showed that (1) knowledge has a central significance at this stage, but the authors have yet to agree on the best methods to impart and apply that knowledge; (2) no general framework has emerged as a validated approach to manage knowledge for requirements engineering; and (3) the evaluation marks for model efficiency and efficacy are low, consisting mostly of personal interpretations.","2017-06-01","2023-05-03 15:34:28","2023-05-03 15:34:28","2023-05-03 15:34:28","155-161","","3","37","","International Journal of Information Management","","","","","","","","en","","","","","ScienceDirect","","","","","","","Software engineering; Requirements elicitation; Knowledge management; Knowledge meaning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5CWM33UC","blogPost","","","Software Requirements Course | IEEE Computer Society","","","","","https://www.computer.org/product/education/software-requirements-course/","Empowering the People who Drive Technology","","2023-05-03 15:36:41","2023-05-03 15:36:41","2023-05-03 15:36:41","","","","","","","","","","","","","","en-US","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DAPFTSA2","conferencePaper","2005","Belani, H.; Pripuzic, K.; Kobas, K.","Implementing web-surveys for software requirements elicitation","Proceedings of the 8th International Conference on Telecommunications, 2005. ConTEL 2005.","978-953-184-081-1 978-953-184-084-2","","10.1109/CONTEL.2005.185931","http://ieeexplore.ieee.org/document/1458610/","This paper presents a practical approach to a survey as one of requirements elicitation techniques. A fundamental goal in requirements engineering is to discover the stakeholders’ real needs. Conducting a good survey enables acquiring the appropriate information from the stakeholders.","2005","2023-05-03 15:36:50","2023-05-03 15:36:51","2023-05-03 15:36:50","465-469","","","","","","","","","","","IEEE","Zagreb, Croatia","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\5TQMK8WP\Belani et al. - 2005 - Implementing web-surveys for software requirements.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2005 Proceedings of the 8th International Conference on Telecommunications","","","","","","","","","","","","","","",""
"44DFUBWI","conferencePaper","2008","Nakatani, Takako; Hori, Shouzo; Ubayashi, Naoyasu; Katamine, Keiichi; Hashimoto, Masaaki","A Case Study: Requirements Elicitation Processes throughout a Project","","978-0-7695-3309-4","","10.1109/RE.2008.46","https://www.computer.org/csdl/proceedings-article/re/2008/3309a241/12OmNBOlljL","Requirements changes sometimes cause a project to fail. A lot of projects now follow incremental development processes so that new requirements and requirements changes can be incorporated as soon as possible.These processes are called integrated requirements processes which integrate requirements processes with other development processes. We have investigated the requirements processes of a project from beginning to end, both quantitatively and qualitatively. Our focus is to clarify the types of requirements based on the components contained within a certain portion of the software architecture. Each type reveals its typical requirements processes through its rationale. The case studied is a system to manage the orders and services of a restaurant. In this paper, we introduce the case and describe the types of requirements processes. Then we discuss the reasons why we could not elicit all the requirements in the early development processes.","2008-09-01","2023-05-03 15:38:04","2023-05-03 15:38:04","2023-05-03 15:38:04","241-246","","","","","","A Case Study","","","","","IEEE Computer Society","","English","","","","","www.computer.org","","ISSN: 1090-705X","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 16th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"KM9GCPB4","conferencePaper","2006","Gall, Mark; Berenbach, Brian","Towards a Framework for Real Time Requirements Elicitation","","978-0-7695-2713-0","","10.1109/MERE.2006.6","https://www.computer.org/csdl/proceedings-article/mere/2006/27130004/12OmNCbCrTE","Eliciting complete and correct requirements is a major  challenge in software engineering and incorrect requirements  are a constant source of defects. It often happens that  requirements are either recorded only partially or not at all.  Also, commonly, the rationale behind the requirements is  not recorded or may be recorded, but is not accessible for  the developers who need this information to support the decision  making process when requirements change or need  clarification. Our proposed framework is designed to solve those problems  by using video to record the requirements elicitation  meetings and automatically extract important stakeholder  statements. Those statements are made available to the  project members as video clips by using an RE database  to access the statements and/or by the integration with the  Sysiphus system.","2006-09-01","2023-05-03 15:38:06","2023-05-03 15:38:06","2023-05-03 15:38:06","4-4","","","","","","","","","","","IEEE Computer Society","","English","","","","","www.computer.org","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2006 First International Workshop on Multimedia Requirements Engineering (MERE'06 - RE'06 Workshop)","","","","","","","","","","","","","","",""
"JVGM5IU6","journalArticle","","Khan, Shadab; Dulloo, Aruna B; Verma, Meghna","Systematic Review of Requirement Elicitation Techniques","","","","","","Requirement Elicitation is one of the important factors in developing any new application. Most of systems fail just because of wrong elicitation practice. A requirement may be defined as a demand or need. In software engineering, a requirement is a description of what a system should do. System may have dozen to thousands of requirements. Without the elicitation techniques it is impossible to find out requirements and the needs of the developing system. It provides base to the developer to construct a structure of proposed system keeping in view the wish list of stake holders. This research paper is based on understanding elicitation techniques and their usage in real time applications, by implementing the Elicitation techniques for knowing the needs of stakeholder so that system developer can get clear view of requirement for the developing system.","","2023-05-03 15:41:54","2023-05-03 15:41:54","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\9WF5Q474\Khan et al. - Systematic Review of Requirement Elicitation Techn.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U92WLC5K","journalArticle","2017","Wong, Lenis R; Mauricio, David S; Rodriguez, Glen D","A SYSTEMATIC LITERATURE REVIEW ABOUT SOFTWARE REQUIREMENTS ELICITATION","","","","","","Requirements Elicitation is recognized as one of the most important activity in software development process as it has direct impact on its success. Although there are many proposals for improving this task, still there are issues which have to be solved. This paper aims to identify the current status of the latest researches related to software requirements elicitation through general framework for literature review, in order to answer the following research questions: Q1) What aspects have been covered by different proposal of requirements elicitation? Q2) What activities of the requirements elicitation process have been covered? And Q3) What factors influence on requirements elicitation and how? A cross-analysis of the outcome was performed. One of the results showed that requirements elicitation process needs improvements.","2017","2023-05-03 15:42:04","2023-05-03 15:42:04","","","","","12","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\S759STE4\Wong et al. - 2017 - A SYSTEMATIC LITERATURE REVIEW ABOUT SOFTWARE REQU.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4EDY9S6I","journalArticle","2013","Meth, Hendrik; Brhel, Manuel; Maedche, Alexander","The state of the art in automated requirements elicitation","Information and Software Technology","","0950-5849","10.1016/j.infsof.2013.03.008","https://www.sciencedirect.com/science/article/pii/S0950584913000827","Context In large software development projects a huge number of unstructured text documents from various stakeholders becomes available and needs to be analyzed and transformed into structured requirements. This elicitation process is known to be time-consuming and error-prone when performed manually by a requirements engineer. Consequently, substantial research has been done to automate the process through a plethora of tools and technologies. Objective This paper aims to capture the current state of automated requirements elicitation and derive future research directions by identifying gaps in the existing body of knowledge and through relating existing works to each other. More specifically, we are investigating the following research question: What is the state of the art in research covering tool support for automated requirements elicitation from natural language documents? Method A systematic review of the literature in automated requirements elicitation is performed. Identified works are categorized using an analysis framework comprising tool categories, technological concepts and evaluation approaches. Furthermore, the identified papers are related to each other through citation analysis to trace the development of the research field. Results We identified, categorized and related 36 relevant publications. Summarizing the observations we made, we propose future research to (1) investigate alternative elicitation paradigms going beyond a pure automation approach (2) compare the effects of different types of knowledge on elicitation results (3) apply comparative evaluation methods and multi-dimensional evaluation measures and (4) strive for a closer integration of research activities across the sub-fields of automatic requirements elicitation. Conclusion Through the results of our paper, we intend to contribute to the Requirements Engineering body of knowledge by (1) conceptualizing an analysis framework for works in the area of automated requirements elicitation, going beyond former classifications (2) providing an extensive overview and categorization of existing works in this area (3) formulating concise directions for future research.","2013-10-01","2023-05-03 15:42:05","2023-05-03 15:42:05","2023-05-03 15:42:03","1695-1709","","10","55","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements Engineering; Automation; Requirements Elicitation; Requirements Reuse; Systematic Review","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5XP8SN5V","report","","","Issues in Requirements Elicitation","","","","","https://apps.dtic.mil/sti/citations/ADA258932","There are many problems associated with requirements engineering, including problems in defining the system scope, problems in fostering understanding among the different communities affected by the development of a given system, and problems in dealing with the volatile nature of requirements. These problems may lead to poor requirements and the cancellation of system development, or else the development of a system that is later judged unsatisfactory or unacceptable, has high maintenance costs, or undergoes frequent changes. By improving requirements elicitation, the requirements engineering process can be improved, resulting in enhanced system requirements and potentially a much better system. Requirements engineering can be decomposed into the activ- ities of requirements elicitation, specification, and validation. Most of the requirements techniques and tools today focus on specification, i.e., the representation of the requirements. This report concentrates instead on elicitation concerns, those problems with requirements engineering that are not adequately addressed by specification techniques. An elicitation methodology is proposed to handle these concerns. This new elicitation methodology strives to incorporate the advantages of existing elicitation techniques while comprehensively addressing the activities performed during requirements elicitation. These activities include fact-finding, requirements gathering, evaluation and rationalization, prioritization, and integration. Taken by themselves, existing elicitation techniques are lacking in one or more of these areas.","","2023-05-03 15:42:10","2023-05-03 15:42:10","2023-05-03 15:42:11","","","","","","","","","","","","","","en","","","","","apps.dtic.mil","","Section: Technical Reports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZB2X677X","conferencePaper","2003","Hickey, A.M.; Davis, A.M.","Requirements elicitation and elicitation technique selection: model for two knowledge-intensive software development processes","36th Annual Hawaii International Conference on System Sciences, 2003. Proceedings of the","","","10.1109/HICSS.2003.1174229","","By its very nature, software development consists of many knowledge-intensive processes. One of the most difficult to model, however, is requirements elicitation. This paper presents a mathematical model of the requirements elicitation process that clearly shows the critical role of knowledge in its performance. One meta-process of requirements elicitation, selection of an appropriate elicitation technique, is also captured in the model. The values of this model are: (1) improved understanding of what needs to be performed during elicitation helps analysts improve their elicitation efforts, (2) improved understanding of how elicitation techniques are selected helps less experienced analysts be as successful as more experienced analysts, and (3) as we improve our ability to perform elicitation, we improve the likelihood that the systems we create meet their intended customers' needs. Many papers have been written that promulgate specific elicitation methods. A few have been written that model elicitation in general. However, none have yet to model elicitation in a way that makes clear the critical role played by knowledge. This paper's model captures the critical roles played by knowledge in both elicitation and elicitation technique selection.","2003-01","2023-05-03 15:42:21","2023-05-03 15:42:21","","10 pp.-","","","","","","Requirements elicitation and elicitation technique selection","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Documentation; Software systems; Knowledge based systems; Mathematical model; Performance analysis; Springs; Writing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","36th Annual Hawaii International Conference on System Sciences, 2003. Proceedings of the","","","","","","","","","","","","","","",""
"MYLMH47V","journalArticle","2004","HICKEY, ANN M.; DAVIS, ALAN M.","A Unified Model of Requirements Elicitation","Journal of Management Information Systems","","0742-1222","10.1080/07421222.2004.11045786","https://doi.org/10.1080/07421222.2004.11045786","Effective requirements elicitation is essential to the success of software development projects. Many papers have been written that promulgate specific elicitation methods. A few model elicitation in general. However, none have yet modeled elicitation in a way that makes clear the critical role played by situational knowledge. This paper presents a unified model of the requirements elicitation process that emphasizes the iterative nature of elicitation as it transforms the current state of the requirements and the situation to an improved understanding of the requirements and, potentially, a modified situation. One meta-process of requirements elicitation, selection of an appropriate elicitation technique, is also captured in the model. The values of this model are: (1) an improved understanding of elicitation helps analysts improve their elicitation efforts and (2) as we improve our ability to perform elicitation, we improve the likelihood that systems we create will meet their intended cus-tomers' needs.","2004-03-01","2023-05-03 15:42:28","2023-05-03 15:42:28","2023-05-03 15:42:28","65-84","","4","20","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Routledge _eprint: https://doi.org/10.1080/07421222.2004.11045786","","","","","requirements analysis; requirements elicitation; systems analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZDA93RM4","book","2005","Zowghi, D.; Coulin, C.","Requirements elicitation: A survey of techniques, approaches, and tools","","978-3-540-25043-2","","","https://opus.lib.uts.edu.au/handle/10453/11626","Requirements elicitation is the process of seeking, uncovering, acquiring, and elaborating requirements for computer based systems. It is generally understood that requirements are elicited rather than just captured or collected. This implies there are discovery, emergence, and development elements in the elicitation process. Requirements elicitation is a complex process involving many activities with a variety of available techniques, approaches, and tools for performing them. The relative strengths and weaknesses of these determine when each is appropriate depending on the context and situation. The objectives of this chapter are to present a comprehensive survey of important aspects of the techniques, approaches, and tools for requirements elicitation, and examine the current issues, trends, and challenges faced by researchers and practitioners in this field. © 2005 Springer-Verlag Berlin Heidelberg.","2005-12-01","2023-05-03 15:42:33","2023-05-03 15:42:33","2023-05-03 15:42:33","","","","","","","Requirements elicitation","","","","","","","","","","","","opus.lib.uts.edu.au","","","","C:\Users\gabra\Zotero\storage\N5WQFL42\Zowghi and Coulin - 2005 - Requirements elicitation A survey of techniques, .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SY54UKX3","journalArticle","2014","Carrizo, Dante; Dieste, Oscar; Juristo, Natalia","Systematizing requirements elicitation technique selection","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.01.009","https://www.sciencedirect.com/science/article/pii/S0950584914000202","Context This research deals with requirements elicitation technique selection for software product requirements and the overselection of open interviews. Objectives This paper proposes and validates a framework to help requirements engineers select the most adequate elicitation techniques at any time. Method We have explored both the existing underlying theory and the results of empirical research to build the framework. Based on this, we have deduced and put together justified proposals about the framework components. We have also had to add information not found in theoretical or empirical sources. In these cases, we drew on our own experience and expertise. Results A new validated approach for requirements technique selection. This new approach selects techniques other than open interview, offers a wider range of possible techniques and captures more requirements information. Conclusions The framework is easily extensible and changeable. Whenever any theoretical or empirical evidence for an attribute, technique or adequacy value is unearthed, the information can be easily added to the framework.","2014-06-01","2023-05-03 15:42:37","2023-05-03 15:42:37","2023-05-03 15:42:37","644-669","","6","56","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\CRBWDXNB\Carrizo et al. - 2014 - Systematizing requirements elicitation technique s.pdf","","","Requirements elicitation; Context attributes; Elicitation techniques; Requirements process; Selecting techniques","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7CIPU3K9","journalArticle","2019","Ferreira Martins, Hugo; Carvalho de Oliveira Junior, Antônio; Dias Canedo, Edna; Dias Kosloski, Ricardo Ajax; Ávila Paldês, Roberto; Costa Oliveira, Edgard","Design Thinking: Challenges for Software Requirements Elicitation","Information","","2078-2489","10.3390/info10120371","https://www.mdpi.com/2078-2489/10/12/371","Agile methods fit well for software development teams in the requirements elicitation activities. It has brought challenges to organizations in adopting the existing traditional methods, as well as new ones. Design Thinking has been used as a requirements elicitation technique and immersion in the process areas, which brings the client closer to the software project team and enables the creation of better projects. With the use of data triangulation, this paper brings a literature review that collected the challenges in software requirements elicitation in agile methodologies and the use of Design Thinking. The result gave way to a case study in a Brazilian public organization project, via user workshop questionnaire with 20 items, applied during the study, in order to identify the practice of Design Thinking in this context. We propose here an overview of 13 studied challenges, from which eight presented strong evidence of contribution (stakeholders involvement, requirements definition and validation, schedule, planning, requirement details and prioritization, and interdependence), three presented partial evidence of contribution and two were not eligible for conclusions (non-functional requirements, use of artifacts, and change of requirements). The main output of this work is to present an analysis of the use of Design Thinking to see if it fits properly to be used as a means of solving the challenges of elicitation of software requirements when using agile methods.","2019-12","2023-05-03 15:42:46","2023-05-03 15:42:46","2023-05-03 15:42:46","371","","12","10","","","Design Thinking","","","","","","","en","http://creativecommons.org/licenses/by/3.0/","","","","www.mdpi.com","","Number: 12 Publisher: Multidisciplinary Digital Publishing Institute","","C:\Users\gabra\Zotero\storage\6G4MV7XG\Ferreira Martins et al. - 2019 - Design Thinking Challenges for Software Requireme.pdf","","","design thinking; requirements elicitation; agile methodology; software evaluation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T5EBJIZ6","conferencePaper","1998","Sommerville, I.; Sawyer, P.; Viller, S.","Viewpoints for requirements elicitation: a practical approach","Proceedings of IEEE International Symposium on Requirements Engineering: RE '98","","","10.1109/ICRE.1998.667811","","The paper introduces an approach to multi perspective requirements engineering (PREview) which has been designed for industrial use and discusses our practical experience in applying PREview. We have developed a flexible model of viewpoints and using examples from an industrial application, show how this can be used to organise system requirements derived from radically different sources. We show how 'concerns', which are key business drivers of the requirements elicitation process, may be used to elicit and validate system requirements. They are decomposed into questions which must be answered by system stakeholders. We briefly describe the process of using PREview which has been designed to allow incremental requirements elicitation. Finally, we discuss some practical considerations which emerged when the approach was applied in industry.","1998-04","2023-05-03 15:42:57","2023-05-03 15:42:57","","74-81","","","","","","Viewpoints for requirements elicitation","","","","","","","","","","","","IEEE Xplore","","","","","","","Design engineering; Collaborative work; Computer industry; Rail transportation; Railway engineering; Aerospace engineering; Aerospace industry; Job shop scheduling; Read only memory; Terminology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of IEEE International Symposium on Requirements Engineering: RE '98","","","","","","","","","","","","","","",""
"YNZ99GZ4","journalArticle","2012","Pacheco, Carla; Garcia, Ivan","A systematic literature review of stakeholder identification methods in requirements elicitation","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2012.04.075","https://www.sciencedirect.com/science/article/pii/S0164121212001288","This paper presents a systematic review of relevant published studies related to topics in Requirements Engineering, specifically, concerning stakeholder identification methods in requirements elicitation, dated from 1984 to 2011. Addressing four specific research questions, this systematic literature review shows the following evidence gathered from these studies: current status of stakeholder identification in software requirement elicitation, the best practices recommended for its performance, consequences of incorrect identification in requirements quality, and, aspects which need to be improved. Our findings suggest that the analyzed approaches still have serious limitations in terms of covering all aspects of stakeholder identification as an important part of requirements elicitation. However, through correctly identifying and understanding the stakeholders, it is possible to develop high quality software.","2012-09-01","2023-05-03 15:43:11","2023-05-03 15:43:11","2023-05-03 15:43:11","2171-2181","","9","85","","Journal of Systems and Software","","Selected papers from the 2011 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2011)","","","","","","en","","","","","ScienceDirect","","","","","","","Software engineering; Systematic review; Requirements engineering; Requirements elicitation; Stakeholder identification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N3VQ82Q2","journalArticle","","Abbasi, Mateen Ahmed; Jabeen, Javeria; Hafeez, Yasir; Batool, Dur-e-Benish; Fareen, Naila","Assessment of Requirement Elicitation Tools and Techniques by Various Parameters","Software Engineering","","","","","Software development cycle is based on the software requirements. Requirement elicitation is first and most important activity in the requirement engineering. If the requirements are efficiently elicited and managed then the stakeholders application can be accomplished within time and budget. If the requirements are not complete, consistent and correct then projects fail because they not meet the user needs. Requirement is define as the needs of customer. Requirement elicitation techniques and tools are used for correct and complete requirement gathering. Many requirement elicitation techniques and tools are available. This study based on the understanding of requirement gathering techniques and tools. The paper also summarizes the comparison of the requirement elicitation techniques and software requirement tools. Comparison of requirement elicitation techniques and tools are based on the various parameters.","","2023-05-03 15:43:13","2023-05-03 15:43:13","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\EDPAQHZ5\Abbasi et al. - Assessment of Requirement Elicitation Tools and Te.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"A9QJ3F62","journalArticle","2010","Fuentes-Fernández, Rubén; Gómez-Sanz, Jorge J.; Pavón, Juan","Understanding the human context in requirements elicitation","Requirements Engineering","","1432-010X","10.1007/s00766-009-0087-7","https://doi.org/10.1007/s00766-009-0087-7","The human context within which a software system will operate is fundamental for its requirements. It may not appear to be very much related to the system, but it is very relevant in achieving its successful adoption. However, requirements engineers have usually a background in Software Engineering and are not trained to elicit this kind of information. This situation raises the need for analytical tools to deal with these features. These tools should enable collaborative work between requirements engineers, who use them in development, social practitioners, who provide the knowledge and processes underlying these tools, and the customers, who know the domain and intended application of the projects. The framework presented in this paper is based on the socio-psychological Activity Theory and its analysis of human contexts. It includes a repository of social properties and a process to perform this elicitation using it. The paper illustrates its application through a case study on the impact of a new system in the organization of a firm.","2010-09-01","2023-05-03 15:43:15","2023-05-03 15:43:15","2023-05-03 15:43:15","267-283","","3","15","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Activity Checklist; Activity Theory; Conflicts; Elicitation methods; Human context; Software psychology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YPWL8MNA","journalArticle","2012","Fernandes, João; Duarte, Diogo; Ribeiro, Claudia; Farinha, Carla; Pereira, João Madeiras; Silva, Miguel Mira da","iThink: A Game-Based Approach Towards Improving Collaboration and Participation in Requirement Elicitation","Procedia Computer Science","","1877-0509","10.1016/j.procs.2012.10.059","https://www.sciencedirect.com/science/article/pii/S1877050912008216","Requirements are the heart of Information Systems development because they determine how the system will operate. There- fore, requirements elicitation is a critical activity of the information systems development life cycle. Recognizing the im- portance of collaborative work and the huge difficulty of gathering stakeholders at the same time and place, researches have been proposing web collaborative tools to elicit requirements. In this article we present a game-based collaborative tool called iThink that aims at improving the participation in a requirement elicitation process. iThink takes advantage of the associa- tion between “gamification” concepts and the six hats of thinking method for collecting both new requirements and feedback about existing ones and for presenting the requirement elicitation process in a form of a collaborative game. Two case-studies, involving several stakeholders, are also presented with the purpose of evaluating the effectiveness and acceptance of this tool.","2012-01-01","2023-05-03 15:43:18","2023-05-03 15:43:18","2023-05-03 15:43:17","66-77","","","15","","Procedia Computer Science","iThink","4th International Conference on Games and Virtual Worlds for Serious Applications(VS-GAMES’12)","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7CZTKUX3\Fernandes et al. - 2012 - iThink A Game-Based Approach Towards Improving Co.pdf","","","Gamification; Requirements Elicitation; Colaboration; Serious Games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VR62DW37","journalArticle","2013","Sharma, Shreta; K. Pandey, S.","Revisiting Requirements Elicitation Techniques","International Journal of Computer Applications","","09758887","10.5120/13166-0889","http://research.ijcaonline.org/volume75/number12/pxc3890889.pdf","The importance of Requirements Engineering (RE) has been well recognized by the research community in the last decade. There is no doubt to say that requirements phase is the foundation of the entire Software Development Life Cycle (SDLC) on which the entire software is built. With the proper management of various activities falling under requirements phase, a project can deliver the right solution within the time and budget. Requirement elicitation, requirement specification, and requirement validation are the important stages to assure the quality of requirement documentations. Out of these, elicitation is the first major activity, which requires proper attention by Requirement Engineers and other related stakeholders. Literature reveals various elicitation techniques, which can be used for the purpose depending upon the nature of project/s. In this paper, an attempt is made to cover all the major elicitation techniques along with their significant aspects at one place. Such a review would enable the concerned stakeholders to understand and select the most appropriate technique to be used for their project/s.","2013-08-23","2023-05-03 15:43:24","2023-05-03 15:43:25","2023-05-03 15:43:24","35-39","","12","75","","IJCA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\TEMJMM7S\Sharma and K. Pandey - 2013 - Revisiting Requirements Elicitation Techniques.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"94JNYJMX","journalArticle","2015","Yousuf, Masooma; M.Asger, M.Asger","Comparison of Various Requirements Elicitation Techniques","International Journal of Computer Applications","","09758887","10.5120/20322-2408","http://research.ijcaonline.org/volume116/number4/pxc3902408.pdf","No requirements elicitation technique has capability of finding all of the software requirements so we have to use variety of techniques that will help us to cover all the requirements, resulting in more effective elicitation. Each technique has its features which makes it different from all other techniques and which make it suitable for a particular condition. The important thing is to use the most appropriate technique. Before using any technique we should have thorough knowledge of that technique. In this paper, we present an in-depth review of different requirements elicitation techniques. We also present Pros and Cons of different elicitation techniques.","2015-04-22","2023-05-03 15:43:33","2023-05-03 15:43:34","2023-05-03 15:43:33","8-15","","4","116","","IJCA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\2DJLZ94K\Yousuf and M.Asger - 2015 - Comparison of Various Requirements Elicitation Tec.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UF89YUET","journalArticle","2010","Chakraborty, Suranjan; Sarker, Saonee; Sarker, Suprateek","An Exploration into the Process of Requirements Elicitation: A Grounded Approach","Journal of the Association for Information Systems","","1536-9323","10.17705/1jais.00225","https://aisel.aisnet.org/jais/vol11/iss4/1","","2010-04-30","2023-05-03 15:43:43","2023-05-03 15:43:43","","","","4","11","","","An Exploration into the Process of Requirements Elicitation","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\V4MYEVSM\Chakraborty et al. - 2010 - An Exploration into the Process of Requirements El.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KRLCFAHK","bookSection","2004","Cysneiros, Luiz Marcio; Yu, Eric","Non-Functional Requirements Elicitation","Perspectives on Software Requirements","978-1-4615-0465-8","","","https://doi.org/10.1007/978-1-4615-0465-8_6","Software developers are constantly under pressure to deliver code on time and on budget. As a result, many projects focus on delivering functionalities at the expense of meeting non-functional requirements such as reliability, security, maintainability, portability, accuracy, among others. As software complexity grows and clients demand higher and higher quality software, non-functional properties can no longer be considered to be of secondary importance. Many systems fail or fall into disuse precisely because of inadequacies in these properties. These nonfunctional aspects have been treated as properties or attributes after the fact. While these properties have always been a concern among software engineering researchers, early work have tended to view them as properties or attributes of the finished software product to be evaluated and measured. Recent work offer the complementary view that they should be treated as requirements to be dealt with from the earliest stages of the software development process [6][7], and then throughout the entire life cycle.","2004","2023-05-03 15:43:51","2023-05-03 15:43:51","2023-05-03 15:43:51","115-138","","","","","","","The Springer International Series in Engineering and Computer Science","","","","Springer US","Boston, MA","en","","","","","Springer Link","","DOI: 10.1007/978-1-4615-0465-8_6","","","","","Behavioral Response; Functional Requirement; Requirement Engineer; Software Development Process; Software Requirement","do Prado Leite, Julio Cesar Sampaio; Doorn, Jorge Horacio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WPELTC84","journalArticle","2000","Thanasankit, Theerasak; Corbitt, Brian","Cultural Context and its Impact on Requirements Elicitation in Thailand","THE ELECTRONIC JOURNAL OF INFORMATION SYSTEMS IN DEVELOPING COUNTRIES","","1681-4835","10.1002/j.1681-4835.2000.tb00002.x","https://onlinelibrary.wiley.com/doi/abs/10.1002/j.1681-4835.2000.tb00002.x","This paper reports one part of an ethnographic study of how software analysts in Thai software houses undertake the requirements engineering process. In this paper the impact of Thai culture on the elicitation of requirements in information systems developed will be reported. The important role of requirements for software and systems development can be traced to the early study of software engineering. Software developers realised that errors during the requirements phase caused high cost in fixing systems and often led to rejection of systems (Laudon and Laudon 1995). This paper compares the nature of elicitation of requirements by systems analysts in Thailand with standard descriptions of elicitation in requirements engineering research. Detailed descriptions of elicitation processes and an evaluation of text are used to suggest that elicitation in Thailand is affected by different use of analytical and elicitation tools, different adaptation of those tools to the elicitation process, an inability to gain full access to all users where requirements can be identified, increased time needed to uncover requirements and an inability to develop requirements specification. This has important implications for Software Houses using western consultants or organisations employing consultants not familiar with Thai Culture. Understanding the nature of the impact of Thai culture on Requirements engineering processes should ensure that project failure due to poor understanding of requirements for systems would be lessened.","2000","2023-05-03 15:43:54","2023-05-03 15:43:54","2023-05-03 15:43:54","1-19","","1","1","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/j.1681-4835.2000.tb00002.x","","C:\Users\gabra\Zotero\storage\UETL9KYB\Thanasankit and Corbitt - 2000 - Cultural Context and its Impact on Requirements El.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BF2NTQ76","journalArticle","2018","Dar, Hafsa; Lali, M. Ikramullah; Ashraf, Humaira; Ramzan, Muhammad; Amjad, Tehmina; Shahzad, Basit","A Systematic Study on Software Requirements Elicitation Techniques and its Challenges in Mobile Application Development","IEEE Access","","2169-3536","10.1109/ACCESS.2018.2874981","","Software Requirements Engineering has paved its roots in both industry and academia, as today's complex systems are programmed to provide efficient user-centric functionalities. This also refers to the emergence of challenges in Requirements Elicitation techniques, approaches, and tools while performing them. Particularly, in the area of Requirements Engineering for software development, a number of techniques and approaches have been observed in literature but for mobile application development, which is different from the traditional software development, has not been discussed much in past studies. Short development cycle, device limitations, and less development time for mobile application development are some of the issues to which there is no `silver bullet' available. Therefore, the Requirement Analysts are in dire need of defined guidelines for Requirement Elicitation in mobile application development. With this study, we aim to provide a detailed overview of Requirements Elicitation techniques and its challenges. We have conducted a systematic literature review by surveying 4507 initial and 36 primary studies. A comprehensive set of 22 elicitation techniques were measured based on quality assessment criteria, including time and cost factors, resource effectiveness, and domain understanding. Furthermore, the challenges in Requirements Elicitation were also grouped into eight different categories based on their applicability. Our study effectively contributes in highlighting Software Requirements Elicitation Techniques and its challenges in mobile application development.","2018","2023-05-03 15:43:58","2023-05-03 15:43:58","","63859-63867","","","6","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Access","","C:\Users\gabra\Zotero\storage\DK5RGDDQ\Dar et al. - 2018 - A Systematic Study on Software Requirements Elicit.pdf","","","requirements engineering; Requirements engineering; Software; software engineering; Mobile communication; android application; Application programming interfaces; Guidelines; Mobile applications; Requirement elicitation; requirement gathering; software development life cycle; Stakeholders","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J89MNXJ8","conferencePaper","2010","Noll, John; Liu, Wei-Ming","Requirements elicitation in open source software development: a case study","Proceedings of the 3rd International Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development","978-1-60558-978-7","","10.1145/1833272.1833279","https://doi.org/10.1145/1833272.1833279","A growing body of empirical research has examined large, successful open source software projects such as the Linux kernel, Apache web server, and Mozilla web browser. Do these results extend to small open source efforts involving a handful of developers? A study of the OpenEMR open source electronic medical record project was conducted, with the goal of understanding how requirements are elicited, documented, agreed, and validated in a small open source software project The results show that the majority of features are asserted by developers, based on either their personal experience, or knowledge of users' needs. Relatively few were requested directly by users. Validation and documentation took the form of informal discussions via the project's developer mailing list. These results are consistent with an earlier study of the Firefox web browser, suggesting that there is a common open source requirements approach that is independent of project size.","2010-05-08","2023-05-03 15:47:15","2023-05-03 15:47:15","2023-05-03","35–40","","","","","","Requirements elicitation in open source software development","FLOSS '10","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\9M9HWIVV\Noll and Liu - 2010 - Requirements elicitation in open source software d.pdf","","","electronic health record; electronic medical record; open source software; software requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z5XMR347","journalArticle","2019","Aldave, Ainhoa; Vara, Juan M.; Granada, David; Marcos, Esperanza","Leveraging creativity in requirements elicitation within agile software development: A systematic literature review","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2019.110396","https://www.sciencedirect.com/science/article/pii/S0164121219301712","Agile approaches tend to focus solely on scoping and simplicity rather than on problem solving and discovery. This hampers the development of innovative solutions. Additionally, little has been said about how to capture and represent the real user needs. To fill this gap, some authors argue in favor of the application of “Creative thinking” for requirements elicitation within agile software development. This synergy between creativeness and agility has arisen as a new means of bringing innovation and flexibility to increasingly demanding software. The aim of the present study is therefore to employ a systematic review to investigate the state-of-the-art of those approaches that leverage creativity in requirements elicitation within Agile Software Development, as well as the benefits, limitations and strength of evidence of these approaches. The review was carried out by following the guidelines proposed by Dr. Kitchenham. The search strategy identified 1451 studies, 17 of which were eventually classified as primary studies. The selected studies contained 13 different and unique proposals. These approaches provide evidence that enhanced creativity in requirements elicitation can be successfully implemented in real software projects. We specifically observed that projects related to user interface development, such as those for mobile or web applications, are good candidates for the use of these approaches. We have also found that agile methodologies such as Scrum, Extreme Programming or methodologies based on rapid modelling are preferred when introducing creativity into requirements elicitation. Despite this being a new research field, there is a mixture of techniques, tools and processes that have already been and are currently being successfully tested in industry. Finally, we have found that, although creativity is an important ingredient with which to bring about innovation, it is not always sufficient to generate new requirements because this needs to be followed by user engagement and a specific context in which proper conditions, such as flexibility, time or resources, have to be met.","2019-11-01","2023-05-03 15:47:22","2023-05-03 15:47:22","2023-05-03 15:47:22","110396","","","157","","Journal of Systems and Software","Leveraging creativity in requirements elicitation within agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\IUV942PH\Aldave et al. - 2019 - Leveraging creativity in requirements elicitation .pdf","","","Systematic review; Requirements elicitation; Agile methodologies; Creative thinking; Software development; Software project management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GB9A4STN","journalArticle","2005","Razali, Rozilawati; Anwar, Fares","SELECTING THE RIGHT STAKEHOLDERS FOR REQUIREMENTS ELICITATION: A SYSTEMATIC APPROACH",". Vol.","","","","","Requirements elicitation is the most critical phase in software development as it captures the required functionality of a software system. The elicitation process is indeed resource intensive. It involves a number of dedicated stakeholders who are deliberately gathered to confer and stipulate software requirements. The effectiveness of the process is greatly influenced by the credibility and suitability of the stakeholders involved. Correct and complete requirements could only be achieved if they are gathered from the right stakeholders. Therefore, there is a need of systematic approach that could help in identifying and choosing the appropriate stakeholders. As stakeholder participation can be enormous, the approach should also embrace prioritization. This study addresses this issue by collating important elements that contribute to an effective selection of stakeholders for requirement elicitation purposes. The elements were identified through reviews of related work, which were analyzed by using content analysis. The elements were then integrated as a conceptual framework that consists of a step-by-step procedure. The framework can be used by practitioners to execute the selection process. To researchers, the study proposes several mechanisms to support the approach as a guide for future research.","2005","2023-05-03 15:47:23","2023-05-03 15:47:23","","","","","33","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\39GHRI2P\Razali and Anwar - 2005 - SELECTING THE RIGHT STAKEHOLDERS FOR REQUIREMENTS .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WCBEDWBS","journalArticle","2001","Browne, Glenn J.; Rogich, Michael B.","An Empirical Investigation of User Requirements Elicitation: Comparing the Effectiveness of Prompting Techniques","Journal of Management Information Systems","","0742-1222","10.1080/07421222.2001.11045665","https://doi.org/10.1080/07421222.2001.11045665","Eliciting requirements from users and other stakeholders is of central importance to information systems development. Despite this importance, surprisingly little research has measured the effectiveness of various requirements elicitation techniques. The present research first discusses theory relevant to information requirements determination in general and elicitation in particular.We then develop a model of the requirements elicitation process. This model and its underlying theory were then used to construct a new requirements elicitation prompting technique. To provide a context for testing the relative effectiveness of the new technique, two other questioning methodologies were also operationalized as prompting techniques: (1) the interrogatories technique, which involves asking ""who,"" ""what,"" ""when,"" ""where,"" ""how,"" and ""why""; questions; and (2) a semantic questioning scheme, which involves asking questions based on a theoretical model of knowledge structures. To measure the usefulness of the prompting techniques in eliciting requirements, a set of generic requirements categories was adapted from previous research to capture requirements evoked by users. The effectiveness of the three methods in eliciting requirements for a software application was then tested in an experiment with users. Results showed that the new prompting technique elicited a greater quantity of requirements from users than did the other two techniques. Implications of the findings for research and systems analysis practice are discussed.","2001-03-01","2023-05-03 15:47:26","2023-05-03 15:47:26","2023-05-03 15:47:25","223-249","","4","17","","","An Empirical Investigation of User Requirements Elicitation","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Routledge _eprint: https://doi.org/10.1080/07421222.2001.11045665","","","","","INFORMATION SYSTEMS DEVELOPMENT PROMPTING TECHNIQUES REQUIREMENTS ELICITATION SYSTEMS ANALYSIS","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WBM2KSJ2","journalArticle","2014","Iqbal, Tabbassum; Suaib, Mohammad","Requirement Elicitation Technique: -A Review Paper","International Journal of Computer & Mathematical Sciences","","","","","Requirement Elicitation is important for developing any new application. Due to wrong elicitation decision most of the system fails. It is impossible to find out requirements and the needs of the users without help of elicitation technique. The most common challenge for analysts during elicitation process is to ensure effective communication between analyst and the users. Most of the error comes in the system because of poor communication between user and analyst. This research paper is based on understanding elicitation techniques and their usage in real time applications, by implementing the Elicitation techniques in a new application. According to this research paper we cover the gap between analyst and the users by implementing requirement elicitation technique.","2014-12-01","2023-05-03 15:47:31","2023-05-03 15:47:31","","1","","","3","","International Journal of Computer & Mathematical Sciences","Requirement Elicitation Technique","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\JAIFD9FY\Iqbal and Suaib - 2014 - Requirement Elicitation Technique -A Review Paper.pdf; ","https://www.researchgate.net/profile/Mohammad-Suaib/publication/272944882_Requirement_Elicitation_Technique_-A_Review_Paper/links/54f412140cf2f9e34f08d5b2/Requirement-Elicitation-Technique-A-Review-Paper.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QIAFQYDR","journalArticle","","Tuunanen, Tuure","A New Perspective on Requirements Elicitation Methods","","","","","","We open a new area of discussion in requirements elicitation and we argue that a new category of end-users is emerging: wide-audience end-users (WAEU). We propose that current literature does not acknowledge the elicitation needs of WAEUs. To support our argument, we develop a framework consisting of two dimensions, reach and communication, in order to review the literature. Using this framework, we form a perspective on the state of research in the area, and determine that academia is moving in the right direction in the development of new elicitation methods. However, we argue that at the moment, no one method or technique presents an integrated solution. To fill this gap, we present three studies that enable us to argue that WAEUs are reachable, but that more work is needed in the field. We propose some suggestions on how this could be done, and identify three areas needing further research: selection of the participants, representation of requirements across stakeholders, and integration of risk in selecting the elicitation method.","","2023-05-03 15:47:33","2023-05-03 15:47:33","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\2T2F5ITJ\Tuunanen - A New Perspective on Requirements Elicitation Meth.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V5KAIHNY","journalArticle","1999","Durán Toro, Amador; Bernárdez Jiménez, Beatriz; Ruiz Cortés, Antonio; Toro Bonilla, Miguel","A Requirements Elicitation Approach Based in Templates and Patterns","","","","","https://idus.us.es/handle/11441/26374","One of the main problems of requirements elicitation is expressing customer requirements in a form that can be understood not only by requirements engineers but also by noncomputer professional customers and users. The usual choice for expressing elicited requirements is natural language, since it is frequently the only common language to all participants. Problems of natural language are well–known, but using more formal notations too early is a risky choice that can make requirements impossible to understand for customers and users. Moreover, requirements engineers do not usually have good writing skills, and sometimes semantically correct requirements, expressed in natural language, are not understood because of the way they are written. in this paper, we present requirements templates that can improve requirements elicitation and expression, and two kinds of patterns: linguistic patterns, which are very used sentences in natural language requirements descriptions that can be parameterized and integrated into templates, and requirements patterns, which are generic requirements templates that are found very often during the requirements elicitation process and that can be reused with some adaptation.","1999","2023-05-03 15:47:37","2023-05-03 15:47:37","2023-05-03 15:47:37","","","","","","","","","","","","","","eng","Atribución-NoComercial-SinDerivadas 4.0 España","","","","idus.us.es","","Accepted: 2015-06-29T14:55:33Z","","C:\Users\gabra\Zotero\storage\JXJIFK5A\Durán Toro et al. - 1999 - A Requirements Elicitation Approach Based in Templ.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WMIV2LWL","journalArticle","2018","Mishra, Deepti; Aydin, Seçil; Mishra, Alok; Ostrovska, Sofiya","Knowledge management in requirement elicitation: Situational methods view","Computer Standards & Interfaces","","0920-5489","10.1016/j.csi.2017.09.004","https://www.sciencedirect.com/science/article/pii/S092054891630229X","In small-scale software development organizations, software engineers are beginning to realize the significance of adapting software development methods according to project conditions. There is a requirement to proliferate this know-how to other developers, who may be facing the same settings/context, so that they too can benefit from others’ experiences. In this paper, the application of situational method engineering in requirements elicitation phase is investigated. A novel, simple and dynamic web-based tool, Situational Requirement Method System (SRMS), is developed which can aid in conception/formulation, repository, and elicitation/derivation of methods related with this stage. The proposed approach and tool are validated by distributing a questionnaire among software professionals working in large software companies, and making SRMS accessible to them. The results indicate that a majority of the participants finds SRMS useful and provides various suggestions to improve it.","2018-02-01","2023-05-03 15:47:43","2023-05-03 15:47:43","2023-05-03 15:47:43","49-61","","","56","","Computer Standards & Interfaces","Knowledge management in requirement elicitation","","","","","","","en","","","","","ScienceDirect","","","","","","","Knowledge management; Requirement elicitation; Requirement engineering; Situational method engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IHBL77LB","journalArticle","2015","Ghanbari, Hadi; Similä, Jouni; Markkula, Jouni","Utilizing online serious games to facilitate distributed requirements elicitation","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2015.07.017","https://www.sciencedirect.com/science/article/pii/S0164121215001491","Requirements elicitation is one of the most important and challenging activities in software development projects. A variety of challenges related to requirements elicitation are reported in the literature, of which the lack of proper communication and knowledge transfer between software stakeholders are among the most important. Communication and knowledge transfer are becoming even bigger challenges with the current increase in globally distributed software development projects due to the temporal, geographic, and sociocultural diversity among software stakeholders. In this study, we propose a new approach to requirements elicitation, which employs online serious games for gathering requirements from distributed software stakeholders. The feasibility and effectiveness of the proposed approach were evaluated in an empirical study with encouraging results. These results especially reveal that our suggested approach enables less-experienced individuals to identify a higher number of requirements. Our results also reveal that for the majority of subjects, especially individuals with less technical experience, this approach was a pleasant and easy way of participating in requirements elicitation. Based on these results we suggest that using online serious games not only enhances innovation and creativity among end-users but also facilitates collaboration and communication among software stakeholders. Implications for both research and practice are considered.","2015-11-01","2023-05-03 15:47:49","2023-05-03 15:47:49","2023-05-03 15:47:49","32-49","","","109","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\CK8MILLG\Ghanbari et al. - 2015 - Utilizing online serious games to facilitate distr.pdf","","","Global software development; Innovative requirements elicitation; Serious games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"37XRU6DY","journalArticle","","Zhang, Zheying","Effective Requirements Development - A Comparison of Requirements Elicitation techniques","","","","","","","","2023-05-03 15:47:51","2023-05-03 15:47:51","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\ZKF7QQ2P\Zhang - Effective Requirements Development - A Comparison .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6L9B39NB","journalArticle","1990","Holbrook, H.","A scenario-based methodology for conducting requirements elicitation","ACM SIGSOFT Software Engineering Notes","","0163-5948","10.1145/382294.382725","https://dl.acm.org/doi/10.1145/382294.382725","Requirements analysis is the process of identifying a user's needs and determining what to build in an a system. Within requirements analysis is the process of requirements elicitation in which tacit information about ""what to build"" is obtained from the user and his environment. Here, we will describe a methodology, dubbed Scenario Based Requirements Elicitation (SBRE), which structures the early interaction between users and designers in order to quickly develop a set of initial requirements. The methodology features the parallel development of requirements and a high-level design, the use of scenarios to communicate the behavior of a design, an evaluation function to assess the suitability of the design, and an issue base with which to maintain the issues that arise during the elicitation process.","1990-01-01","2023-05-03 15:47:53","2023-05-03 15:47:53","2023-05-03 15:47:53","95–104","","1","15","","SIGSOFT Softw. Eng. Notes","","","","","","","","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\H4G3JY6Q\Holbrook - 1990 - A scenario-based methodology for conducting requir.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JHBK4YF4","journalArticle","2020","Saeeda, Hina; Dong, Junyu; Wang, Yong; Abid, Muhammmad Adil","A proposed framework for improved software requirements elicitation process in SCRUM: Implementation by a real-life Norway-based IT project","Journal of Software: Evolution and Process","","2047-7481","10.1002/smr.2247","https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.2247","Software requirement engineering (SRE) is the initial stage of the software engineering process and entails several challenges relating to the identification, implementation, evolution, and management of requirements for the development of software systems that meet the desired functionality quality standards. Agile software development (ASD) is a well-known software development process that follows a lightweight and adaptive methodology to support the incremental development of software systems. Since the ASD follows an adaptive procedure (ie, a flexible, nanostructured, and dynamic approach) of software development, it becomes challenging to perform SRE that follows a structured approach for managing software requirements throughout the life cycle of software development. The primary challenges for SRE, while pursuing an ASD, include, but are not limited to, identification of incomplete requirements, implementation of vague requirements, prioritization of secondary functional requirements, and compromise on users' involvement that negatively impacts the software system's functionality and quality. To overcome these challenges, some of the recent research efforts have focused on managing different phases of SRE during software development using the ASD. However, there is a lack of solutions that provide software engineers/practitioners with a solution. Besides, frameworks to effectively manage all the phases of SRE as per the needs of the ASD are needed. We propose a framework that unifies joint requirements document (JRD) and SCRUM to incrementally (a) identify, (b) implement, (c) evolve, and (d) manage system requirements throughout the software development cycle. We have used the action research method to qualitatively validate the proposed framework based on data and user requirements collected from a product-focused (multinational) Norway-based software company. The results of the validation are based on statistical analysis that reflects the usefulness of the proposed framework for SRE in ASD-based software engineering and development. Future research is the possible application of a machine learning approach (es) in the intended context for agile requirements elicitations.","2020","2023-05-03 15:47:56","2023-05-03 15:47:56","2023-05-03 15:47:56","e2247","","7","32","","","A proposed framework for improved software requirements elicitation process in SCRUM","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.2247","","","","","SCRUM; agile software engineering; joint requirements development; mind mapping; software requirement engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HU8NCQ7L","journalArticle","2019","Garcia, Ivan; Pacheco, Carla; León, Andrés; Calvo-Manzano, Jose A.","Experiences of using a game for improving learning in software requirements elicitation","Computer Applications in Engineering Education","","1099-0542","10.1002/cae.22072","https://onlinelibrary.wiley.com/doi/abs/10.1002/cae.22072","Many recent studies have demonstrated that the traditional methods used in teaching software requirements elicitation are ineffective because they frequently produce unskilled graduates who are inappropriately trained to apply their practical knowledge in the workplace. Therefore, the combination of traditional teaching approaches and modern learning tools has been used to better prepare undergraduate students. Biyubi is a game that has been developed to complement traditional teaching in order to facilitate the learning of requirements elicitation activities on an undergraduate Software Engineering course. Biyubi provides a simulated environment for students so that they can explore, analyze, and discover the wishes and needs of the correct stakeholders. This game has been tested and validated by undergraduate students from the NovaUniversitas University, Mexico. The use of Biyubi achieved an increase in the motivation, satisfaction, and learning experience of students in requirements elicitation. The game has the potential to better explain the proper use of a requirements elicitation technique while the technical skills of the students are also improved.","2019","2023-05-03 15:48:02","2023-05-03 15:48:02","2023-05-03 15:48:02","249-265","","1","27","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cae.22072","","C:\Users\gabra\Zotero\storage\Z8RD26ZW\Garcia et al. - 2019 - Experiences of using a game for improving learning.pdf","","","requirements elicitation; education; game; learning-by-doing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZD3ZESAL","journalArticle","2014","Ribeiro, Claudia; Farinha, Carla; Pereira, João; Mira da Silva, Miguel","Gamifying requirement elicitation: Practical implications and outcomes in improving stakeholders collaboration","Entertainment Computing","","1875-9521","10.1016/j.entcom.2014.04.002","https://www.sciencedirect.com/science/article/pii/S1875952114000135","The requirements engineering process is a key phase of the Information System development since it determines its functionalities and its operation. Before requirements can be analyzed, modeled, or specified they must be gathered through an elicitation process. Requirements elicitation is non-trivial because you can never be sure you get all requirements from the user or stakeholder by just asking them what the system should do. Requirements elicitation practices include interviews, questionnaires, user observation, workshops, brainstorming, use cases, role playing and prototyping. However, these common procedures are still prone to be ambiguous or incorrect which can lead the Information Systems to failure. It is consensual that one of the major problem of this activity relates to the communication and collaboration between different and distant stakeholders. Thus, recent studies have been proposing web collaborative tools to gather these stakeholders in order to elicit requirements. The paper aims to evaluate the effectiveness and acceptance of such a collaborative tool which was developed by using a gamification approach and the Six Thinking Hats method. The document also makes a discussion of the implication and outcomes of improving stakeholders collaboration.","2014-12-01","2023-05-03 15:48:05","2023-05-03 15:48:05","2023-05-03 15:48:04","335-345","","4","5","","Entertainment Computing","Gamifying requirement elicitation","","","","","","","en","","","","","ScienceDirect","","","","","","","Collaboration; Gamification; Requirements elicitation; Communication; Cooperation; Six Thinking Hats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T25K8U9Z","conferencePaper","2009","Castro-Herrera, Carlos; Duan, Chuan; Cleland-Huang, Jane; Mobasher, Bamshad","A recommender system for requirements elicitation in large-scale software projects","Proceedings of the 2009 ACM symposium on Applied Computing","978-1-60558-166-8","","10.1145/1529282.1529601","https://doi.org/10.1145/1529282.1529601","In large and complex software projects, the knowledge needed to elicit requirements and specify the functional and behavioral properties can be dispersed across many thousands of stakeholders. Unfortunately traditional requirements engineering techniques, which were primarily designed to support face-to-face meetings, do not scale well to handle the needs of larger projects. We therefore propose a semi-automated requirements elicitation framework which uses data-mining techniques and recommender system technologies to facilitate stakeholder collaboration in a large-scale, distributed project. Our proposed recommender model is a hybrid one designed to manage the placement of stakeholders into highly focused discussion forums, where they can work collaboratively to generate requirements. In our approach, statements of need are first gathered from the project stakeholders; unsupervised clustering techniques are then used to identify cohesive and finely-grained themes and a users' profile is constructed according to the interests of the stakeholders in each of these themes. This profile feeds information to a collaborative recommender, which predicts stakeholders' interests in additional forums. The validity and effectiveness of the proposed recommendation framework is evaluated through a series of experiments using feature requests from three software systems.","2009-03-08","2023-05-03 15:48:08","2023-05-03 15:48:08","2023-05-03","1419–1426","","","","","","","SAC '09","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","collaborative recommender systems; large-scale software engineering; requirements clustering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T2CKMDXK","journalArticle","2013","Azadegan, Aida; Papamichail, K. Nadia; Sampaio, Pedro","Applying collaborative process design to user requirements elicitation: A case study","Computers in Industry","","0166-3615","10.1016/j.compind.2013.05.001","https://www.sciencedirect.com/science/article/pii/S0166361513000961","User requirements play a central role in software development processes by bridging the needs of business to the software. In many cases stakeholders who have different perspectives and expectations about the future system need to collaborate to clarify, capture and uncover user requirements in an efficient and effective manner. Many industry experts have admitted that collaboration among stakeholders in a facilitated workshop, aimed at defining and articulating user requirements, is one of the most difficult tasks in software development. The aim of the research described in this paper is to present a process that can address the challenges of collaborative user requirements elicitation workshops. The process contains activities that correspond to a pattern of collaboration. Developed on a pattern-based architecture, the process is reusable and can be applied to similar user requirements elicitation workshops. To achieve this goal, the principles of Collaboration Engineering (CE) are applied to design collaborative processes that consist of ThinkLets, a set of facilitation scripts and process-building blocks, bundled together. The process is evaluated in practice by running facilitated workshops as well as by collecting experts’ comments and opinions. The results indicate that the approach is usable and useful. The paper concludes with further elaboration and discussions on research contribution and potential future work in the field.","2013-09-01","2023-05-03 15:49:09","2023-05-03 15:49:09","2023-05-03 15:49:09","798-812","","7","64","","Computers in Industry","Applying collaborative process design to user requirements elicitation","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements elicitation; Collaboration Engineering; Group facilitation; ThinkLet; Workshop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VCG2E6YG","conferencePaper","2011","Umber, Ashfa; Bajwa, Imran Sarwar; Asif Naeem, M.","NL-Based Automated Software Requirements Elicitation and Specification","Advances in Computing and Communications","978-3-642-22714-1","","10.1007/978-3-642-22714-1_4","","This paper presents a novel approach to automate the process of software requirements elicitation and specification. The software requirements elicitation is perhaps the most important phase of software development as a small error at this stage can result in absurd software designs and implementations. The automation of the initial phase (such as requirement elicitation) phase can also contribute to a long standing challenge of automated software development. The presented approach is based on Semantic of Business Vocabulary and Rules (SBVR), an OMG’s recent standard. We have also developed a prototype tool SR-Elicitor (an Eclipse plugin), which can be used by software engineers to record and automatically transform the natural language software requirements to SBVR software requirements specification. The major contribution of the presented research is to demonstrate the potential of SBVR based approach, implemented in a prototype tool, proposed to improve the process of requirements elicitation and specification.","2011","2023-05-03 15:49:12","2023-05-03 15:49:12","","30-39","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\YCJHY4AJ\Umber et al. - 2011 - NL-Based Automated Software Requirements Elicitati.pdf","","","Requirements Elicitation; Natural Language Processing; Requirement Engineering; Requirements Specification","Abraham, Ajith; Lloret Mauri, Jaime; Buford, John F.; Suzuki, Junichi; Thampi, Sabu M.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LF8NZ9M9","journalArticle","2021","Lim, Sachiko; Henriksson, Aron; Zdravkovic, Jelena","Data-Driven Requirements Elicitation: A Systematic Literature Review","SN Computer Science","","2661-8907","10.1007/s42979-020-00416-4","https://doi.org/10.1007/s42979-020-00416-4","Requirements engineering has traditionally been stakeholder-driven. In addition to domain knowledge, widespread digitalization has led to the generation of vast amounts of data (Big Data) from heterogeneous digital sources such as the Internet of Things (IoT), mobile devices, and social networks. The digital transformation has spawned new opportunities to consider such data as potentially valuable sources of requirements, although they are not intentionally created for requirements elicitation. A challenge to data-driven requirements engineering concerns the lack of methods to facilitate seamless and autonomous requirements elicitation from such dynamic and unintended digital sources. There are numerous challenges in processing the data effectively to be fully exploited in organizations. This article, thus, reviews the current state-of-the-art approaches to data-driven requirements elicitation from dynamic data sources and identifies research gaps. We obtained 1848 hits when searching six electronic databases. Through a two-level screening and a complementary forward and backward reference search, 68 papers were selected for final analysis. The results reveal that the existing automated requirements elicitation primarily focuses on utilizing human-sourced data, especially online reviews, as requirements sources, and supervised machine learning for data processing. The outcomes of automated requirements elicitation often result in mere identification and classification of requirements-related information or identification of features, without eliciting requirements in a ready-to-use form. This article highlights the need for developing methods to leverage process-mediated and machine-generated data for requirements elicitation and addressing the issues related to variety, velocity, and volume of Big Data for the efficient and effective software development and evolution.","2021-01-04","2023-05-03 15:49:22","2023-05-03 15:49:22","2023-05-03 15:49:22","16","","1","2","","SN COMPUT. SCI.","Data-Driven Requirements Elicitation","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\U68FQBBW\Lim et al. - 2021 - Data-Driven Requirements Elicitation A Systematic.pdf","","","Requirements engineering; Requirements elicitation; Automation; Big Data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MGRDYN2Z","journalArticle","2012","Mulla, Nilofar","A New Approach to Requirement Elicitation Based on Stakeholder Recommendation andCollaborative Filtering","International Journal of Software Engineering & Applications","","09762221","10.5121/ijsea.2012.3305","http://www.airccse.org/journal/ijsea/papers/3312ijsea05.pdf","The customers' needs in a software project are identified in the process of Software requirements elicitation. For building a software system this process is considered as one of the most important parts. In this part it is decided precisely what will be built. A close interaction between developers and end-users of the system is needed by requirements’ gathering. Meetings can be costly, inconvenient and infrequent if developers and end-users are in different organizations or different cities. The quality of the elicited requirements can greatly be impacted if there is a problem of communication. Requirement elicitation is a process difficult to scale to large software projects with many stakeholders which involves identifying and prioritizing requirements. A stakeholder is an individual or a group who can influence or be influenced by the success or failure of a project. Existing methods to identify and prioritize requirements do not scale well to large projects. Large projects tend to be beset by three problems: information overload, inadequate stakeholder input, and biased prioritization of requirements. Existing methods to identify and prioritize requirements do not scale well to large projects. Existing requirements prioritization methods require substantial efforts from the requirements engineers when there are many requirements. To address the problems Stakeholder recommender model will contain steps:-Identify the large project, Analysis of requirements, Identify and prioritize stakeholders, Predict requirements, Prioritize requirements. For making predictions, our approach will use one of the most well known algorithms that is k-Nearest Neighbor (kNN) algorithm. KNN is used to identify like-minded users with similar rating histories in order to predict ratings for unobserved users-item pairs. A unique subset of the community for each user is found out by KNN by identifying those with similar interests. To do so, every pair of user profile is compared to measure the degree of similarity. A neighbourhood is created for each user by selecting the k most similar users. The similarity between each pair of user profiles for users in the neighbourhood is used to compute predicted ratings. Finally, the predicted ratings for the items are sorted according to the predicted value, and the top-N items are proposed to the user as recommendations, where N is the number of items recommended to the user.","2012-05-31","2023-05-03 15:49:24","2023-05-03 15:49:25","2023-05-03 15:49:24","51-60","","3","3","","IJSEA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\HDGDY5EY\Mulla - 2012 - A New Approach to Requirement Elicitation Based on.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KHW3EVQD","journalArticle","2019","Ali, Zahid; Yaseen, Muhammad; Ahmed, Salman","Effective communication as critical success factor during requirement elicitation in global software development","","","","","","Requirements implementation is difficult phase of software engineering. In Global Software Development (GSD) it becomes more difficult to collect user requirements. Effective and proper communication between clients and vendors in GSD has significant role in successful collection of requirements. There is need to analyze how role of effective communication varies for different company sizes, time period experimental methods and from continent to continent. Systematic Literature Review (SLR) is applied to achieve goals and objectives.","2019","2023-05-03 15:49:30","2023-05-03 15:49:30","","","","","8","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\7SDGTSHK\Ali et al. - 2019 - Effective communication as critical success factor.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BJL2TG3J","journalArticle","1997","Goldin, Leah; Berry, Daniel M.","AbstFinder, A Prototype Natural Language Text Abstraction Finder for Use in Requirements Elicitation","Automated Software Engineering","","1573-7535","10.1023/A:1008617922496","https://doi.org/10.1023/A:1008617922496","Abstraction identification is named as a key problem in requirements analysis. Typically, the abstrac-tions must be found among the large mass of natural language text collected from the clients and users. This paper motivates and describes a new approach, based on traditional signal processing methods. for finding abstractions in natural language text and offers a new tool, AbstFinder as an implementation of this approach. The advantages and disadvantages of the approach and the design of the tool are discussed in detail. Various scenarios for use of the tool are offered. Some of these scenarios were used in case study of the effectiveness of rhe tool on an industrial-strength example of finding abstractions in a request for proposals.","1997-10-01","2023-05-03 15:49:36","2023-05-03 15:49:36","2023-05-03 15:49:36","375-412","","4","4","","Automated Software Engineering","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\N5VZLYHF\Goldin and Berry - 1997 - AbstFinder, A Prototype Natural Language Text Abst.pdf","","","requirements elicitation; abstraction finder; evaluation of tool; natural language text; tool use method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ESR2I4US","journalArticle","2020","Li, Jinyu; Ullah, Asif; Li, Jun; Nazir, Shah; Khan, Habib Ullah; Ur Rehman, Hanif; Haq, Amin Ul","Attributes-Based Decision Making for Selection of Requirement Elicitation Techniques Using the Analytic Network Process","Mathematical Problems in Engineering","","1024-123X","10.1155/2020/2156023","https://www.hindawi.com/journals/mpe/2020/2156023/","Requirement engineering is the first phase of software engineering. In requirement engineering, the first phase is requirement elicitation (RE), which is the most critical and error-prone activity. In this phase, the requirements are extracted from various sources; after extraction, they are analyzed and documented for a specific purpose of software development. In RE, process requirements from stakeholders are gathered, upon which the entire software product failure and success are dependent. In order to accomplish the goal of requirement elicitation, various techniques are used. However, the selection of these techniques is a very challenging task, as one technique may suit a situation but may not be suited for other situations. Besides this, project attributes such as documentation culture of organization, degree of relationship among stakeholders, and familiarity to domain also have a great impact on the process of technique selection. The reason is that there is no empirical value of the techniques that provide help in techniques selection to analyze the basis software project attributes. This study proposed the analytic network process, which is one of the multicriteria decision making processes for the elicitation technique selection process with respect to criterion attributes of project. The motivation toward the use of the ANP approach for the selection of requirement selection technique is that there are dependencies existing among attributes of the project elements. So, the ANP approach is capable of dealing with such situations where dependencies and complexity occur. Results of the proposed study demonstrate that the technique helps in complex situations where decision making is difficult based on the alternatives.","2020-09-08","2023-05-03 15:51:32","2023-05-03 15:51:32","2023-05-03 15:51:32","e2156023","","","2020","","","","","","","","","","en","","","","","www.hindawi.com","","Publisher: Hindawi","","C:\Users\gabra\Zotero\storage\VABZVUSB\Li et al. - 2020 - Attributes-Based Decision Making for Selection of .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6ZAZX5MZ","journalArticle","2017","Ali, Naveed; Lai, Richard","A method of requirements elicitation and analysis for Global Software Development","Journal of Software: Evolution and Process","","2047-7481","10.1002/smr.1830","https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1830","To perform requirements elicitation and analysis, effective communication and collaboration between stakeholders are necessary. Global Software Development (GSD), where software teams are located in different parts of the world, has become increasingly popular. However, geographical distance, cultural diversity, differences in time zones, and language barriers create difficulties for GSD stakeholders in engaging in effective communication. Taking into consideration the factors involved in GSD, previous research showed that the ways by which requirements are gathered and analyzed for collocated software development cannot be used effectively for GSD. Thus, in this paper, we present a method of requirements elicitation and analysis for GSD. The method consists of 4 stages: (1) data collection; (2) educating stakeholders about GSD issues; (3) post-education assessment; and (4) requirements elicitation and analysis. Past researchers used student groups in a university environment to play the roles of stakeholders in experiments in GSD studies. Likewise, we preliminarily validate our method by applying it to a case study of an online shopping system, where the roles of client, requirements engineer, project analyst, and designers were played by a group of students.","2017","2023-05-03 15:51:38","2023-05-03 15:51:38","2023-05-03 15:51:38","e1830","","4","29","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1830","","","","","requirements analysis; requirements elicitation; distributed teams; Global Software Development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R3CS33JS","journalArticle","2010","Aranda, Gabriela N.; Vizcaíno, Aurora; Piattini, Mario","A framework to improve communication during the requirements elicitation process in GSD projects","Requirements Engineering","","1432-010X","10.1007/s00766-010-0105-9","https://doi.org/10.1007/s00766-010-0105-9","Achieving a shared understanding of requirements is difficult in any situation, even more so in global software development projects. In such environments, people must deal not only with the lack of face to face communication, but also with other issues such as time difference, cultural diversity and a large amount of information originating from different sources throughout the world. Obtaining the right requirements therefore implies extra effort. In order to minimize such problems, we propose a framework that focuses on analyzing the factors that may be problematic in global software development and which suggests a set of strategies to improve the requirements elicitation process in such environments. In this paper, we describe the different phases of our framework and present the results of an experiment that test part of this framework. The results indicate that applying some of the strategies proposed in the framework seems to positively affect the stakeholders’ satisfaction with regard to communication. Moreover, the quality of the written software requirements specifications seems to be better as well when using those strategies.","2010-11-01","2023-05-03 15:51:41","2023-05-03 15:51:41","2023-05-03 15:51:41","397-417","","4","15","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Global software development; Cognitive informatics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3FEIAN3S","journalArticle","","Kassel, Neil W; Malloy, Brian A","AN APPROACH TO AUTOMATE REQUIREMENTS ELICITATION AND SPECIFICATION","","","","","","This paper presents an approach to partially automate the requirements elicitation and specification processes. Because human interaction is of vital importance in requirements elicitation, it is almost impossible and impractical to fully automate the elicitation process. Our approach, combined with other established techniques, will increase the probability that the customer states real and nearly complete requirements. We have developed a prototype tool to support our approach, which can be used independently or jointly by customers, users, software engineers, and domain experts. The ultimate goal of our approach is to demonstrate the potential for this automated tool to improve the requirements elicitation and specification processes.","","2023-05-03 15:51:49","2023-05-03 15:51:49","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\6574CW7X\Kassel and Malloy - AN APPROACH TO AUTOMATE REQUIREMENTS ELICITATION A.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4HWI9T4X","conferencePaper","2014","Przybylek, Adam","A business-oriented approach to requirements elicitation","2014 9th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)","","","","","""The hardest single part of building a software system is deciding precisely what to build"" (Brooks, 1987). Faulty requirements analysis is a major reason for project failure or unsatisfactory information systems that do not fulfill business needs. Although it has been long recognized that system requirements can only be understood within the context of the business processes and business modeling has become the initial phase of most software processes, the transition between business modeling and requirements gathering is still a challenge for research. Moreover, existing work in this area tends to introduce accidental difficulties. This paper reports the results of an action research conducted for elaborating a Business-Oriented approach to Requirements Elicitation. Our approach integrates Requirements Engineering with Business Process Engineering and derives system requirements based on business process models. This ensures that system requirements meet real business needs. The proposed approach is illustrated by a real-world example.","2014-04","2023-05-03 15:51:50","2023-05-03 15:51:50","","1-12","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Conferences; Unified modeling language; Software systems; Requirements; Analytical models; Activity Diagram; BPM; Business Process Modeling; Computational modeling; Organizations; Traceability; UCDA; UML; Use Cases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 9th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)","","","","","","","","","","","","","","",""
"2EWJPLCB","journalArticle","2006","Tsumaki, Toshihiko; Tamai, Tetsuo","Framework for matching requirements elicitation techniques to project characteristics","Software Process: Improvement and Practice","","1099-1670","10.1002/spip.293","https://onlinelibrary.wiley.com/doi/abs/10.1002/spip.293","One of the most difficult jobs for requirements engineers is to select an appropriate RE method for the project at hand. Good engineers make good choices and have skills in applying selected techniques appropriately. Poor engineers usually have a narrow choice range limited by their training and biased by their experience. Once a RE technique that does not fit the current project is selected, the project is doomed to fail. In this article, we propose a framework to characterize typical RE techniques and use it as a base for selecting appropriate techniques at the time a project is started, as well as at the time a change in the nature of the project is recognized, or an obstacle is encountered in defining a suitable set of requirements. Copyright © 2006 John Wiley & Sons, Ltd.","2006","2023-05-03 15:51:56","2023-05-03 15:51:56","2023-05-03 15:51:56","505-519","","5","11","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spip.293","","","","","brainstorming; domain decomposition; goal oriented; project characteristics; requirements engineering techniques; scenario based; situation change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NVGMPKFT","journalArticle","2012","Anwar, Fares; Razali, Rozilawati","A Practical Guide to Requirements Elicitation Techniques Selection - An Empirical Study","","","","","","Requirements elicitation (RE) is the most critical phase in requirement engineering. It is the moment in which analysts elicit, understand and validate the requirements of a system from stakeholders. RE process is resource-intensive and it is therefore accomplished with the support of predetermined techniques. The advancement of technology has introduced many RE techniques and thus analysts are provided with various possible options. The options however are not always obvious. It is uncertain on how to select the right techniques for specific situations under certain conditions. Although several selection guidelines do exist, they are mainly theoretical rather than pragmatic. This study addressed this issue by conducting in-depth interviews with five experienced practitioners from four Middle-Eastern software organisations. The objective of the study was to identify the important factors that contribute to RE techniques selection from the perspective of practitioners in the industry. Four factors were identified by using content analysis, namely technique features, stakeholder characteristics, requirements sources and project environment. The factors form a practical guide that could help analysts to determine the appropriate RE techniques for a given project.","2012","2023-05-03 15:52:02","2023-05-03 15:52:02","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\6RMZ64NX\Anwar and Razali - 2012 - A Practical Guide to Requirements Elicitation Tech.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QF8YA47F","journalArticle","2002","Coughlan, Jane; Macredie, Robert D.","Effective Communication in Requirements Elicitation: A Comparison of Methodologies","Requirements Engineering","","1432-010X","10.1007/s007660200004","https://doi.org/10.1007/s007660200004","The elicitation or communication of user requirements comprises an early and critical but highly error-prone stage in system development. Socially oriented methodologies provide more support for user involvement in design than the rigidity of more traditional methods, facilitating the degree of user–designer communication and the ‘capture’ of requirements. A more emergent and collaborative view of requirements elicitation and communication is required to encompass the user, contextual and organisational factors. From this accompanying literature in communication issues in requirements elicitation, a four-dimensional framework is outlined and used to appraise comparatively four different methodologies seeking to promote a closer working relationship between users and designers. The facilitation of communication between users and designers is subject to discussion of the ways in which communicative activities can be ‘optimised’ for successful requirements gathering, by making recommendations based on the four dimensions to provide fruitful considerations for system designers.","2002-06-01","2023-05-03 15:52:05","2023-05-03 15:52:05","2023-05-03 15:52:05","47-60","","2","7","","Requirements Eng","Effective Communication in Requirements Elicitation","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\YQRMVNV7\Coughlan and Macredie - 2002 - Effective Communication in Requirements Elicitatio.pdf","","","Communication –; Context –; Elicitation –; Requirements –; Socially oriented methodologies –; User–designer interaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GT2UZIJU","conferencePaper","1991","Dardenne, A.; Fickas, S.; Lamsweerde, A. van","Goal-directed concept acquisition in requirements elicitation","","","","10.1109/IWSSD.1991.213081","https://www.computer.org/csdl/proceedings-article/iwssd/1991/00213081/12OmNwoPtx5","Requirements analysis includes an acquisition step where a global model for the specification of the system and its environment is elaborated. This model involves concepts that are usually not found in the final formal specification, such as goals to be achieved, agents and their responsibilities, etc. The authors present an approach for model acquisition which is driven by such goals. They describe a conceptual meta-model in terms of which requirements models are acquired. The acquisition strategy can be viewed as a systematic way to traversing this meta-model backwards from the goals. The goal-directed acquisition strategy and the use of the meta-model are illustrated with a case study, the specification of a simple elevator system.","1991-01-01","2023-05-03 15:52:10","2023-05-03 15:52:10","2023-05-03 15:52:10","14,15,16,17,18,19,20,21-14,15,16,17,18,19,20,21","","","","","","","","","","","IEEE Computer Society","","English","","","","","www.computer.org","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the Sixth International Workshop on Software Specification and Design","","","","","","","","","","","","","","",""
"RFCFASLB","conferencePaper","1993","Goguen, J.A.; Linde, C.","Techniques for requirements elicitation","[1993] Proceedings of the IEEE International Symposium on Requirements Engineering","","","10.1109/ISRE.1993.324822","","The authors survey and evaluate techniques for eliciting requirements of computer-based systems, paying particular attention to dealing with social issues. The methods surveyed include introspection, interviews, questionnaires, and protocol, conversation, interaction, and discourse analyses. The last three techniques grew out of ethnomethodology and sociolinguistics. They can elicit tacit knowledge by observing actual interactions in the workplace, and can also be applied to the system development process itself.<>","1993-01","2023-05-03 15:52:16","2023-05-03 15:52:16","","152-164","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Knowledge engineering; Bibliographies; Hardware; Software systems; Programming profession; Cultural differences; Contracts; Employment; Protocols; Telecommunication computing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","[1993] Proceedings of the IEEE International Symposium on Requirements Engineering","","","","","","","","","","","","","","",""
"DXQBP4XJ","book","2009","Zin, Abdullah; Che Pa, Noraini","Measuring communication gap in software requirements elicitation process","","","","","","Requirements elicitation is a process of seeking, uncovering, acquiring and elaborating requirements for developing a computer-based system. These processes involve communication between customers and developers. Techniques of communication that are normally used includes verbal, written and interpersonal. According to previous researches, there are numerous communication problems occurred between customers and developers during the requirement elicitation process. This study describes a technique for measuring communication gap between customers and developers during requirements elicitation. This technique is constructed by using Iterative Triangulation method. Five variables are proposed in this measurement: input, communication skills, personality, medium and procedures. The evaluation indicates that the proposed technique is able to produce the right measurement of the communication gap between customers and developers during requirements elicitation.","2009-02-21","2023-05-03 15:52:18","2023-05-03 15:52:18","","","66","","","","","","","","","","","","","","","","","ResearchGate","","Pages: 71","","C:\Users\gabra\Zotero\storage\EJUKUG85\Zin and Che Pa - 2009 - Measuring communication gap in software requiremen.pdf; ","https://www.researchgate.net/profile/Abdullah-Zin-2/publication/262166560_Measuring_communication_gap_in_software_requirements_elicitation_process/links/5604cc1d08ae5e8e3f31095f/Measuring-communication-gap-in-software-requirements-elicitation-process.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PKW94D6S","conferencePaper","2006","Geisser, Michael; Hildenbrand, Tobias","A Method for Collaborative Requirements Elicitation and Decision-Supported Requirements Analysis","Advanced Software Engineering: Expanding the Frontiers of Software Technology","978-0-387-34831-5","","10.1007/978-0-387-34831-5_9","","As software systems become more and more complex with a multitude of stakeholders involved in development activities, novel ways of conducting the process of requirements elicitation and analysis are to be found. Therefore, this paper introduces a method for collaborative requirements elicitation and decision-supported requirements analysis. Accompanying this method, appropriate tools and techniques, both existing and custom-made, are referred to. The method is designed for a geographically distributed collaborative environment in order to support software manufacturers as well as IT departments which develop software solutions for multiple users or even consortiums of customers.","2006","2023-05-03 15:52:21","2023-05-03 15:52:21","","108-122","","","","","","","IFIP International Federation for Information Processing","","","","Springer US","Boston, MA","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\WPNCDCWX\Geisser and Hildenbrand - 2006 - A Method for Collaborative Requirements Elicitatio.pdf","","","Software Engineering; Requirement Engineering; Analytic Hierarchy Process; Requirement Elicitation; Spiral Model","Ochoa, Sergio F.; Roman, Gruia-Catalin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4PCEJ6GP","conferencePaper","2011","Farfeleder, Stefan; Moser, Thomas; Krall, Andreas; Stålhane, Tor; Omoronyia, Inah; Zojer, Herbert","Ontology-Driven Guidance for Requirements Elicitation","The Semanic Web: Research and Applications","978-3-642-21064-8","","10.1007/978-3-642-21064-8_15","","Requirements managers aim at keeping their sets of requirements well-defined, consistent and up to date throughout a project’s life cycle. Semantic web technologies have found many valuable applications in the field of requirements engineering, with most of them focusing on requirements analysis. However the usability of results originating from such requirements analyses strongly depends on the quality of the original requirements, which often are defined using natural language expressions without meaningful structures. In this work we present the prototypic implementation of a semantic guidance system used to assist requirements engineers with capturing requirements using a semi-formal representation. The semantic guidance system uses concepts, relations and axioms of a domain ontology to provide a list of suggestions the requirements engineer can build on to define requirements. The semantic guidance system is evaluated based on a domain ontology and a set of requirements from the aerospace domain. The evaluation results show that the semantic guidance system effectively supports requirements engineers in defining well-structured requirements.","2011","2023-05-03 15:52:38","2023-05-03 15:52:38","","212-226","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\XVU4FZVZ\Farfeleder et al. - 2011 - Ontology-Driven Guidance for Requirements Elicitat.pdf","","","requirements engineering; requirements elicitation; domain ontology; elicitation guidance","Antoniou, Grigoris; Grobelnik, Marko; Simperl, Elena; Parsia, Bijan; Plexousakis, Dimitris; De Leenheer, Pieter; Pan, Jeff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"69WLEUP5","conferencePaper","1996","Hudlicka, E.","Requirements elicitation with indirect knowledge elicitation techniques: comparison of three methods","Proceedings of the Second International Conference on Requirements Engineering","","","10.1109/ICRE.1996.491424","","In this paper we describe a case study comparing the effectiveness of three indirect knowledge elicitation techniques: repertory grid analysis, multi-dimensional scaling, and hierarchical clustering. These techniques are used in situations where it is difficult for the expert to articulate their knowledge in response to direct questions. The techniques were compared in terms of the number of attributes elicited, the ease with which these data were obtained, and the degree of post-analysis and interpretation required. The study was conducted in the domain of airline safety inspections and the objective was to define inspection indicators. The results of this study indicate that the repertory grid analysis method generates all of the attributes produced by the other two methods, that it is easy to apply in the field, and is useful without complex analysis and re-interpretation of the results.","1996-04","2023-05-03 15:52:50","2023-05-03 15:52:50","","4-11","","","","","","Requirements elicitation with indirect knowledge elicitation techniques","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\T4DVMBN4\491424.html","","","Programming; Knowledge engineering; Application software; Costs; Problem-solving; Inspection; Knowledge based systems; Laboratories; Mesh generation; Psychology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the Second International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"7FGZSGL4","conferencePaper","2006","Jaramillo, Carlos Mario Zapata; Gelbukh, Alexander; Isaza, Fernando Arango","Pre-conceptual Schema: A Conceptual-Graph-Like Knowledge Representation for Requirements Elicitation","MICAI 2006: Advances in Artificial Intelligence","978-3-540-49058-6","","10.1007/11925231_3","","A simple representation framework for ontological knowledge with dynamic and deontic characteristics is presented. It represents structural relationships (is-a, part/whole), dynamic relationships (actions such as register, pay, etc.), and conditional relationships (if-then-else). As a case study, we apply our representation language to the task of requirements elicitation in software engineering. We show how our pre-conceptual schemas can be obtained from controlled natural language discourse and how these diagrams can be then converted into standard UML diagrams. Thus our representation framework is shown to be a useful intermediate step for obtaining UML diagrams from natural language discourse.","2006","2023-05-03 15:53:06","2023-05-03 15:53:06","","27-37","","","","","","Pre-conceptual Schema","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirement Elicitation; Conceptual Graph; Dynamic Relationship; Knowledge Representation; Semantic Network","Gelbukh, Alexander; Reyes-Garcia, Carlos Alberto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HLRZWDHZ","conferencePaper","2004","Tuunanen, T.; Rossi, M.","Engineering a method for wide audience requirements elicitation and integrating it to software development","37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the","","","10.1109/HICSS.2004.1265420","","Consumer oriented information systems development has become increasingly important matter, as more and more complex information systems are targeted towards consumer markets. We argue that developing IS for non-organizational users creates new problems, which IS and requirement engineering (RE) community should attend to. First of all, the elicitation of requirements becomes more difficult as usually consumers do not explicitly know what they want, and it is difficult for them to express their ideas. To support different views of product development, such as project management and design, the method should present requirements in a 'rich enough' way to avoid overloading management, but in the same time giving designers the detailed information they need. Last but not the least, the results of requirements engineering should be easy to integrate to the software development process. To this end, we have constructed a new RE method and its support environment within Metaedit+ Meta CASE tool. We based our method on critical success chains (CSC) method, which supports top-down approach for planning, but also provides for wide participation of IS customers to get rich information. CSC aggregates the results of many individual interviews into meaningful graphical models of what is critically important about a potential system. In our work, CSC is extended with customer segmentation and lead user concepts from marketing.","2004-01","2023-05-03 15:57:00","2023-05-03 15:57:00","","10 pp.-","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Project management; Product development; Aggregates; Computer aided software engineering; Design methodology; Environmental economics; Information systems; Java; Power engineering and energy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the","","","","","","","","","","","","","","",""
"ISTCGPHE","conferencePaper","2007","Schneider, Kurt","Generating Fast Feedback in Requirements Elicitation","Requirements Engineering: Foundation for Software Quality","978-3-540-73031-6","","10.1007/978-3-540-73031-6_12","","Getting feedback fast is essential during early requirements activities. Requirements analysts need to capture interpret and validate raw requirements and information. In larger projects, a series of interviews and workshops is conducted. Stakeholder feedback for validation purposes is often collected in a second series of interviews, which may take weeks to complete. However, this may (1) delay the entire project, (2) cause stakeholders to lose interest and commitment, and (3) result in outdated, invalid requirements. Based on our “By Product-Approach”, we developed the “Fast Feedback” technique to collect additional information during initial interviews. User interface mock-ups are sketched and animated during the first interview and animated using the use case steps as guidance. This shortcut saves one or two interview cycles. A large admin istra tive software project was the trigger for this work.","2007","2023-05-03 15:57:01","2023-05-03 15:57:01","","160-174","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirements elicitation; by-product approach; feedback; interview technique; requirements validation; support tool","Sawyer, Pete; Paech, Barbara; Heymans, Patrick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2BKC8DDJ","conferencePaper","2013","Kumari.S, Neetu; Pillai, Anitha S.","A study on the software requirements elicitation issues - its causes and effects","2013 Third World Congress on Information and Communication Technologies (WICT 2013)","","","10.1109/WICT.2013.7113143","","Software requirements elicitation is an important and essential pre-requisite to the subsequent phases in software development lifecycle. There is an increasing focus on how industry performs elicitation as this has a direct influence on the overall project success. It is important to understand broader elicitation issues and challenges, and address them on a large-scale, especially on geographically distributed software development. There are studies focusing on elicitation, but they are relatively small. There is no substantial research related to providing a comprehensive view of elicitation issues along with its causes and effects. This paper attempts to provide a summary of the systematic literature review (SLR) findings from 81 papers. The findings are based on causes of poor elicitation, elicitation issues and challenges, consequences of poor elicitation, advisable practices and classification of elicitation issues. The authors have leveraged cause-and-effect diagrams to draw conclusions on SLR.","2013-12","2023-05-03 15:57:06","2023-05-03 15:57:06","","245-252","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Taxonomy; cause-and-effect; elicitation issues; Human factors; software requirements elicitation; software requirements engineering; systematic literarture review","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 Third World Congress on Information and Communication Technologies (WICT 2013)","","","","","","","","","","","","","","",""
"22YSAT5H","journalArticle","2018","Maria, Hafiza; Ali, Zulfiqar","Requirement Elicitation Techniques for Open Source Systems: A Review","International Journal of Advanced Computer Science and Applications","","","10.14569/IJACSA.2018.090145","","The trend of Open Source Software development has been increased from the past few years. It has gained much attention of developers in the industry. The development of open source software systems is slightly different from traditional software development. In open source software development, requirement elicitation is a very complex and critical process as developers from different regions of the world develop the system so it's really difficult to gather requirements for such systems. A variety of available tools, techniques, and approaches are used to perform the process of requirement elicitation. The purpose of this study is to focus on how the process of requirement elicitation is carried out for open source software and the different ways which are used to simplify the process of requirement elicitation. This paper comprehensively describes the techniques which are available and are used for requirement elicitation in open source software development. To do so, a literature survey of the existing techniques of requirement elicitation is conducted and different techniques are found that can be used for requirement elicitation in open source software systems.","2018-01-01","2023-05-03 15:57:07","2023-05-03 15:57:07","","","","","9","","International Journal of Advanced Computer Science and Applications","Requirement Elicitation Techniques for Open Source Systems","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\62HL2BPS\Maria and Ali - 2018 - Requirement Elicitation Techniques for Open Source.pdf; ","https://www.researchgate.net/profile/Zulfiqar-Ali-3/publication/322873661_Requirement_Elicitation_Techniques_for_Open_Source_Systems_A_Review/links/5d958e3a458515c1d38ee875/Requirement-Elicitation-Techniques-for-Open-Source-Systems-A-Review.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TH7XSQ3M","conferencePaper","2014","Taheri, L.; Pa, N. C.; Abdullah, R.; Abdullah, S.; Shafazand, M. Y.","Identifying knowledge components in software requirement elicitation","2014 IEEE International Conference on Industrial Engineering and Engineering Management","","","10.1109/IEEM.2014.7058645","","This paper considers the importance of knowledge in software development organizations which are highly knowledge-intensive and focuses on knowledge audit in their requirement elicitation process. Requirement elicitation process involves a great deal of knowledge and there are several problems regarding eliciting and using the knowledge in this process. Misunderstanding, undefined scope, conflicting information and constant changes of requirements are some of the problems of requirement elicitation. A knowledge audit model is proposed in this paper to improve the requirement elicitation process by identifying knowledge components and knowledge sources existing in the requirement elicitation process as well as their relationships. A survey is then conducted to prove the validity of the model. The results support that the proposed knowledge components and knowledge audit model improves requirement elicitation.","2014-12","2023-05-03 15:57:13","2023-05-03 15:57:13","","286-291","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2157-362X","","","","","Collaboration; Software; Iterative methods; Semantics; Organizations; Iterative Triangulation Method; Knowledge Audit; Ontologies; Requirement Elicitation Process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE International Conference on Industrial Engineering and Engineering Management","","","","","","","","","","","","","","",""
"ZHSBTPAK","journalArticle","2021","Wang, Zuoxu; Chen, Chun-Hsien; Zheng, Pai; Li, Xinyu; Khoo, Li Pheng","A graph-based context-aware requirement elicitation approach in smart product-service systems","International Journal of Production Research","","0020-7543","10.1080/00207543.2019.1702227","https://doi.org/10.1080/00207543.2019.1702227","The paradigm of Smart product-service systems (Smart PSS) has emerged recently owing to the edge-cutting Information and Communication Technology (ICT) and artificial intelligence (AI) techniques. The unique features of Smart PSS including smartness and connectedness, value co-creation and data-driven design manner, enable the collection and analysis of large volume and heterogeneous contextual data to extract useful knowledge. Therefore, requirement elicitation, as a critical process for new solution (i.e. product-service) design, can be conducted in a rather context-aware manner, assured by those massive user-generated data and product-sensed data during the usage stage. Nevertheless, despite a few works on semantic modelling, scarcely any reports on such mechanism in today's smart, connected environment. Aiming to fill this gap, for the first time, a graph-based context-aware requirement elicitation approach considering contextual information within the Smart PSS is proposed. It leverages the pre-defined product, service, and condition ontologies together with Deepwalk technique, to formulate those concepts as nodes and their relationships as the edge of the proposed requirement graph. Implicit stakeholder requirements within a specific context can be further derived based on such interrelationships in a data-driven manner. To demonstrate its feasibility and effectiveness, an example of smart bike share system is addressed to illustrate the requirement elicitation process. It is hoped that this explorative study can offer valuable insights for the service providers who would like to extract requirements not only from the voice of customers but also from the user-generated data and product-sensed data.","2021-01-17","2023-05-03 15:57:20","2023-05-03 15:57:20","2023-05-03 15:57:20","635-651","","2","59","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/00207543.2019.1702227","","","","","context-awareness; graph embedding; information modelling; ontology; product-service systems; requirement elicitation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S8LRJEHS","conferencePaper","2016","Mohanan, Murali; Samuel, Philip","Software Requirement Elicitation Using Natural Language Processing","Innovations in Bio-Inspired Computing and Applications","978-3-319-28031-8","","10.1007/978-3-319-28031-8_17","","Software requirements are usually written in natural language or speech language which is asymmetric and irregular. This paper presents a suitable method for transforming user software requirement specifications (SRS) and business designs written in natural language into useful object oriented models. For sentence detection, tokenization, parts of speech tagging and parsing of requirement specifications we incorporate an open natural language processing (OpenNLP)tool. It provides very relevant parts of speech (POS) tags. This parts of speech tagging of the SRS is quite useful for further identification of object oriented elements like classes, objects, attributes, relationships etc. After obtaining the required and relative information, Semantic Business Vocabulary and Rules (SBVR) are applied to identify and to extract the object oriented elements from the requirement specification.","2016","2023-05-03 15:57:22","2023-05-03 15:57:22","","197-208","","","","","","","Advances in Intelligent Systems and Computing","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Requirement elicitation; Class model generation; OpenNLP; SBVR; Software requirement specification","Snášel, Václav; Abraham, Ajit; Krömer, Pavel; Pant, Millie; Muda, Azah Kamilah","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S6BTZZPW","journalArticle","2011","Morkevičius, Aurelijus; Gudas, Saulius","Enterprise Knowledge Based Software Requirements Elicitation","Information Technology and Control","","2335-884X","10.5755/j01.itv.40.3.626","https://itc.ktu.lt/index.php/ITC/article/view/626","One of the ways to capture enterprise knowledge is Enterprise Architecture (EA). EA allows indentifying the majority of software ""to-be"" requirements for information systems (IS) engineering. However, the transition between enterprise architecture model and IT resource design still lacks a clear approach and tools for implementing it in practice. The paper presents an approach for the enterprise knowledge based software requirements elicitation. The suggested approach is based on the Unified profile for Ministry of Defence Architecture Framework (MODAF) and Department of Defense Architecture Framework (DoDAF), System Modeling Language (SysML) requirements model, and a Semantics of Business Vocabulary and Business Rules (SBVR) standard as a formal background for elicited software requirements. A real world example is presented to validate the suitability of the approach.http://dx.doi.org/10.5755/j01.itc.40.3.626","2011-09-12","2023-05-03 15:57:26","2023-05-03 15:57:26","2023-05-03 15:57:26","181-190","","3","40","","","","","","","","","","en","Copyright (c)","","","","www.itc.ktu.lt","","Number: 3","","C:\Users\gabra\Zotero\storage\QP2KD8PZ\Morkevičius and Gudas - 2011 - Enterprise Knowledge Based Software Requirements E.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BA25EWKS","conferencePaper","2016","Karras, Oliver; Kiesling, Stephan; Schneider, Kurt","Supporting Requirements Elicitation by Tool-Supported Video Analysis","2016 IEEE 24th International Requirements Engineering Conference (RE)","","","10.1109/RE.2016.10","","Workshops are an established technique for requirements elicitation. A lot of information is revealed during a workshop, which is generally captured via textual minutes. The scribe suffers from a cognitive overload due to the difficulty of gathering all information, listening and writing at the same time. Video recording is used as additional option to capture more information, including non-verbal gestures. Since a workshop can take several hours, the recorded video will be long and may be disconnected from the scribe's notes. Therefore, the weak and unclear structure of the video complicates the access to the recorded information, for example in subsequent requirements engineering activities. We propose the combination of textual minutes and video with a software tool. Our objective is connecting textual notes with the corresponding part of the video. By highlighting relevant sections of a video and attaching notes that summarize those sections, a more useful structure can be achieved. This structure allows an easy and fast access to the relevant information and their corresponding video context. Thus, a scribe's overload can be mitigated and further use of a video can be simplified. Tool-supported analysis of such an enriched video can facilitate the access to all communicated information of a workshop. This allows an easier elicitation of high-quality requirements. We performed a preliminary evaluation of our approach in an experimental set-up with 12 participants. They were able to elicit higher-quality requirements with our software tool.","2016-09","2023-05-03 15:57:30","2023-05-03 15:57:30","","146-155","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Requirements engineering; Conferences; Requirements elicitation; Context; requirements quality; Software tools; Stakeholders; Streaming media; video analysis; Video recording; workshop video","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2016 IEEE 24th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"I9TRXPJD","journalArticle","2017","Younas, M.; Jawawi, D. N. A.; Ghani, I.; Kazmi, R.","Non-Functional Requirements Elicitation Guideline for Agile Methods","Journal of Telecommunication, Electronic and Computer Engineering (JTEC)","","2289-8131","","https://jtec.utem.edu.my/jtec/article/view/2933","One of the essential activities in software development is elicitation of requirement. Majority of the studies has pointed out that less attention is given to the NonFunctional Requirement (NFR). The negligence of NFR elicitation is due to lack of knowledge of the user and developer about NFR. Our study presents elicitation guidelines for NFRs in agile methods. This guideline will helps developers as well as users in agile methods. A case study is conducted on the group of master students for eliciting NFR with the help of elicitation guidelines. In addition, the initial results were obtained by extracting NFRs from eProcurement document that carries requirements of major European Union projects. The result of the case study is positive and encouraging for the new developers and users having less awareness about NFRs. Furthermore, the study describes the role of cloud computing in agile methods, especially in elicitation activity.","2017-10-20","2023-05-03 15:57:43","2023-05-03 15:57:43","2023-05-03 15:57:43","137-142","","3-4","9","","","","","","","","","","en","Copyright (c)","","","","jtec.utem.edu.my","","Number: 3-4","","C:\Users\gabra\Zotero\storage\WYHA9GGX\Younas et al. - 2017 - Non-Functional Requirements Elicitation Guideline .pdf","","","Agile; Cloud Computing; Elicitation; Guideline; Non-Functional Requirement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"G2V9JL9R","journalArticle","2014","Sadiq, Mohd; Jain, S. K.","Applying fuzzy preference relation for requirements prioritization in goal oriented requirements elicitation process","International Journal of System Assurance Engineering and Management","","0976-4348","10.1007/s13198-014-0236-3","https://doi.org/10.1007/s13198-014-0236-3","Goal oriented requirements elicitation processes are used to identify the requirements of software according to the need of stakeholders. A system may have thousands of requirements and it is difficult to prioritize such a large number of requirements when several stakeholders participate in requirements elicitation process. In literature, we identify that existing goal oriented requirements elicitation processes like KAOS, i*, AGORA do not support to prioritize the requirements when stakeholder’s preferences are in the form of linguistic variable and multi-criteria decision making approach is used in requirements elicitation process. Therefore, to address this issue, we present a method for prioritization of requirements using fuzzy based approach in goal oriented requirements elicitation process by combining α-level weighted F-preference relation and extent fuzzy analytic hierarchy process in group decision making process; and then we use binary tree sort method to get the prioritized list of requirements. Finally, the utilization of the proposed approach is demonstrated with the help of an example.","2014-12-01","2023-05-03 15:57:52","2023-05-03 15:57:52","2023-05-03 15:57:52","711-723","","4","5","","Int J  Syst  Assur  Eng  Manag","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Decision making process; Fuzzy set theory; Requirements prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C5ELH9BA","thesis","2010","Lim, Soo Ling","Social networks and collaborative filtering for large-scale requirements elicitation","","","","","http://hdl.handle.net/1959.4/50210","Within the field of software engineering, requirements elicitation is the activity in which stakeholder needs are understood. In large-scale software projects, requirements elicitation tends to be beset by three problems: information overload, inadequate stakeholder input, and biased prioritisation of requirements. The work described in this thesis addresses these problems using social networks and collaborative filtering. The work has developed StakeNet, a novel method that uses social networks to identify and prioritise stakeholders. Using StakeNet, the requirements engineer asks an initial list of stakeholders to recommend other stakeholders and stakeholder roles, builds a social network with stakeholders as nodes and their recommendations as links, and prioritises the stakeholders using a variety of social network measures. The work has also developed StakeRare, a novel method that uses social networks and collaborative filtering to identify and prioritise requirements. Using StakeRare, the requirements engineer asks the stakeholders identified by StakeNet to rate an initial list of requirements and suggest other requirements, recommends other relevant requirements to the stakeholders using collaborative filtering, and prioritises the requirements using the ratings and the stakeholders’ priority from StakeNet. Finally, to support the methods, this work has developed StakeSource, a novel software tool that automates the manual processes in StakeNet. StakeSource collects recommendations from stakeholders, builds the social network, and prioritises the stakeholders automatically. The methods and tool have been evaluated using real large-scale software projects. The empirical evaluation of both StakeNet and StakeRare using a real large-scale software project demonstrates that the methods identify a highly complete set of stakeholders and their requirements, and prioritise the stakeholders and their requirements accurately. These methods outperform the existing methods used in the project, and require significantly less time from the stakeholders and requirements engineers. StakeSource has been evaluated with real large-scale projects by practitioners. The tool is now used in major software projects, and organisations are adopting it. The methods, tool, and evaluation described in this thesis provide evidence that social networks and collaborative filtering can effectively support requirements elicitation in large-scale software projects.","2010","2023-05-03 15:57:55","2023-05-03 15:57:55","2023-05-03 15:57:55","","","","","","","","","","","","UNSW Sydney","","English","","Thesis","","","unsworks.unsw.edu.au","","DOI: 10.26190/unsworks/23395","","C:\Users\gabra\Zotero\storage\4WM3XUJI\Lim - 2010 - Social networks and collaborative filtering for la.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ITGNENC8","conferencePaper","2009","Renault, Samuel; Mendez-Bonilla, Oscar; Franch, Xavier; Quer, Carme","PABRE: Pattern-based Requirements Elicitation","2009 Third International Conference on Research Challenges in Information Science","","","10.1109/RCIS.2009.5089271","","This paper presents our PABRE method for facilitating requirements elicitation on the basis of requirement patterns with the goal of saving time and reducing errors during this activity. The process presented applies for elicitation in off-the-shelf selection projects driven by call for tenders processes and uses a requirement patterns catalogue. The process selects patterns from the catalogue that apply to the particular selection project, and convert them into the real requirements that finally configure the project requirements book. We show some benefits of the pattern approach for requirements engineers and IT consultants, as well as for customers. Finally we discuss the strengths and weaknesses of the proposal and identify some future work.","2009-04","2023-05-03 15:57:59","2023-05-03 15:57:59","","81-92","","","","","","PABRE","","","","","","","","","","","","IEEE Xplore","","ISSN: 2151-1357","","C:\Users\gabra\Zotero\storage\P2YTIBYF\Renault et al. - 2009 - PABRE Pattern-based Requirements Elicitation.pdf","","","Design engineering; requirements engineering; Knowledge engineering; Companies; Information systems; Books; Business; Information analysis; Information technology; off-the-shelf components selection; Open source software; Proposals; requirement patterns; requirements reuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 Third International Conference on Research Challenges in Information Science","","","","","","","","","","","","","","",""
"YS4QANQS","journalArticle","2020","Souza, Anderson; Ferreira, Bruna; Valentim, Natasha; Correa, Lauriane; Marczak, Sabrina; Conte, Tayana","Supporting the teaching of design thinking techniques for requirements elicitation through a recommendation tool","IET Software","","1751-8814","10.1049/iet-sen.2019.0300","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0300","The development of systems with different features becomes increasingly challenging, given the actual context, implying on the search for new approaches for requirements elicitation. One of these approaches is design thinking (DT), a process of encouraging innovation used by designers, which presents itself as fundamental in the success of new products. This scenario motivates the importance of knowing DT concepts and their techniques, which can support requirements elicitation. In this context, the authors present DTA4RE (DT assistant for requirements elicitation), a tool that suggests DT techniques for requirements elicitation, which can be used by both students and professionals who would like to adopt DT in their projects. The DTA4RE is composed of a set of 27 techniques that could be suggested to the user through a recommendation questionnaire as well as an open repository with material to support the application of these techniques. Results from the authors’ two empirical studies with software engineering undergraduate and graduate students and industry professionals indicate that DTA4RE has helped in the selection of and in the learning of DT techniques when considering real problems. Most participants considered the questions from the recommendation questionnaire easy to answer, and the techniques suggested by the tool useful.","2020","2023-05-03 15:58:00","2023-05-03 15:58:00","2023-05-03 15:58:00","693-701","","6","14","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0300","","C:\Users\gabra\Zotero\storage\QP3PYN5J\Souza et al. - 2020 - Supporting the teaching of design thinking techniq.pdf","","","software engineering; decision making; project management; requirements elicitation; computer aided instruction; computer science education; design engineering; design thinking techniques; DT assistant; DT techniques; DTA4RE; educational courses; engineering education; formal specification; innovation management; knowing DT concepts; recommendation questionnaire; teaching","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CS49JJKJ","conferencePaper","2017","Garg, Nikita; Sadiq, Mohd.; Agarwal, Pankaj","GOASREP: Goal Oriented Approach for Software Requirements Elicitation and Prioritization Using Analytic Hierarchy Process","Proceedings of the 5th International Conference on Frontiers in Intelligent Computing: Theory and Applications","978-981-10-3156-4","","10.1007/978-981-10-3156-4_28","","Software requirements elicitation is a valuable process for the identification of software requirements according to the need of different types of stakeholders. There are different methods for the elicitation of software requirements like traditional methods, group elicitation methods, goal oriented methods, etc. Among these methods, goal oriented methods have received much recognition by software requirements engineering community. On the basis of our literature review, we identify that “goal oriented requirements elicitation processes do not support how to select and prioritize the requirements using analytic hierarchy process on the basis of the cost and effort criteria”. Therefore, in-order to address this issue, we proposed a method, i.e. GOASREP, for the elicitation of software requirements using “goal oriented approach” and the prioritization of the elicited requirements using “analytic hierarchy process”. In the proposed method, we used function point analysis approach for the estimation of the cost of each requirement. COCOMO model has been applied to estimate the effort of each requirement. Finally, the usage of the GOASREP is explained using Institute Examination System.","2017","2023-05-03 16:01:32","2023-05-03 16:01:32","","281-287","","","","","","GOASREP","Advances in Intelligent Systems and Computing","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Requirements elicitation; Analytic hierarchy process; COCOMO model; Function point analysis; Goal oriented requirements elicitation process","Satapathy, Suresh Chandra; Bhateja, Vikrant; Udgata, Siba K.; Pattnaik, Prasant Kumar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PDHECRPX","conferencePaper","2007","Laporti, Viviane; Borges, Marcos R. S.; Braganholo, Vanessa P.","A Collaborative Approach to Requirements Elicitation","2007 11th International Conference on Computer Supported Cooperative Work in Design","","","10.1109/CSCWD.2007.4281527","","The requirements elicitation of a system is a complex task. The different viewpoints and the need for negotiation make this stage of the software development process risky and susceptible to failures. The traditional elicitation approach based on interviews and questionnaires do not help. This paper proposes an approach founded on collective knowledge to progressively build the system requirements from a narrative of use stories to the definition of use cases. The proposed solution consists of a knowledge model based on stories about the system, a collective construction method, and a tool to support interaction.","2007-04","2023-05-03 16:01:34","2023-05-03 16:01:34","","734-739","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Collaborative work; Internet; Software tools; Information analysis; Cognitive science; Collaborative Design; Collaborative tools; CSCW; Informatics; International collaboration; Vocabulary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2007 11th International Conference on Computer Supported Cooperative Work in Design","","","","","","","","","","","","","","",""
"WDWBV7T7","conferencePaper","2014","Fotrousi, Farnaz; Fricker, Samuel A.; Fiedler, Markus","Quality requirements elicitation based on inquiry of quality-impact relationships","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","10.1109/RE.2014.6912272","","Quality requirements, an important class of non-functional requirements, are inherently difficult to elicit. Particularly challenging is the definition of good-enough quality. The problem cannot be avoided though, because hitting the right quality level is critical. Too little quality leads to churn for the software product. Excessive quality generates unnecessary cost and drains the resources of the operating platform. To address this problem, we propose to elicit the specific relationships between software quality levels and their impacts for given quality attributes and stakeholders. An understanding of each such relationship can then be used to specify the right level of quality by deciding about acceptable impacts. The quality-impact relationships can be used to design and dimension a software system appropriately and, in a second step, to develop service level agreements that allow re-use of the obtained knowledge of good-enough quality. This paper describes an approach to elicit such quality-impact relationships and to use them for specifying quality requirements. The approach has been applied with user representatives in requirements workshops and used for determining Quality of Service (QoS) requirements based the involved users' Quality of Experience (QoE). The paper describes the approach in detail and reports early experiences from applying the approach.","2014-08","2023-05-03 16:01:38","2023-05-03 16:01:38","","303-312","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\KNTM27AA\Fotrousi et al. - 2014 - Quality requirements elicitation based on inquiry .pdf","","","Conferences; Prototypes; Software systems; Decision making; Requirement elicitation; Diabetes; non-functional requirements; quality attributes; quality of experience (QoE); Quality of service; quality of service (QoS)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"IPLL4XDI","conferencePaper","2012","Duarte, Diogo; Farinha, Carla; da Silva, Miguel Mira; da Silva, Alberto Rodrigues","Collaborative Requirements Elicitation with Visualization Techniques","2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises","","","10.1109/WETICE.2012.14","","Requirements elicitation is one of the first activities that tries to define the project scope and elicit user requirements. This activity relies in communication and cooperation between stakeholders which makes collaboration crucial for the success of this activity, especially in global software development projects with distributed teams and stakeholders. Despite the need for collaboration, lack of user input is still one of the problems of requirements elicitation, having negative consequences on project success. In this paper we present a proposal to involve stakeholders during requirements elicitation through the support of online collaboration and the usage of visualization techniques to stimulate stakeholders and increase their awareness about requirements. We are following action research methodology and present the results of a recent case study.","2012-06","2023-05-03 16:01:40","2023-05-03 16:01:40","","343-348","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1524-4547","","","","","Collaboration; Prototypes; Communities; Visualization; requirements elicitation; Proposals; action research; Color; Data visualization; online collaboration; requirements visualization; user involvement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises","","","","","","","","","","","","","","",""
"28EF3T9N","conferencePaper","2008","Miyazaki, Seiya; Mead, Nancy; Zhan, Justin","Computer-Aided Privacy Requirements Elicitation Technique","2008 IEEE Asia-Pacific Services Computing Conference","","","10.1109/APSCC.2008.263","","The legislative penalties and economic penalties for privacy violations are more serious for a service provider these days. In spite of demonstrating that it is willing and able to protect the privacy of information, a service provider developing a privacy-compliant system faces two challenges; technical complexities and legal complexities. In this paper, we propose a computer-aided privacy requirements elicitation technique (PRET) that helps software developers elicit privacy requirements more efficiently in the early stages of software development. The goal of the PRET tool is to accelerate the elicitation process and prevent privacy requirements leaks by using a general privacy requirements database derived from privacy laws and empirical privacy requirements. We also show the results of integrating the PRET tool with the security quality requirements engineering (SQUARE) methodology and provide evidence of the efficacy of the resultant tool.","2008-12","2023-05-03 16:01:49","2023-05-03 16:01:49","","367-372","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Protection; Costs; Guidelines; Acceleration; Data privacy; Information security; Law; Legal factors; Legislation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 IEEE Asia-Pacific Services Computing Conference","","","","","","","","","","","","","","",""
"DUKQZ64D","journalArticle","2008","Aranda, Gabriela N; Vizcaíno, Aurora; Cechich, Alejandra; Piattini, Mario","Strategies to Minimize Problems in Global Requirements Elicitation","CLEI Electronic Journal","","0717-5000","10.19153/cleiej.11.1.3","http://192.168.10.19:8080/cleiej/index.php/cleiej/article/view/277","Many challenges arise in global software development projects, most of which are related to the lack of face-to-face communication and people’s need to feel comfortable with the technology that they use. In this paper we introduce a methodology to detect the problems which may occur during the global requirement elicitation process and propose solutions to reduce them.","2008-06-01","2023-05-03 16:01:59","2023-05-03 16:02:00","2023-05-03 16:01:59","","","1","11","","CLEIej","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\SG2UW46V\Aranda et al. - 2008 - Strategies to Minimize Problems in Global Requirem.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LDYXEXG8","book","2010","Sajjad, Umar; Hanif, Muhammad Qaisar","Issues and Challenges of Requirement Elicitation in Large Web Projects","","","","","https://urn.kb.se/resolve?urn=urn:nbn:se:bth-3216","DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.","2010","2023-05-03 16:02:13","2023-05-03 16:02:13","2023-05-03 16:02:13","","","","","","","","","","","","","","eng","","","","","www.diva-portal.org","","","","C:\Users\gabra\Zotero\storage\IFPSNN7E\Sajjad and Hanif - 2010 - Issues and Challenges of Requirement Elicitation i.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IQVGSZ23","conferencePaper","2012","Zapata, Sergio; Torres, Estela; Sevilla, Gustavo; Aballay, Laura; Reus, Marcelo","Effectiveness of traditional software requirement elicitation techniques applied in distributed software development scenarios","2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)","","","10.1109/CLEI.2012.6427200","","In the last years, global software development has grown as a business model and this trend is accentuated. Benefits of these new processes of building distributed software are constrained by difficulties associated with the geographic and cultural distance between team members. In this context, the software requirement elicitation, key activity in the software engineering process, supports perhaps the greatest challenges due to high communicational flow required at this stage of software process. This paper presents a preliminary comparative study of the effectiveness of traditional elicitation techniques applied to distributed scenarios of software construction.","2012-10","2023-05-03 16:02:15","2023-05-03 16:02:15","","1-7","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Collaborative software; Collaborative work; Software engineering; Software; Electronic mail; Cultural differences; Distributed Requirement Elicitation; IP networks; Requirement Software Engineering; Software Distributed Development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)","","","","","","","","","","","","","","",""
"GCC6W3BV","conferencePaper","2008","Britos, Paola; Dieste, Oscar; García-Martínez, Ramón","Requirements Elicitation in Data Mining for Business Intelligence Projects","Advances in Information Systems Research, Education and Practice","978-0-387-09682-7","","10.1007/978-0-387-09682-7-9_12","","There are data mining methodologies for business intelligence (DM-BI) projects that highlight the importance of planning an ordered, documented, consistent and traceable requirement’s elicitation throughout the entire project. However, the classical software engineering approach is not completely suitable for DM-BI projects because it neglects the requirements specification aspects of projects. This article focuses on identifying concepts for understand DM-BI project domain from DM-BI field experience, including how requirements can be educed by a proposed DM-BI project requirements elicitation process and how they can be documented by a template set.","2008","2023-05-03 16:02:17","2023-05-03 16:02:17","","139-150","","","","","","","IFIP – The International Federation for Information Processing","","","","Springer US","Boston, MA","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\TAV7DPLZ\Britos et al. - 2008 - Requirements Elicitation in Data Mining for Busine.pdf","","","Requirement Engineer; Requirement Elicitation; Business Intelligence; Contingency Plan; General Task","Avison, David; Kasper, George M.; Pernici, Barbara; Ramos, Isabel; Roode, Dewald","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C82G5Y2T","report","","","Lecture Notes on Requirements Elicitation","","","","","https://apps.dtic.mil/sti/citations/ADA278536","Requirements elicitation is the first of the four steps in software requirements engineering the others being analysis, specification, and validation. Software engineers use several elicitation techniques. To facilitate teaching these techniques, materials are provided to support an introductory lecture and four lectures on specific techniques joint application design, brainstorming, interviewing, and the PIECES framework. A role-playing exercise is provided that allows students to experience each of the techniques. Information for instructors includes educational objectives, pedagogical considerations, additional exercises, and a bibliography. Joint application design, Software engineering education, Requirements, Requirements elicitation, Software requirements.","","2023-05-03 16:02:20","2023-05-03 16:02:20","2023-05-03 16:02:20","","","","","","","","","","","","","","en","","","","","apps.dtic.mil","","Section: Technical Reports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TM55LT5D","journalArticle","2017","Taheri, Laleh; Shafazand, Mohammad Yasser; Pa, Noraini Che; Abdullah, Rusli; Abdullah, Salfarina","A knowledge audit model for requirement elicitation: A case study to assess knowledge in requirement elicitation","Knowledge and Process Management","","1099-1441","10.1002/kpm.1553","https://onlinelibrary.wiley.com/doi/abs/10.1002/kpm.1553","This paper aims to develop a knowledge audit (KA) model with the focus on knowledge assessment in the requirements elicitation process (REP) to allay the problems of REP regarding knowledge communication. The principal problems with REP are knowledge conflict and the failure to mention a variety of knowledge and requirements changes. Despite of many existing studies relating to KA, inadequate effort has been directed towards investigating the full part played by the KA process in REP. The purpose of this paper is to bridge this gap using a software prototype that uses the KA model in the REP. This study proposes a KA model using an iterative triangulation method. The proposed model is validated through a case study by using a software prototype developed based on the proposed KA model to see if this KA model is effective for software developers in REP by improving the completeness, correctness, and understandability of the elicited requirements knowledge. Research findings are based on responses of 40 respondents from software development organizations. The results of case study confirmed the effectiveness of KA model for REP with respect to completeness, correctness, and understandability. This research answers the call to assess knowledge in REP by developing a KA model and prototype to fill the existing gap in this area. Overall, a KA model for REP is introduced and validated to identify and assess knowledge that supports knowledge communication in REP.","2017","2023-05-03 16:02:22","2023-05-03 16:02:22","2023-05-03 16:02:22","257-268","","4","24","","","A knowledge audit model for requirement elicitation","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/kpm.1553","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2UPI92CW","conferencePaper","2008","Castro-Herrera, Carlos; Duan, Chuan; Cleland-Huang, Jane; Mobasher, Bamshad","Using Data Mining and Recommender Systems to Facilitate Large-Scale, Open, and Inclusive Requirements Elicitation Processes","2008 16th IEEE International Requirements Engineering Conference","","","10.1109/RE.2008.47","","Requirements related problems, especially those originating from inadequacies in the human-intensive task of eliciting stakeholderspsila needs and desires, have contributed to many failed and challenged software projects. This is especially true for large and complex projects in which requirements knowledge is distributed across thousands of stakeholders. This short paper introduces a new process and related framework that utilizes data mining and recommender technologies to create an open, scalable, and inclusive requirements elicitation process capable of supporting projects with thousands of stakeholders. The approach is illustrated and evaluated using feature requests mined from an open source software product.","2008-09","2023-05-03 16:02:24","2023-05-03 16:02:24","","165-168","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Collaboration; Large-scale systems; Requirements elicitation; Systems engineering and theory; Open source software; Collaborative tools; Data engineering; Data mining; feature requests; Paper technology; recommender systems; Recommender systems; Yarn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 16th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"E47EWDKT","conferencePaper","2014","Muqeem, Mohd.; Beg, Mohd. Rizwan","Validation of requirement elicitation framework using finite state machine","2014 International Conference on Control, Instrumentation, Communication and Computational Technologies (ICCICCT)","","","10.1109/ICCICCT.2014.6993145","","Requirement elicitation is considered to be a very vital activity in requirement engineering. It is a proven fact that improper elicitation of requirements leads to a project failure. So for the improvement in the software industry's success rate more attention is required in the elicitation process. In order to help elicitor to understand and select different methods, many frameworks are proposed that highlight the key issues of requirement elicitation but most of the frameworks are theoretical in nature. They lack practical guidance and extensive study of a wide variation of methods for requirements Elicitation. In this paper we propose a framework for requirement elicitation that support elicitor to understand and select methods for requirement elicitation and also addresses three core problem areas of requirements elicitation, pre-domain development, stakeholders management and elicitation technique selection that were identified as lacking and needed guidance and support. Finally we validate the framework of effective requirement elicitation using finite state machine. Test cases are generated for the validation of the framework. The approach for generating the test cases through FSM is very reliable and efficient and does not support for the invalid test cases. Valid input strings are generated as test cases.","2014-07","2023-05-03 16:02:27","2023-05-03 16:02:27","","1210-1216","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Software; Unified modeling language; Requirement Elicitation; Algorithm design and analysis; Automata; Elicitor; Instruments; Neural networks; Silicon; Stakeholder; Test Cases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 International Conference on Control, Instrumentation, Communication and Computational Technologies (ICCICCT)","","","","","","","","","","","","","","",""
"NZIVS9JN","conferencePaper","2007","Zong-yong, LI; Zhi-xue, WANG; Ying-ying, YANG; Yue, WU; Ying, LIU","Towards a Multiple Ontology Framework for Requirements Elicitation and Reuse","31st Annual International Computer Software and Applications Conference (COMPSAC 2007)","","","10.1109/COMPSAC.2007.216","","In order to elicit system requirements correctly and unambiguously, researchers in the requirements engineering community have been studying and developing a number of ontology based approaches. Many of them adopt the single ontology schema, which utilizes a global ontology to describe static knowledge for all domains. However, such ontologies lack dynamic conceptual description and they are difficult to reuse. Based on KADS knowledge modeling, this paper proposes a multiple ontology framework for requirements elicitation and reuse. Besides encapsulating the ontology of domain knowledge, it also includes the top level ontology, task ontology and application ontology. The framework provides a more powerful knowledge base for requirements elicitation and definitely defines the responsibilities of all stakeholders. The process of using the framework is discussed at last.","2007-07","2023-05-03 16:02:28","2023-05-03 16:02:28","","189-195","","","1","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 0730-3157","","","","","Programming; Software quality; Knowledge engineering; Application software; Automation; Information systems; Ontologies; Computer applications; Programmable logic arrays; Thesauri","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","31st Annual International Computer Software and Applications Conference (COMPSAC 2007)","","","","","","","","","","","","","","",""
"F9A7ZEGQ","journalArticle","2022","Canedo, Edna Dias; Bandeira, Ian Nery; Calazans, Angelica Toffano Seidel; Costa, Pedro Henrique Teixeira; Cançado, Emille Catarine Rodrigues; Bonifácio, Rodrigo","Privacy requirements elicitation: a systematic literature review and perception analysis of IT practitioners","Requirements Engineering","","1432-010X","10.1007/s00766-022-00382-8","https://doi.org/10.1007/s00766-022-00382-8","During the software development process and throughout the software lifecycle, organizations must guarantee users’ privacy by protecting personal data. There are several studies in the literature proposing methodologies, techniques, and tools for privacy requirements elicitation. These studies report that practitioners must use systematic approaches to specify these requirements during initial software development activities to avoid users’ data privacy breaches. The main goal of this study is to identify which methodologies, techniques, and tools are used in privacy requirements elicitation in the literature. We have also investigated Information Technology (IT) practitioners’ perceptions regarding the methodologies, techniques, and tools identified in the literature. We have carried out a systematic literature review (SLR) to identify the methodologies, techniques, and tools used for privacy requirements elicitation. Besides, we have surveyed IT practitioners to understand their perception of using these techniques and tools in the software development process. We have found several methodologies, techniques, and tools proposed in the literature to carry out privacy requirements elicitation. Out of 78 studies cataloged within the SLR, most of them did not verify their methodologies and techniques in a practical case study or illustrative contexts (38 studies), and less than 35% of them (26 studies) experimented with their propositions within an industry context. The Privacy Safeguard method (PriS) is the best known among the 198 practitioners in the industry who participated in the survey. Moreover, use cases and user story are their most-used techniques. This qualitative and quantitative study shows a perception of IT practitioners different from those presented in other research papers and suggests that methodologies, techniques, and tools play an important role in IT practitioners’ perceptions about privacy requirements elicitation.","2022-06-11","2023-05-03 16:02:29","2023-05-03 16:02:29","2023-05-03 16:02:29","","","","","","Requirements Eng","Privacy requirements elicitation","","","","","","","en","","","","","Springer Link","","","","","","","Systematic literature review; Methodologies; Privacy requirements elicitation; Techniques; Tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"25BPX98I","conferencePaper","2020","Giannakopoulou, Dimitra; Mavridou, Anastasia; Rhein, Julian; Pressburger, Thomas; Schumann, Johann; Shi, Nija","Formal Requirements Elicitation with FRET","","","","","https://ntrs.nasa.gov/citations/20200001989","FRET is a tool for writing, understanding, formalizing and analyzing requirements. Users write requirements in an intuitive, restricted natural language, called FRETISH, with precise, unambiguous meaning. For a FRETISH requirement, FRET: 1) produces natural language and diagrammatic explanations of its exact meaning, 2) formalizes the requirement in logics, and 3) supports interactive simulation of produced logic formulas to ensure that they capture user intentions. FRET connects to analysis tools by facilitating the mapping between requirements and models/code, and by generating verification code. FRET is available open source at https://github.com/NASA-SW-VnV/fret; a video can be accessed at : https://tinyurl.com/fretForREFSQ.","2020-03-24","2023-05-03 16:02:33","2023-05-03 16:02:33","2023-05-03 16:02:32","","","","","","","","","","","","","Pisa","","","","","","NASA NTRS","","NTRS Author Affiliations: NASA Ames Research Center, Stinger Ghaffarian Technologies Inc. (SGT Inc.), Technische Univ. NTRS Report/Patent Number: ARC-E-DAA-TN77785 NTRS Document ID: 20200001989 NTRS Research Center: Ames Research Center (ARC)","","C:\Users\gabra\Zotero\storage\KC55DVUE\Giannakopoulou et al. - 2020 - Formal Requirements Elicitation with FRET.pdf","","","Computer Programming And Software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","International Working Conference on Requirements Engineering: Foundation for Software Quality (REFSQ-2020)","","","","","","","","","","","","","","",""
"FNT6K8FV","thesis","2007","Coulin, Chad Raymond","A situational approach and intelligent tool for collaborative requirements elicitation","","","","","https://theses.hal.science/tel-00195833","Requirements elicitation is a fundamental part of the software development process, and widely regarded as one of its more challenging activities. Many of the current techniques, approaches, and tools are either unknown or too complex for novices, resulting in a significant gap between requirements elicitation theory and practice. Just as important, is the current gap between expert and novice analysts, which can be attributed to the extensive skill set and range of experiences that is often required to successfully conduct this difficult yet vital activity. Consequently, in this research we investigated both the state of the art and the state of practice, in order to develop and evaluate an approach and a tool to support novice analysts elicit requirements for software systems in a workshop environment. The first stage of the research was a literature review, which involved a thorough review and critical analysis of existing theory on and around the area of requirements elicitation. This was followed by a survey of practice, which consisted of in-depth interviews with experts, and an online questionnaire for novices, used to elicit approach guidelines and tool features. The OUTSET approach was then designed, and the supporting tool MUSTER constructed. The final stage of the research involved the evaluation of the approach and tool through a case study, case study experiment, and formal experiment. The empirical evaluations conducted showed that using the MUSTER tool improved the overall effectiveness of the requirements elicitation process, while the underlying OUTSET approach improved the overall efficiency. It was also shown that the combination of the approach and tool provided a collective system that was both useful and useable. In the experiment conducted, the MUSTER tool received more than three times the score of the manual tool for effectiveness, and more than double for usability. In addition, the combination of research methods used, and the successful a pplication of Situational Method Engineering (SME) and Group Support System (GSS) principles for the approach and tool respectively, was both novel and unique from any other previous work on requirements elicitation.","2007-09-25","2023-05-03 16:02:35","2023-05-03 16:02:35","2023-05-03 16:02:35","","","","","","","","","","","","Université Paul Sabatier - Toulouse III","","en","","phdthesis","","","theses.hal.science","","","","C:\Users\gabra\Zotero\storage\ZNVVD5ZL\Coulin - 2007 - A situational approach and intelligent tool for co.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QYC7ZZIJ","journalArticle","2022","Cheligeer, Cheligeer; Huang, Jingwei; Wu, Guosong; Bhuiyan, Nadia; Xu, Yuan; Zeng, Yong","Machine learning in requirements elicitation: a literature review","AI EDAM","","0890-0604, 1469-1760","10.1017/S0890060422000166","https://www.cambridge.org/core/journals/ai-edam/article/machine-learning-in-requirements-elicitation-a-literature-review/9B3886539161631E08661FDBCA4192BB","A growing trend in requirements elicitation is the use of machine learning (ML) techniques to automate the cumbersome requirement handling process. This literature review summarizes and analyzes studies that incorporate ML and natural language processing (NLP) into demand elicitation. We answer the following research questions: (1) What requirement elicitation activities are supported by ML? (2) What data sources are used to build ML-based requirement solutions? (3) What technologies, algorithms, and tools are used to build ML-based requirement elicitation? (4) How to construct an ML-based requirements elicitation method? (5) What are the available tools to support ML-based requirements elicitation methodology? Keywords derived from these research questions led to 975 records initially retrieved from 7 scientific search engines. Finally, 86 articles were selected for inclusion in the review. As the primary research finding, we identified 15 ML-based requirement elicitation tasks and classified them into four categories. Twelve different data sources for building a data-driven model are identified and classified in this literature review. In addition, we categorized the techniques for constructing ML-based requirement elicitation methods into five parts, which are Data Cleansing and Preprocessing, Textual Feature Extraction, Learning, Evaluation, and Tools. More specifically, 3 categories of preprocessing methods, 3 different feature extraction strategies, 12 different families of learning methods, 2 different evaluation strategies, and various off-the-shelf publicly available tools were identified. Furthermore, we discussed the limitations of the current studies and proposed eight potential directions for future research.","2022","2023-05-03 16:02:39","2023-05-03 16:02:39","2023-05-03 16:02:39","e32","","","36","","","Machine learning in requirements elicitation","","","","","","","en","","","","","Cambridge University Press","","Publisher: Cambridge University Press","","C:\Users\gabra\Zotero\storage\SLF66YPS\Cheligeer et al. - 2022 - Machine learning in requirements elicitation a li.pdf","","","requirement elicitation; Data-driven; machine learning; natural language processing; requirement classification; requirement engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R3Z5NETP","journalArticle","2016","Ramadan, Nagy; Abdelaziz, Ahmed; Abdelghany, Abdelghany","A Hybrid Machine Learning Model for Selecting Suitable Requirements Elicitation Techniques","International Journal of Computer Science and Information Security,","","","","","Requirements elicitation is the first and the most critical phase of Requirements Engineering (RE). Many techniques have been proposed to support the elicitation process. Each technique has its strengths and weaknesses. This variety makes the selection of technique or combination of techniques for a specific project a difficult task. Mostly techniques are selected based on personal preferences rather than on attributes of project, technique, and stakeholders. In this paper, the researchers propose a three-component approach for elicitation techniques selection. First, a literature review is conducted to identify the attributes affecting techniques selection and common elicitation techniques. Second, a multiple regression model is built to analyze these attributes in order to find the critical attributes influencing techniques selection. Finally, an Artificial Neural Network (ANN) based model for selecting adequate elicitation techniques for a given project is proposed. The ANN model helps reduce the human involvements in this process. It was implemented using Neural Network Fitting Tool in MATLAB. The network has accuracy of 81%. The ANN model was empirically validated by conducting a case study in a software company.","2016-06-30","2023-05-03 16:06:29","2023-05-03 16:06:29","","380-391","","","14","","International Journal of Computer Science and Information Security,","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\6KVBJJXF\Ramadan et al. - 2016 - A Hybrid Machine Learning Model for Selecting Suit.pdf; ","https://www.researchgate.net/profile/Nagy-Ramadan/publication/305636898_A_Hybrid_Machine_Learning_Model_for_Selecting_Suitable_Requirements_Elicitation_Techniques/links/5798041e08aec89db7b9b320/A-Hybrid-Machine-Learning-Model-for-Selecting-Suitable-Requirements-Elicitation-Techniques.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TRN83AA4","journalArticle","2015","Bhatti, Shahid Nazir; Usman, Maria; Jadi, Amr A.","Validation to the Requirement Elicitation Framework via Metrics","ACM SIGSOFT Software Engineering Notes","","0163-5948","10.1145/2815021.2815031","https://doi.org/10.1145/2815021.2815031","Requirement elicitation is the most significant factor in the requirement engineering process. It is already proven fact that improper elicitation of the requirements leads to the failure of the project, product. To improve the process quality and of that of industry we need a better elicitation technique or elicitation process (framework) to make it better. In this paper we have proposed a methodology that helps elicitor to validate the requirement elicitation using prioritization techniques and framework and further it will help the elicitor to effectively, efficiently select the elicitation technique.","2015-09-14","2023-05-03 16:06:35","2023-05-03 16:06:35","2023-05-03 16:06:35","1–7","","5","40","","SIGSOFT Softw. Eng. Notes","","","","","","","","","","","","","ACM Digital Library","","","","","","","Functional Requirement (FR); Non Functional Requirement (NFR); Requirement Elicitation (RE); Verification and Validation (V & V)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4N9H6MKL","journalArticle","2018","Ramdhani, Muhammad Ali; Maylawati, Dian Sa'adillah; Amin, Abdusy Syakur; Aulawi, Hilmi","Requirements elicitation in software engineering","International Journal of Engineering & Technology (UEA)","","2227-524X","","https://www.sciencepubco.com","Software Engineering (SE) is a discipline, concept, method that focus on all aspects related to software production. SE must adapt organized system and approach in building software. The objective of this article is to discuss needs elicitation in SE, so that the design can be done through utilizing appropriate tools and techniques based on the problem to be solved, restrictions and need that must be met, as well as resource availability. The method used in this article is literature review as a major source of problem analy-sis. In the next phase, the main topic of the article is clarified, validated, and verified by the model of the Focus Group Discussion (FGD). The respondents of FGD are lecturers of Informatics Department at UIN Sunan Gunung Djati Bandung. Requirements elici-tation is in-dept and comprehensive process of finding information from all stakeholders in relation to the built software. The result of requirements elicitation is the explanation from every stakeholder with natural language related to the will and interest of the built software. The mechanism of finding information can be done through observation, questionnaire, interview, and documentary study, which are then tested with data validation and verification in FGD. The product of requirements elicitation is the User Re-quirement Document (URD) that can be used as an early artifact in software development process. Furthermore, URD is used as a reference in tracking the suitability between the function of software and the needs of stakeholder. This article formulated analysis approach of SE need, so that it is easily modified, adaptive to growing software complexity, and connected with the analysis of hardware.","2018-05-22","2023-05-03 16:06:42","2023-05-03 16:06:42","2023-05-03 16:06:42","772-775","","2.19","7","","","","","","","","","","en","","","","","etheses.uinsgd.ac.id","","Number: 2.19 Publisher: Science Publishing Corporation","","C:\Users\gabra\Zotero\storage\RZT6EJ6L\Ramdhani et al. - 2018 - Requirements elicitation in software engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6FAHTUV9","journalArticle","2017","Joseph, Elijah","Survey on Requirement Elicitation Techniques: It's Effect on Software Engineering","International Journal of Innovative Research in Computer and Communication Engineering","","","","","Requirement Elicitation is one of the important factors in developing any new application. Most of systems fail just because of wrong elicitation practice. A requirement may be defined as a demand or need. In software engineering, a requirement is a description of what a system should do. System may have dozen to thousands of requirements. Without the elicitation techniques it is impossible to find out requirements and the needs of the developing system. It provides base for the developer to construct a structure of proposed system keeping in view the wish list of stake holders. This paper is based on understanding elicitation techniques and their usage in real time applications, by implementing the Elicitation techniques for knowing the needs of stakeholder so that system developer can get clear view of requirement for the developing system. Furthermore this paper provide the flexibility to requirements engineers to know the characteristics and effectiveness of every techniques, it will serve as a guideline in selecting a particular elicitation technique in respect to the type of application and situation.","2017-05-01","2023-05-03 16:06:46","2023-05-03 16:06:46","","9201-9215","","","5","","International Journal of Innovative Research in Computer and Communication Engineering","Survey on Requirement Elicitation Techniques","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\4QHM2TPF\Joseph - 2017 - Survey on Requirement Elicitation Techniques It's.pdf; ","https://www.researchgate.net/profile/Elijah-Joseph/publication/317606075_Survey_on_Requirement_Elicitation_Techniques_It's_Effect_on_Software_Engineering/links/5942f07f0f7e9b6910eae62d/Survey-on-Requirement-Elicitation-Techniques-Its-Effect-on-Software-Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"F82YEJ3L","journalArticle","2018","Saad, Aslina; Dawson, Christian","Requirement elicitation techniques for an improved case based lesson planning system","Journal of Systems and Information Technology","","1328-7265","10.1108/JSIT-12-2016-0080","https://doi.org/10.1108/JSIT-12-2016-0080","Purpose This paper presents a recommendation on how one requirement elicitation technique supports the other techniques in defining system requirement for a case-based system. A case-based lesson planning system aims to assist teachers in constructing quality lesson plans through its cycle which begins with case retrieval. To retrieve relevant lesson plans, appropriate inputs should be used and the intended output needs to be identified via suitable requirement elicitation techniques. The use of a single technique might result in inadequate requirement specification, thus affecting the quality of the output requirements as well as quality of the final information system. Design/methodology/approach Requirement elicitation was carried out in three phases: phase I involved document review, phase II was an interview and phase III used a survey. Respondents of the study comprised experienced teachers as well as new teachers. This research used both qualitative and quantitative approaches to answer the research questions, which involved semi-structured interviews, document review and survey to collect the relevant data. Documents were reviewed by analysing lesson plans from three different countries. In addition, a review of lesson plans prepared by teachers and the standard syllabus were carried out. Findings from the document review were used in structured interviews using a teach-back technique, sorting and matrix of attribute-values. A questionnaire was then constructed based on the interviews and document review. Findings The findings of this initial study, as part of a larger research investigation, would help in knowledge modelling and representation. This will contribute to effective case retrieval via good design of the system input and output. The study identifies important elements of a lesson plan according to their ranking. Keywords that were used by teachers as input for retrieval were identified together with the expected output. Research limitations/implications The main goal of requirement elicitation is to specify complete and detailed requirements of the proposed system. There are two main types of requirement: functional and non-functional requirements. This paper only focuses on functional requirements – specifically case retrieval with appropriate input and output. Practical implications Various requirement engineering (RE) techniques can be applied in different phases of requirement elicitation. Suitable technique should be chosen at different phases of RE, as it is important for triangulation purposes. Incomplete RE will affect the modelling part of system development, and, thus, affect the design and implementation of an information system. Social implications Software engineer or anybody involved in system development should plan accordingly for the RE process. They should be creative and reasonable in selecting suitable RE techniques to be applied. Originality/value This study aims to gain understanding of the various aspects of lesson planning. Crucial knowledge in lesson planning that was gathered from the elicitation phase is modelled to have a good understanding of the problems and constraints among teachers. The findings of this initial study, as part of a larger research investigation, would help in knowledge modelling and representation. This will contribute to effective case retrieval via a good design of the system input and output.","2018-01-01","2023-05-03 16:07:02","2023-05-03 16:07:02","2023-05-03 16:07:02","19-32","","1","20","","","","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Publishing Limited","","C:\Users\gabra\Zotero\storage\RWE23LNB\Saad and Dawson - 2018 - Requirement elicitation techniques for an improved.pdf","","","Requirement elicitation; Document review; Interview; Lesson plan; Requirement analysis; Survey","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K5JQUFIU","journalArticle","2009","Laporti, Viviane; Borges, Marcos R. S.; Braganholo, Vanessa","Athena: A collaborative approach to requirements elicitation","Computers in Industry","","0166-3615","10.1016/j.compind.2009.02.011","https://www.sciencedirect.com/science/article/pii/S0166361509000499","The quality of the requirements is crucial for a project's success. Requirements elicitation, however, is not an easy task. Viewpoint, mental model and expectation differences among users and analysts make this task hard and conflicting. In many cases, the clients are not completely sure about their real needs. In others, the current work process does not correspond to management expectations. In this paper, we try to overcome these problems by presenting Athena, an approach founded on collective knowledge to progressively build the system requirements from a narrative of user stories to the definition of use cases. Athena is a collaborative approach to elicit requirements. It is based on group storytelling, where stakeholders tell stories about current and past systems that support a given activity. The stories are merged to form a single story. Stories are then transformed into scenarios, and from scenarios to use cases. Our solution consists of a knowledge model based on stories about the system, a collective construction method, and a tool to support interactions. We have conducted experimental analyses to show the effectiveness of the proposed approach.","2009-08-01","2023-05-03 16:07:08","2023-05-03 16:07:08","2023-05-03 16:07:08","367-380","","6","60","","Computers in Industry","Athena","Collaborative Engineering: from Concurrent Engineering to Enterprise Collaboration","","","","","","en","","","","","ScienceDirect","","","","","","","Collaboration; Requirements; Group storytelling; Use cases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PLFJ2KIH","journalArticle","2016","Menéndez, Danielle; Caetano da Silva, Paulo","A Requirement Elicitation Process for BI Projects","Lecture Notes on Software Engineering","","","10.7763/LNSE.2016.V4.218","","","2016-01-01","2023-05-03 16:07:16","2023-05-03 16:07:16","","20-26","","","4","","Lecture Notes on Software Engineering","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\6EXK6IBV\Menéndez and Caetano da Silva - 2016 - A Requirement Elicitation Process for BI Projects.pdf; ","https://www.researchgate.net/profile/Paulo-Caetano-Da-Silva/publication/276316837_A_Requirement_Elicitation_Process_for_BI_Projects/links/5670454008aececfd55315f9/A-Requirement-Elicitation-Process-for-BI-Projects.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3GB7RTGP","journalArticle","","Sharmila, P; Umarani, R","A walkthrough of Requirement Elicitation Techniques","International Journal of Engineering Research and Applications","","","","","","","2023-05-03 16:07:18","2023-05-03 16:07:18","","","","4","1","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\2BGRJ4AF\Sharmila and Umarani - A walkthrough of Requirement Elicitation Technique.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UCDEKM56","conferencePaper","2005","Hong, Dan; Chiu, Dickson K. W.; Shen, Vincent Y.","Requirements elicitation for the design of context-aware applications in a ubiquitous environment","Proceedings of the 7th international conference on Electronic commerce","978-1-59593-112-2","","10.1145/1089551.1089658","https://doi.org/10.1145/1089551.1089658","With the invention of new interaction devices and the requirements for ubiquitous access to application systems, user's interactions have moved beyond the desktop and evolved into a trend of ongoing development. The context in which the application is being used becomes an integral part of the activity carried out with the system. The inclusion of context-awareness provides convenience and efficiency to users for their ubiquitous access. Traditional human-computer interface (HCI) theories are now inadequate for developing these context-aware applications, as we believe that the notion of context should be extended to different categories: computing contexts, user contexts, and physical contexts for ubiquitous computing. This demands a new paradigm for system requirements elicitation and design in order to make good use of such extended context information. In this paper, we introduce a methodology for the elicitation of context-aware requirements and the matching of context-awareness features to the target context by capability matching. Based on this model, we analyze the design issues of some common ubiquitous access situations and show how to fit them systematically into a context-aware application by considering the requirements of a ubiquitous tourist application.","2005-08-15","2023-05-03 16:07:24","2023-05-03 16:07:24","2023-05-03","590–596","","","","","","","ICEC '05","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","context; context-aware application; design issues; HCI; tourist system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QDX2UDR6","conferencePaper","2010","Vijayan, Jaya; Raju, G.","Requirements Elicitation Using Paper Prototype","Advances in Software Engineering","978-3-642-17578-7","","10.1007/978-3-642-17578-7_4","","Requirements engineering is both the hardest and critical part of software development since errors at this beginning stage propagate through the development process and are the hardest to repair later. This paper proposes an improved approach for requirements elicitation using paper prototype. The paper progresses through an assessment of the new approach using student projects developed for various organizations. The scope of implementation of paper prototype and its advantages are unveiled.","2010","2023-05-03 16:07:27","2023-05-03 16:07:27","","30-37","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirements Engineering; Elicitation; Paper prototype","Kim, Tai-hoon; Kim, Haeng-Kon; Khan, Muhammad Khurram; Kiumi, Akingbehin; Fang, Wai-chi; Ślęzak, Dominik","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AXNQPBDW","journalArticle","2015","Seyff, Norbert; Todoran, Irina; Caluser, Kevin; Singer, Leif; Glinz, Martin","Using popular social network sites to support requirements elicitation, prioritization and negotiation","Journal of Internet Services and Applications","","1869-0238","10.1186/s13174-015-0021-9","https://doi.org/10.1186/s13174-015-0021-9","Social networks have changed our daily life and they have the potential to significantly influence and support Requirements Engineering (RE) activities. Social network-based RE approaches will allow us to overcome limitations of traditional approaches and allow end users to play a more prominent role in RE. They are key stakeholders in many software projects. However, involving end users is challenging, particularly when they are not within organizational reach. The goal of our work is to increase end user involvement in RE. In this paper we present an approach where we harness a social network to perform RE activities such as elicitation, prioritization and negotiation. Our approach was applied in three studies where students used Facebook to actively participate in RE activities of different projects. Although there are limitations, the results show that a popular social network site can support distributed RE.","2015-04-24","2023-05-03 16:08:25","2023-05-03 16:08:25","2023-05-03 16:08:25","7","","1","6","","Journal of Internet Services and Applications","","","","","","","","","","","","","BioMed Central","","","","C:\Users\gabra\Zotero\storage\2TX23T6K\Seyff et al. - 2015 - Using popular social network sites to support requ.pdf","","","Requirements engineering; End user involvement; Social network sites","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AFSXB5UJ","journalArticle","2018","Saeed, Shehla; Fatima, Umbreen; Iqbal, Faiza","A review of Requirement Elicitation techniques in OSSD","","","","","","Open Source projects are getting very popular for more than last three decades. As Open Source Software development (OSSD) environment is globally dispersed, it is very important to determine and understand what particular approaches are being used for requirement elicitation in OSSD and how these approaches are different than traditional requirement elicitation. Requirement elicitation is human-centric approach done by interaction among various stakeholders to find out the needs of a project. Traditional RE process is a centralized approach involving social interaction of stakeholders. Whereas in OSSD stakeholder's interaction are decentralized and dynamic due to geographically dispersed locations of the stakeholders. The focus of this study is review of requirement elicitation process in globally distributed OSSD. How it deviates from traditional software engineering phases? What challenges are faced during requirement elicitation phase in OSSD? What methods or procedures can be used to overcome these challenges?","2018-03-01","2023-05-03 16:08:27","2023-05-03 16:08:27","","86","","","18","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\XRTIAGYH\Saeed et al. - 2018 - A review of Requirement Elicitation techniques in .pdf; ","https://www.researchgate.net/profile/Umbreen-Fatima-2/publication/351451131_A_review_of_Requirement_Elicitation_techniques_in_OSSD/links/6099017f458515d3150ca6ce/A-review-of-Requirement-Elicitation-techniques-in-OSSD.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2QAXZIHL","journalArticle","2006","Davis, Christopher J.; Fuller, Robert M.; Tremblay, Monica Chiarini; Berndt, Donald J.","Communication Challenges in Requirements Elicitation and the Use of the Repertory Grid Technique","Journal of Computer Information Systems","","0887-4417","10.1080/08874417.2006.11645926","https://doi.org/10.1080/08874417.2006.11645926","Requirements elicitation is a central and critical activity in the systems analysis and design process. This paper explores the nature of the challenges that confront analysts and their clients during requirements elicitation. A review of the literature highlights communication as a persistent locus of concern among systems analysts, users and procurers. The paper presents a classification of communication challenges that arise during the requirements elicitation process.Empirical evidence from a brief case study is used to illustrate the scope and impact of these communication challenges and to present a complementary approach to requirements elicitation. The paper introduces the Repertory Grid technique as a means to ameliorate some of the communication issues that persist, particularly in projects where information systems support specialized work.The paper is written in the form of a case tutorial, providing insight into the contribution of the Repertory Grid technique to requirements elicitation.","2006-06-01","2023-05-03 16:08:36","2023-05-03 16:08:36","2023-05-03 16:08:36","78-86","","5","46","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/08874417.2006.11645926","","","","","requirements elicitation; communication challenges; systems analysis and design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PLSKYLUQ","journalArticle","2012","Sakhnini, Victoria; Mich, Luisa; Berry, Daniel M.","The effectiveness of an optimized EPMcreate as a creativity enhancement technique for Web site requirements elicitation","Requirements Engineering","","1432-010X","10.1007/s00766-011-0133-0","https://doi.org/10.1007/s00766-011-0133-0","Creativity is often needed in requirements elicitation, i.e., requirement idea generation; and techniques to enhance creativity are believed to be useful. This paper describes two controlled experiments to compare the requirements-elicitation effectiveness of three creativity enhancement techniques (CET): (1) full EPMcreate; (2) Power-Only EPMcreate, an optimization of full EPMcreate; and (3) traditional brainstorming. In each experiment, one team of university students applied one of the two or three CETs under study in the experiment to generate ideas for requirements for enhancing a high school’s public Web site. The results of the first experiment indicate that Power-Only EPMcreate is more effective, by the quantity and quality of the ideas generated, than the full EPMcreate, which is, in turn, more effective than brainstorming. The results of the second experiment confirm that Power-Only EPMcreate is more effective, by the same measures, than full EPMcreate. In each experiment, for the sake of uniform, reproducible evaluation, a requirement idea is considered high quality if it is both new and useful.","2012-09-01","2023-05-03 16:08:45","2023-05-03 16:08:45","2023-05-03 16:08:45","171-186","","3","17","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Controlled experiment; Creativity; Creativity enhancement techniques; Multiple viewpoints; Optimization of creativity enhancement technique; Pragmatics of communication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M9XP7X6E","conferencePaper","2014","Sadiq, Mohd; Jain, S. K.","Stakeholder identification method in goal oriented requirements elicitation process","2014 IEEE 5th International Workshop on Requirements Prioritization and Communication (RePriCo)","","","10.1109/RePriCo.2014.6895219","","In any software project, different stakeholders participate in requirements elicitation process to identify the requirements of software. Stakeholder Identification (SI) is an important part of requirements elicitation process. Despite its importance, SI methods have received less attention by goal oriented requirements engineering (GORE) community. Goals are high level objective of an organization; and are the basis of GORE. In literature, we identify that goal oriented requirements elicitation process (GOREP) like knowledge acquisition for automated specification (KAOS), attributed goal oriented requirements analysis (AGORA), and goal oriented idea generation (GOIG) etc. do not support SI methods. Therefore, to address this issue, we present a method for SI in GOREP which includes the following steps: specify stakeholder types, specify stakeholder roles, selecting and classifying stakeholders using fuzzy based approach, and stakeholder's analysis. Finally, the utilization of the proposed method is demonstrated with the help of an example.","2014-08","2023-05-03 16:08:49","2023-05-03 16:08:49","","25-33","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Requirements engineering; Software systems; Decision making; Stakeholder identification; Organizations; Silicon; Fuzzy logic; Goal oriented requirements engineering; Pragmatics; Requirements elicitation processes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 5th International Workshop on Requirements Prioritization and Communication (RePriCo)","","","","","","","","","","","","","","",""
"TUMQ5NA3","conferencePaper","2011","Sonia; Singhal, Archana","Development of Agile Security Framework Using a Hybrid Technique for Requirements Elicitation","Advances in Computing, Communication and Control","978-3-642-18440-6","","10.1007/978-3-642-18440-6_22","","Today’s competitive market demands immediate attention on security issues for developing secure software system. Security must be an integral part of any application development methodology. It becomes more challenging when developers design projects according to agile methodology. Traditional ways of development are sequential considering major changes during analysis. Agile methodology is required as there is a need for an iterative approach which encourages changes in requirements at any stage in software development lifecycle. In this paper, we are presenting a framework which effectively implements security practices in agile development and adopts additional features proposed by other researchers. The key point in our framework is that we are embedding a hybrid technique for requirement elicitation with Agile Software Development (ASD). This technique would combine abuser stories and attack trees drawing best features of each of their individual methods. This hybrid technique maps security threats found during security requirements effectively as compared to individual techniques.","2011","2023-05-03 16:11:22","2023-05-03 16:11:22","","178-188","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Agile Software Development; Abuser stories; Attack Trees; Software Security; Threat Modeling","Unnikrishnan, Srija; Surve, Sunil; Bhoir, Deepak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CFQIT6ST","conferencePaper","2010","Solís, Carlos; Ali, Nour","Distributed Requirements Elicitation Using a Spatial Hypertext Wiki","2010 5th IEEE International Conference on Global Software Engineering","","","10.1109/ICGSE.2010.35","","In Global Software Development (GSD), distributed stakeholders (e.g. team members, customers, etc) have to collaborate and communicate in an efficient and effective way to share, create and discuss knowledge. Nowadays, a challenge is to provide integrated collaborative tools that implement creativity techniques which allow distributed stakeholders to externalize their knowledge through brainstorming and share and store knowledge in a common repository. The Requirements Elicitation (RE) process is a clear example where this kind of support is needed in the software development process. This paper presents the Spatial Hypertext Wiki as a collaborative tool for supporting creativity in the RE process. The Spatial Hypertext characteristics of the wiki provide a virtual board where distributed stakeholders can share, brainstorm, negotiate, or prioritize the knowledge involved in RE.","2010-08","2023-05-03 16:11:28","2023-05-03 16:11:28","","237-246","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2329-6313","","C:\Users\gabra\Zotero\storage\Q7K22MDD\Solís and Ali - 2010 - Distributed Requirements Elicitation Using a Spati.pdf","","","Programming; Collaboration; Software; Requirements elicitation; Context; Electronic mail; global software development; Visualization; Face; ShyWiki; spatial hypertext wiki","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 5th IEEE International Conference on Global Software Engineering","","","","","","","","","","","","","","",""
"TJGGF36T","conferencePaper","2003","Kato, J.; Saeki, M.; Ohnishi, A.; Nagata, M.; Kaiya, H.; Komiyaa, S.; Yamamoto, S.; Horai, H.; Watahiki, K.","PAORE: package oriented requirements elicitation","Tenth Asia-Pacific Software Engineering Conference, 2003.","","","10.1109/APSEC.2003.1254354","","We propose a new requirements elicitation method in the domains of ERP, CRM, and SCM by using specifications of several existing package software. We have analyzed the requirements elicitation processes of experienced analysts in a specific domain, and found that they clarify requirements by referring the specifications of existing packages that seem to be satisfied with customer's needs. This process can be formulated into two subprocesses: 1) package selection, where an analyst compares the customer's needs with functions/nonfunctions of packages and selects the suitable candidates of packages; and 2) requirements evolution, where he examines the selected packages with his customer and an approved part of specifications of packages are added into their requirements. The proposed method, called PAORE (package oriented requirements elicitation method) is designed based on the analysis. We applied this method to a simple but realistic example of Web-based sales supporting system and assessed it.","2003-12","2023-05-03 16:11:30","2023-05-03 16:11:30","","17-26","","","","","","PAORE","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Knowledge engineering; Software engineering; Application software; Design methodology; Concrete; Enterprise resource planning; Marketing and sales; Packaging; Software packages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tenth Asia-Pacific Software Engineering Conference, 2003.","","","","","","","","","","","","","","",""
"HJMBK2FZ","conferencePaper","2020","Sampada, G.C.; Sake, Tende Ivo; Chhabra, Megha","A Review on Advanced Techniques of Requirement Elicitation and Specification in Software Development Stages","2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC)","","","10.1109/PDGC50313.2020.9315741","","The requirement engineering stage is a significant stage during the development of the software. All the eventual stages in the development of the software are resolved by this stage. If this phase is dominated, then the software may not be developed as per the expectation of the client. The automation in requirement engineering provides a peril for the developers to amend the activities during the process. This paper reviews different approaches staged by the researchers to automate the requirement elicitation process of the software development cycle.","2020-11","2023-05-03 16:11:31","2023-05-03 16:11:31","","215-220","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2573-3079","","","","","Requirements engineering; Software; Unified modeling language; Automation; Stakeholders; natural language processing; requirement engineering; automated specification; classification; Classification algorithms; Natural languages; nonfunctional requirement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC)","","","","","","","","","","","","","","",""
"6DSRSGVU","journalArticle","2020","Rueda, Silvia; Panach, Jose Ignacio; Distante, Damiano","Requirements elicitation methods based on interviews in comparison: A family of experiments","Information and Software Technology","","0950-5849","10.1016/j.infsof.2020.106361","https://www.sciencedirect.com/science/article/pii/S0950584920301282","Context There are several methods to elicit requirements through interviews between an end-user and a team of software developers. The choice of the best method in this context is usually on subjective developers’ preferences instead of objective reasons. There is a lack of empirical evaluations of methods to elicit requirements that help developers to choose the most suitable one. Objective This paper designs and conducts a family of experiments to compare three methods to elicit requirements: Unstructured Interviews, where there is no specific protocol or artifacts; Joint Application Design (JAD), where each member of the development team has a specific role; Paper Prototyping, where developers contrast the requirements with the end-user through prototypes. Method The experiment is a between-subjects design with next response variables: number of requirements, time, diversity, completeness, quality and performance. The experiment consists of a maximum of 4 rounds of interviews between students that play the role of developers and an instructor that plays the role of client. Subjects had to elaborate a requirements specification document as results of the interviews. We recruited 167 subjects in 4 replications in 3 years. Subjects were gathered in development teams of 6 developers at most, and each team was an experimental unit. Results We found some significant differences. Paper Prototyping yields the best results to elicit as many requirements as possible, JAD requires the highest time to report the requirements and the least overlapping, and Unstructured Interviews yields the highest overlapping and the lowest time to report the requirements. Conclusions Paper Prototyping is the most suitable for eliciting functional requirements, JAD is the most suitable for non-functional requirements and to avoid overlapping, Unstructured Interviews is the fastest but with poor quality in the results.","2020-10-01","2023-05-03 16:11:32","2023-05-03 16:11:32","2023-05-03 16:11:32","106361","","","126","","Information and Software Technology","Requirements elicitation methods based on interviews in comparison","","","","","","","en","","","","","ScienceDirect","","","","","","","Empirical software engineering; Requirements elicitation; Joint application design; Prototyping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C54IEL2M","conferencePaper","2010","Kaiya, Haruhiko; Shimizu, Yuutarou; Yasui, Hirotaka; Kaijiri, Kenji; Saeki, Motoshi","Enhancing Domain Knowledge for Requirements Elicitation with Web Mining","2010 Asia Pacific Software Engineering Conference","","","10.1109/APSEC.2010.11","","To elicit software requirements, we have to have knowledge about a problem domain, e.g., healthcare, shopping or banking where the software is applied. A description of domain knowledge such as a domain ontology helps requirements analysts to elicit requirements completely and correctly to some extent even if they do not have such knowledge sufficiently. Several requirements elicitation methods and tools using domain knowledge description have been thus proposed, but how to develop and to enhance such description is rarely discussed. Summarizing existing documents related to the domain is one of the typical ways to develop such description, and an interview to domain experts is another typical way. However, requirements cannot be elicited completely only with such domain-specific knowledge because a user of such knowledge, i.e., a requirements analyst is not a domain expert in general. Requirements could be also elicited more correctly with both specific and general knowledge because general knowledge sometimes improves understandings of analysts about domain-specific knowledge. In this paper, we propose a method and a tool to enhance an ontology of domain knowledge for requirements elicitation by using Web mining. In our method and our tool, a domain ontology consists of concepts and their relationships. Our method and tool helps an analyst with a domain ontology to mine general concepts necessary for his requirements elicitation from documents on Web and to add such concepts to the ontology. We confirmed enhanced ontologies contribute to improving the completeness and correctness of elicited requirements through a comparative experiment.","2010-11","2023-05-03 16:11:37","2023-05-03 16:11:37","","3-12","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1362","","","","","Software; Measurement; Requirements Elicitation; Ontologies; Books; Conference management; Domain Knowledge; Ontology; Web mining; Web Mining; Web pages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 Asia Pacific Software Engineering Conference","","","","","","","","","","","","","","",""
"T2ZEA8GE","journalArticle","2005","Mich, Luisa; Anesi, Cinzia; Berry, Daniel M.","Applying a pragmatics-based creativity-fostering technique to requirements elicitation","Requirements Engineering","","1432-010X","10.1007/s00766-005-0008-3","https://doi.org/10.1007/s00766-005-0008-3","This paper proposes the application to requirements elicitation of an innovative creativity fostering technique based on a model of the pragmatics of communication, the Elementary Pragmatic Model (EPM). The EPM has been used to define a creative process, called EPMcreate (EPM Creative Requirements Engineering TEchnique) that consists of sixteen steps. In each step, the problem is analyzed according to one elementary behavior identified by the EPM. Each behavior suggests that the analyst look at the problem from a different combination of users’ viewpoints. The feasibility and effectiveness of the technique in requirements elicitation was demonstrated by experiments on two projects with very different characteristics. Each experiment compared the performances of two analysis teams, one of which used EPMcreate and the other of which used brainstorming. The results of both experiments highlights the higher effectiveness of EPMcreate. Additional data from the experiments are examined for other insights into how and why EPMcreate is effective.","2005-11-01","2023-05-03 16:11:38","2023-05-03 16:11:38","2023-05-03 16:11:38","262-275","","4","10","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Pragmatics of communication; Exploratory experiment; Problem solving; Viewpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MIPDZRCG","journalArticle","2015","Sadiq, Mohd; Jain, S. K.","A fuzzy based approach for the selection of goals in goal oriented requirements elicitation process","International Journal of System Assurance Engineering and Management","","0976-4348","10.1007/s13198-014-0260-3","https://doi.org/10.1007/s13198-014-0260-3","Goal selection in goal oriented requirements elicitation process (GOREP) like KAOS, i*, AGORA etc., is a multi-criteria decision making problem. In literature, we identify that existing GOREP do not support to choose and adopt a goal out of the alternatives of the decomposed goals when multi-criteria decision making approaches are used and stakeholders’ preferences are in the form of linguistic variables. Therefore, this paper presents a fuzzy based approach to address the above issue by using α-level weighted F-preference relation in group decision making process. Finally, the utilization of the proposed approach is demonstrated with the help of an example.","2015-06-01","2023-05-03 16:11:48","2023-05-03 16:11:48","2023-05-03 16:11:48","157-164","","2","6","","Int J  Syst  Assur  Eng  Manag","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Fuzzy logic; Goal oriented requirements engineering; Decision making approach","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YN3YD8EF","conferencePaper","2013","Azadegan, Aida; Cheng, Xusen; Niederman, Fred; Yin, Guopeng","Collaborative Requirements Elicitation in Facilitated Collaboration: Report from a Case Study","2013 46th Hawaii International Conference on System Sciences","","","10.1109/HICSS.2013.136","","User requirements elicitation is a complex process that requires stakeholders in teams to collaborate, go through decision-making processes and, finally, to arrive at consensus. During the user requirements elicitation processes, stakeholders who have different backgrounds, view points and understandings, need to clarify, capture and uncover user requirements in an efficient and effective manner. Many industry experts have admitted that collaboration among stakeholders in a facilitated workshop, aimed at defining and articulating user requirements, is one of the most difficult tasks in software development. In this research we present a collaborative process for user requirements elicitation. We used the principles of the Collaboration Engineering (CE) to design the process, which consists of Think Lets, as process building blocks. We designed the process to predictably guide the stakeholders through decision-making processes in a collaborative manner. The process is evaluated in a case-study within an industrial IT firm in China.","2013-01","2023-05-03 16:11:54","2023-05-03 16:11:54","","569-578","","","","","","Collaborative Requirements Elicitation in Facilitated Collaboration","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1605","","","","","Collaboration; Software; Companies; Conferences; Interviews; requirements elicitation; collaboration; facilitation; thinklets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 46th Hawaii International Conference on System Sciences","","","","","","","","","","","","","","",""
"DJRU6RJ7","journalArticle","2021","Díaz, Eduardo; Panach, José Ignacio; Rueda, Silvia; Ruiz, Marcela; Pastor, Oscar","Are requirements elicitation sessions influenced by participants' gender? An empirical experiment","Science of Computer Programming","","0167-6423","10.1016/j.scico.2020.102595","https://www.sciencedirect.com/science/article/pii/S0167642320302033","Context Requirements elicitation is a crucial phase in the software development life cycle. During requirements elicitation sessions, requirements engineers capture software requirements, and motivate stakeholders to express needs and expected software functionalities. In this context, there is a lack of extensive empirical research reporting the extent to which elicitation sessions can be influenced by participants' gender. Objective This paper presents our research endeavour to investigate requirements engineers' effort and elicited requirements' accuracy based on participants' gender. Method We conducted an experiment in two rounds with a total of 59 students who played the role of requirements engineers. In the first experimental task, the participant watched two videos where men and women stakeholders expressed software requirements. Later on, the participants specified software requirements in the shape of Business Process Model and Notation (BPMN) and next they generated Graphical User Interfaces (GUIs) from those models. Results We observed two significant differences. One between men and women requirements engineers in terms of dedicated effort during requirements specification: men took less effort. Other between stakeholders' gender in terms of accuracy resulted of BPMN models: models built from men stakeholders yield more accuracy. On the contrary, accuracy of resulted GUIs models did not show significant differences regarding requirements engineers or stakeholders' gender. Conclusions Analysing descriptive data, women spent more time both as stakeholders and as requirements engineers but their accuracy is better.","2021-04-01","2023-05-03 16:13:13","2023-05-03 16:13:13","2023-05-03 16:13:13","102595","","","204","","Science of Computer Programming","Are requirements elicitation sessions influenced by participants' gender?","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\YP335TLE\Díaz et al. - 2021 - Are requirements elicitation sessions influenced b.pdf","","","Requirements elicitation; BPMN model; Empirical experiment; Gender; Graphical user interfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UTQA96C6","journalArticle","","Dieste, Oscar; Lopez, Marta; Ramos, Felicidad","Updating a Systematic Review about Selection of Software Requirements Elicitation Techniques","","","","","","Quality of software products is closely related to the elicitation requirement process. Several studies point out that elicitation techniques achieve different results when applied in different contexts. This paper presents some recommendations about the situations in which elicitation techniques are useful. Recommendations are based on a previous systematic review, which was updated and expanded with 13 new empirical studies and more than 60 new empirical results. The aggregation process generated 5 new evidences and modified 4 existing ones. In the previous review, it was found that interviews were one of the most adequate techniques in most situations. The new evidence supports the same conclusion.","","2023-05-03 16:13:21","2023-05-03 16:13:21","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PLEXPQW2\Dieste et al. - Updating a Systematic Review about Selection of So.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6LLV729D","conferencePaper","2017","Asghar, Aneesa Rida; Tabassum, Atika; Bhatti, Shahid Nazir; Jadi, Amr Mohsen","Impact and challenges of requirements elicitation & prioritization in quality to agile process: Scrum as a case scenario","2017 International Conference on Communication Technologies (ComTech)","","","10.1109/COMTECH.2017.8065749","","Agile methodology is an innovative and iterative process that supports changing requirements and helps in addressing changes throughout the development process. Requirements are elicited at the beginning of every software development process and project (product) and latter are prioritized according to their importance to the market and to the product itself. One of the most important and influencing steps while making a software product is requirements prioritization. Prioritizing requirements helps the software team to understand the existence and importance of a particular requirement, there are several requirements prioritization methodologies that aid in decision making but importantly many lacks to account the important factors that have significant influence in prioritizing requirements. We have proposed a requirement prioritization methodology based on several factors such as time to market, cost, risk etc. The proposed model is expected to overcome this lack. In (Scrum) sprints, requirements will be prioritized both on the basis of influencing factors such as cost, value, risk, time to market etc. and through the effect of non-functional requirements over functional requirements. This will improve the overall quality of software product when it is included in the development process of scrum. Requirements will not only be prioritized based on sprints, human decision but by critically analyzing the factors (sub characteristics) that can cause the product to success/ fail repeatedly thus ensuring the consistency in right requirements and hence the right prioritized requirements will be selected for a particular sprint at a time.","2017-04","2023-05-03 16:13:25","2023-05-03 16:13:25","","50-55","","","","","","Impact and challenges of requirements elicitation & prioritization in quality to agile process","","","","","","","","","","","","IEEE Xplore","","","","","","","Software engineering; Requirements engineering; Software; Scrum; Stakeholders; Agile Software Development (ASD); Agile Software Engineering (ASE); Product Owner (PO); Scrum (Software development); Time to market","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 International Conference on Communication Technologies (ComTech)","","","","","","","","","","","","","","",""
"FLLCM8YL","journalArticle","2018","Wong, Lenis; Mauricio, David","New factors that affect the activities of the requirements elicitation process","Journal of Engineering Science and Technology","","","","","Given that requirements elicitation is one of the important stages in software development, many researchers agree that incorrect, incomplete and confusing requirements have a great negative impact on the quality, cost and delivery time of software projects. Therefore, factors that affect requirements elicitation and the activities of its process have been identified. However, there are no studies on what factors affect the activities Integration, Documentation and Refinement. Moreover, the theories of organizational behaviour, organizational learning, Technology acceptance model, among others, provide factors not studied in the area of requirements elicitation. The purpose of this research is to identify new factors that influence each activity of the requirements elicitation process and, consequently, the quality. Hence, in the present paper seven new factors that affect the activities of the requirements elicitation process are presented: learning capacity, negotiation capacity, permanent staff, perceived utility, confidence, stress, and semi-autonomous. In addition, 17 relationships (factor-activity) have been introduced. An empirical study was carried out on 182 respondents, obtaining, from the analysis of simple and multiple correspondences, that all the proposed factors have an influence between ""High"" and ""Very high"". Furthermore, the hypothesis test T-Students, with 95% confidence, verifies that 15 of the 17 relationships are valid.","2018-07-22","2023-05-03 16:13:29","2023-05-03 16:13:29","","1992-2015","","","13","","Journal of Engineering Science and Technology","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\B2GRC66J\Wong and Mauricio - 2018 - New factors that affect the activities of the requ.pdf; ","https://www.researchgate.net/profile/Lenis-Wong/publication/327160869_New_factors_that_affect_the_activities_of_the_requirements_elicitation_process/links/5b7d821692851c1e1227b2a9/New-factors-that-affect-the-activities-of-the-requirements-elicitation-process.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2GEL558H","journalArticle","2016","Bormane, Līga; Gržibovska, Jūlija; Bērziša, Solvita; Grabis, Jānis","Impact of Requirements Elicitation Processes on Success of Information System Development Projects","Information Technology and Management Science","","2255-9094","","https://itms-journals.rtu.lv/article/view/itms-2016-0012","Requirements articulating user needs and corresponding to enterprise business processes are a key to successful implementation of information system development projects. However, the parties involved in projects frequently are not able to agree on a common development vision and have difficulties expressing their needs. Several industry experts have acknowledged that requirements elicitation is one of the most difficult tasks in development projects. This study investigates the impact of requirements elicitation processes on project outcomes depending on the applied project development methodology.","2016","2023-05-03 16:13:40","2023-05-03 16:13:40","2023-05-03 16:13:40","57-64","","1","19","","","","","","","","","","en","Copyright (c) 2016 Līga Bormane, Jūlija Gržibovska, Solvita Bērziša, Jānis Grabis","","","","itms-journals.rtu.lv","","Number: 1","","C:\Users\gabra\Zotero\storage\ZMR5PHB2\Bormane et al. - 2016 - Impact of Requirements Elicitation Processes on Su.pdf","","","requirement elicitation; Agile programming methodology; business requirements; stakeholders; user requirements analysis; waterfall model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PHBLI43H","conferencePaper","2006","Lee, Yuqin; Zhao, Wenyun","Domain Requirements Elicitation and Analysis - An Ontology-Based Approach","Computational Science – ICCS 2006","978-3-540-34386-8","","10.1007/11758549_108","","Domain requirements are fundamental for software reuse and are the product of domain analysis. This paper presents an approach to elicit and analyze domain requirements based on ontology. Using subjective decomposition method, problem domain is decomposed into several sub problem domains. The top-down refinement method is used to refine each sub problem domain into primitive requirements, which are specified using ontology definition. Abstract stakeholders are used instead of real ones when decomposing problem domain and ontology is used to represent domain primitive requirements. Not only domain commonality, variability and qualities are presented, but also reasoning logic is used to detect and handle incompleteness and inconsistency of domain requirements. In addition, a case of ‘spot and futures trading’ e-business is used to illustrate the approach.","2006","2023-05-03 16:13:44","2023-05-03 16:13:44","","805-813","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\QMZHI6PF\Lee and Zhao - 2006 - Domain Requirements Elicitation and Analysis - An .pdf","","","Requirement Elicitation; Domain Requirement; Domain User; Problem Domain; Software Requirement Specification","Alexandrov, Vassil N.; van Albada, Geert Dick; Sloot, Peter M. A.; Dongarra, Jack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NJ53FFHP","conferencePaper","2019","Braz, Rafael dos Santos; Merlin, José Reinaldo; Freitas Guilhermino Trindade, Daniela; Eduardo Ribeiro, Carlos; Sgarbi, Ederson Marcos; Junior, Fabio de Sordi","Design Thinking and Scrum in Software Requirements Elicitation: A Case Study","Design, User Experience, and Usability. Design Philosophy and Theory","978-3-030-23570-3","","10.1007/978-3-030-23570-3_14","","Design Thinking is an innovative human-centered methodology that has gained visibility and importance for its great efficacy and efficiency in generating and testing innovative ideas. The present work seeks the application of this method in software development, more specifically in Software Requirements Elicitation. To this aim, the Design Thinking method was adapted by the team through the concepts of the Scrum framework for application in a case study that was conducted within a Brazilian state university. This study has verified this method to design a system for allocating and reserving resources for this university. Through the results obtained, this model can be considered positive, since it was possible to model a solution with 95% of average completeness and 100% of stakeholders’ satisfaction.","2019","2023-05-03 16:14:35","2023-05-03 16:14:35","","179-194","","","","","","Design Thinking and Scrum in Software Requirements Elicitation","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Prototypes; Software Engineering; Scrum; Design Thinking; Software Requirements Elicitation","Marcus, Aaron; Wang, Wentao","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YRCD3U5N","conferencePaper","2014","De Troyer, Olga; Janssens, Erik","A feature modeling approach for domain-specific requirement elicitation","2014 IEEE 4th International Workshop on Requirements Patterns (RePa)","","","10.1109/RePa.2014.6894839","","In this paper, we presented an approach for domain-specific requirement elicitation. Building domain-specific software requires the expertise of people with very different background and with different levels of experience in software development. This complicates the process of requirement elicitation. The purpose of the approach is twofold. On the one hand, we want to unlock available information on requirement elicitation for particular domains. On the other hand, we want to provide a mechanism for guiding the stakeholders (non-computing as well as computing people) through the requirement elicitation process in these domains. The approach is based on Feature Modeling, a variability modeling technique used in Software Product Lines. Furthermore, a tablet app has been developed to support the approach. We demonstrate the approach for two different domains, the domain of serious games for children and the domain of e-shop web applications. A first evaluation of the approach and the tool has been done by means of two explorative case studies and resulted in positive feedbacks.","2014-08","2023-05-03 16:14:44","2023-05-03 16:14:44","","17-24","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Usability; Unified modeling language; Context; Analytical models; Requirement elicitation; Abstracts; Domain-specific; Feature modeling; Games; Tool support","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 4th International Workshop on Requirements Patterns (RePa)","","","","","","","","","","","","","","",""
"ZUJX4EUL","journalArticle","2013","","IJASCSE, Volume 2, Issue 5, 2013","","","","","","Requirements engineering is the fundamental aspect of Software Process development. It is modularized into various stages of elicitation, Analysis, Validation and Documentation. The process of building software starts with requirement elicitation. This phase determines what problem needs to be solved or what software has to be developed. Requirements are constraints or demands which are described by the customers and must be met within a specific time period. While, Elicitation is all about gathering necessities and requirements from the end-user’s to recognize what a software system should consist of, acquisition of requirements is done via an interaction between the analysts and the stakeholders. If the need of the stakeholders doesn’t meet then the quality software will not be produced.","2013","2023-05-03 16:14:45","2023-05-03 16:14:45","","","","5","2","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\CIKH8C56\2013 - IJASCSE, Volume 2, Issue 5, 2013.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3Y9PNNUG","journalArticle","2019","Wang, Zuoxu; Chen, Chun-Hsien; Zheng, Pai; Li, Xinyu; Khoo, Li Pheng","A novel data-driven graph-based requirement elicitation framework in the smart product-service system context","Advanced Engineering Informatics","","1474-0346","10.1016/j.aei.2019.100983","https://www.sciencedirect.com/science/article/pii/S1474034619305567","Nowadays, industrial companies are facing ever-increasing challenges to generate new value-in-use and maintain their high competitiveness in the market. With the rapid development of Information and Communication Technology (ICT), IT is embedded in the products themselves, i.e. smart, connected products (SCPs) to generate values. Hence, an emerging value proposition paradigm, smart product-service system (Smart PSS) was introduced, by leveraging both SCPs and its generated services as a solution bundle to meet individual customer needs. Unlike other types of PSS, in Smart PSS, massive user-generated data and product-sensed data are collected during the usage phase, where potential requirements can be elicited readily in a value co-creation manner with context-awareness. Nevertheless, only few scholars discuss any systematic manner to support requirement elicitation in such context. To fill the gaps, this research proposes a novel data-driven graph-based requirement elicitation framework in the Smart PSS, so as to assist engineering/designers make better design improvement or new design concept generation in a closed-loop manner. It underlines the informatics-based approach by integrating heterogeneous data sources into a holistic consideration. Moreover, by leveraging graph-based approach, context-product-service information can be linked by the edges and nodes in-between them to derive reliable requirements. To validate its feasibility and advantages, an illustrative example of smart bicycle design improvement is further adopted. As an explorative study, it is hoped that this work provides useful insights for the requirement elicitation process in today’s smart connected environment.","2019-10-01","2023-05-03 16:14:54","2023-05-03 16:14:54","2023-05-03 16:14:54","100983","","","42","","Advanced Engineering Informatics","","","","","","","","en","","","","","ScienceDirect","","","","","","","Knowledge management; Requirement elicitation; Data-driven design; Product-service systems; Value co-creation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I5WQM7XU","webpage","","","EBSCOhost | 122961184 | An Integration of Threat Modeling with Attack Pattern and Misuse Case for Effective Security Requirement Elicitation.","","","","","https://web.p.ebscohost.com/abstract?direct=true&profile=ehost&scope=site&authtype=crawler&jrnl=09765697&AN=122961184&h=8lzyoZqDtkCnmoUnCrsqh3Agh7OIZLPr%2fbixTGHM5mWlBMfyPeA%2fadiFzhSW4anQhUwxW1bhU6gjJlct2363Tw%3d%3d&crl=c&resultNs=AdminWebAuth&resultLocal=ErrCrlNotAuth&crlhashurl=login.aspx%3fdirect%3dtrue%26profile%3dehost%26scope%3dsite%26authtype%3dcrawler%26jrnl%3d09765697%26AN%3d122961184","","","2023-05-03 16:14:56","2023-05-03 16:14:56","2023-05-03 16:14:56","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PDJ2UN7X","book","2013","Sadiq, Mohd; Jain, Sanjay","A fuzzy based approach for requirements prioritization in goal oriented requirements elicitation process (A step towards extension of AGORA method)","","","","","","Requirements elicitation is the first sub-process of requirements engineering (RE) and involves group decision making approaches for the selection and prioritization of requirements. Prioritizing requirements means to determine the implementation order of the requirements as well as the order of importance to some stakeholders or class of stakeholders along one or more dimensions e.g., preference, business value, cost of implementation etc. Based on our literature review, we identify that existing goal oriented requirements elicitation processes do not support to prioritize the requirements when the stakeholders' opinion are often vague and contain ambiguity and multiple meaning. Therefore, to address this issue, we present a fuzzy based approach for requirements prioritization in goal oriented requirements elicitation process by combining α-level weighted F-preference relation in group decision making process and binary sort tree method to get the prioritized list of requirements. Finally, the utilization of the proposed approach is demonstrated with the help of an example.","2013-01-01","2023-05-03 16:15:09","2023-05-03 16:15:09","","","","","","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\QJS8LM8D\Sadiq and Jain - 2013 - A fuzzy based approach for requirements prioritiza.pdf; ","https://www.researchgate.net/profile/Sanjay-Jain-28/publication/299588271_A_fuzzy_based_approach_for_requirements_prioritization_in_goal_oriented_requirements_elicitation_process_A_step_towards_extension_of_AGORA_method/links/570127a708ae1408e15ea395/A-fuzzy-based-approach-for-requirements-prioritization-in-goal-oriented-requirements-elicitation-process-A-step-towards-extension-of-AGORA-method.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4A4KK3QC","journalArticle","","Gobov, Denys; Huchenko, Inna","Software Requirements Elicitation Techniques Selection Method for the Project Scope Management","","","","","","Project Scope Management is one of the ten knowledge areas described in PMBOK. It refers to the set of processes that ensures a project’s scope is accurately defined and mapped. Elicitation is a critical part of the “Collect Requirements” process of the Scope Management that helps to derive and extract information from stakeholders or other sources. The results of elicitation are used as inputs for requirement analysis and management activities. Multiple elicitation techniques may be applied alternatively or in conjunction with other techniques to accomplish the elicitation. Business analysts can modify existing techniques or create new ones to adjust the project context. The selection of the best-suited techniques inﬂuences the business analysis approach, which is an important part of the scope management plan. This paper is intended to analyze the current practice of elicitation techniques application in the software development projects, define factors influencing technique selection based on the two-classification Machine Learning model, and predict the usage of a particular elicitation technique depending on the project attributes and business analyst background. We conducted a survey study involving 328 specialists from Ukrainian IT companies. Gathered data was used to build and evaluate the prediction models.","","2023-05-03 16:15:10","2023-05-03 16:15:10","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\CQV8HA3W\Gobov and Huchenko - Software Requirements Elicitation Techniques Selec.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"D9E6AZF2","conferencePaper","2009","Kitamura, Motohiro; Hasegawa, Ryo; Kaiya, Haruhiko; Saeki, Motoshi","A Supporting Tool for Requirements Elicitation Using a Domain Ontology","Software and Data Technologies","978-3-540-88655-6","","10.1007/978-3-540-88655-6_10","","Since requirements analysts do not have sufficient knowledge on a problem domain, i.e. domain knowledge, the technique how to make up for lacks of domain knowledge is a key issue. This paper proposes the usage of a domain ontology as domain knowledge during requirements elicitation processes and a supporting tool based on this technique. In addition, we had several experiments to show the usefulness of our tool.","2009","2023-05-03 16:15:14","2023-05-03 16:15:14","","128-140","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirement Engineer; Requirement Engineering; Domain Knowledge; Domain Ontology; Inference Rule","Filipe, Joaquim; Shishkov, Boris; Helfert, Markus; Maciaszek, Leszek A.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SGHXDDL8","journalArticle","","Hehn, Jennifer; Uebernickel, Falk","Towards an understanding of the Role of Design Thinking for Requirements Elicitation - Findings from a Multiple-Case Study","","","","","","Effective requirements elicitation is perceived to be one of the most crucial activities in software-intensive development projects. While many scholars and practitioners have pointed out and agreed upon its numerous challenges, others consider the increasingly popular approach of Design Thinking to be the promising ‘cure.’ This paper provides robust empirical evidence of the role of Design Thinking for requirements elicitation and to help overcome its challenges. Specifically, this paper presents learnings in terms of process guidance, stakeholder communication, and requirements quality based on insights from a multiple-case study. In sum, Design Thinking introduces new structures and methods to enhance elicitation efforts and inspires a mind-shift towards a more human-centered and creative way of requirements elicitation. This work provides a better understanding of the multi-faceted potential of Design Thinking for requirements elicitation for both, scholars and practitioners.","","2023-05-03 16:15:15","2023-05-03 16:15:15","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PYG9S55G\Hehn and Uebernickel - Towards an understanding of the Role of Design Thi.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5HH26AIX","document","2016","Taani, Rami; Razali, Rozilawati","1375-2828-1-PB","","","","","","","2016-12-21","2023-05-03 16:17:53","2023-05-03 16:17:53","","","","","","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\R5MAGI8F\Taani and Razali - 2016 - 1375-2828-1-PB.pdf; ","https://www.researchgate.net/profile/Rami-Taani/publication/311768960_1375-2828-1-PB/links/5859e21e08aeabd9a58b4e4b/1375-2828-1-PB.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T6C552PK","webpage","","","Understanding requirements prioritisation: literature survey and critical evaluation - Malgaonkar - 2020 - IET Software - Wiley Online Library⁤","","","","","https://ietresearch.onlinelibrary.wiley.com/doi/full/10.1049/iet-sen.2019.0215","","","2023-05-03 16:17:56","2023-05-03 16:17:56","2023-05-03 16:17:56","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\WWXNFSCQ\iet-sen.2019.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R74AJYEU","journalArticle","2001","Regnell, Björn; Höst, Martin; och Dag, Johan Natt; Beremark, Per; Hjelm, Thomas","An Industrial Case Study on Distributed Prioritisation in Market-Driven Requirements Engineering for Packaged Software","Requirements Engineering","","1432-010X","10.1007/s007660170015","https://doi.org/10.1007/s007660170015","","2001-02-01","2023-05-03 16:18:07","2023-05-03 16:18:07","2023-05-03 16:18:07","51-62","","1","6","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Key words:COTS – Disagreement – Prioritisation – Product scoping – Release planning – Satisfactory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9WHFV44E","webpage","","","Tool-Supported Collaborative Requirements Prioritisation | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/8029606","","","2023-05-03 16:18:09","2023-05-03 16:18:09","2023-05-03 16:18:09","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\JRCQKQG2\8029606.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ELT77EZX","journalArticle","2018","Hujainah, Fadhl; Bakar, Rohani Binti Abu; Abdulgabber, Mansoor Abdullateef; Zamli, Kamal Z.","Software Requirements Prioritisation: A Systematic Literature Review on Significance, Stakeholders, Techniques and Challenges","IEEE Access","","2169-3536","10.1109/ACCESS.2018.2881755","","As one of the gatekeepers of quality software systems, requirements' prioritization (RP) is often used to select the most important requirements as perceived by system stakeholders. To date, many RP techniques that adopt various approaches have been proposed in the literature. To identify the strengths, opportunities, and limitations of these existing approaches, this paper studied and analyzed the RP field in terms of its significance in the software development process based on the standard review guidelines by Kitchenham. By a rigorous study selection strategy, 122 relevant studies were selected to address the defined research questions. Findings indicated that RP plays a vital role in ensuring the development of a quality system with defined constraints. The stakeholders involved in RP were reported, and new categories of the participating stakeholders were proposed. Additionally, 108 RP techniques were identified and analyzed with respect to their benefits, prioritization criteria, size of requirements, types in terms of automation level, and their limitations; 84 prioritization criteria were disclosed with their frequency usages in prioritizing the requirements. The study revealed that the existing techniques suffer from serious limitations in terms of scalability, the lack of quantification, and the prioritization of the participating stakeholders, time consumption, requirement interdependences, and the need for highly professional human intervention. These findings are useful for researchers and practitioners in improving the current state of the art and state of practices.","2018","2023-05-03 16:18:11","2023-05-03 16:18:11","","71497-71523","","","6","","","Software Requirements Prioritisation","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Access","","C:\Users\gabra\Zotero\storage\SJITV77X\Hujainah et al. - 2018 - Software Requirements Prioritisation A Systematic.pdf","","","Software engineering; Bibliographies; Systematics; Software systems; Stakeholders; Requirements prioritization; stakeholders; challenges; Complexity theory; requirements prioritization criteria; systematic literature review; techniques","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FUSIXHR5","journalArticle","1997","Karlsson, Joachim; Olsson, Stefan; Ryan, Kevin","Improved practical support for large-scale requirements prioritising","Requirements Engineering","","1432-010X","10.1007/BF02802897","https://doi.org/10.1007/BF02802897","An efficient, accurate and practical process for prioritising requirements is of great importance in commercial software developments. This article improves an existing cost-value approach in which stakeholders compare all unique pairs of candidate requirements according to their value and their cost of implementation. Techniques for reducing the required number of comparisons are suggested, thus making the process more efficient. An initial approach for managing requirements interdependencies is proposed. A support tool for the improved process has been developed to make the process more practical in commercial developments. The improved process and its support tool have been applied and evaluated in an industrial project at Ericsson Radio Systems AB. The results indicate a pressing need for mature processes for prioritising requirements, and the work presented here is an important step in that direction.","1997-03-01","2023-05-03 16:18:14","2023-05-03 16:18:14","2023-05-03 16:18:14","51-60","","1","2","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Cost-value approach; Requirements prioritising","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NBTQKQL4","conferencePaper","2008","Hatton, Sarah","Choosing the Right Prioritisation Method","19th Australian Conference on Software Engineering (aswec 2008)","","","10.1109/ASWEC.2008.4483241","","There are many methods available for prioritising software requirements. Choosing the most suitable one can often be quite difficult. A number of factors need to be considered such as the project development methodology being used, the amount of time available, the amount of information known about requirements, the stage of the project and the degree of information about priority required. This paper examines the type of information available at different stages in a project and matches it to the properties of prioritisation methods. It then recommends the usage of specific prioritisation methods at certain stages of a project.","2008-03","2023-05-03 16:18:16","2023-05-03 16:18:16","","517-526","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2377-5408","","C:\Users\gabra\Zotero\storage\BNK99VGU\4483241.html","","","Software engineering; Software Engineering; Computer industry; Decision making; Iterative methods; System testing; Analytical Hierarchy Process; Australia; Computer science; Dynamic programming; Efficient Prioritisation; Hundred Dollar Method; MoSCoW; Requirements Prioritisation; Road transportation; Scheduling; Simple Ranking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","19th Australian Conference on Software Engineering (aswec 2008)","","","","","","","","","","","","","","",""
"GZ3HEDXS","conferencePaper","2021","Talele, Pratvina; Phalnikar, Rashmi","Classification and Prioritisation of Software Requirements using Machine Learning – A Systematic Review","2021 11th International Conference on Cloud Computing, Data Science & Engineering (Confluence)","","","10.1109/Confluence51648.2021.9377190","","Requirement Engineering (RE) plays an integral role throughout the process of software development. Requirement identification and prioritisation are the foremost phases of the RE process. Latest RE research work uses Machine Learning (ML) algorithms to tackle RE problems such as identifying requirements and assigning priorities to requirements, which have given better results than that of traditional natural language processing methods. An adequate understanding of these ML methods, however, is still lacking. The aim of this study is to understand which of the ML algorithms is likely to classify and prioritise the requirements efficiently and how they can be evaluated. It is observed that the current approaches are having constraints of scalability and complexity. Different methods used for the text preprocessing of requirements from SRS and user reviews are also proposed. 6 different ML algorithms and 6 different prioritisation algorithms, which are most common methods, are found. The most popular performance parameters used are accuracy, precision and recall. The limitations of these ML approaches are irrespective of dependency of requirements, priorities are assigned to requirements, the results with respect to scalability and speed is inferior.","2021-01","2023-05-03 16:18:17","2023-05-03 16:18:17","","912-918","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\N52KAUWY\9377190.html","","","Requirements engineering; Software; Systematics; Scalability; Classification algorithms; Classification; Machine learning; Machine Learning; Prioritisation; Software algorithms; Software Requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2021 11th International Conference on Cloud Computing, Data Science & Engineering (Confluence)","","","","","","","","","","","","","","",""
"D56WVECB","journalArticle","2021","Hujainah, Fadhl; Binti Abu Bakar, Rohani; Nasser, Abdullah B.; Al-haimi, Basheer; Zamli, Kamal Z.","SRPTackle: A semi-automated requirements prioritisation technique for scalable requirements of software system projects","Information and Software Technology","","0950-5849","10.1016/j.infsof.2020.106501","https://www.sciencedirect.com/science/article/pii/S0950584920302433","Context Requirement prioritisation (RP) is often used to select the most important system requirements as perceived by system stakeholders. RP plays a vital role in ensuring the development of a quality system with defined constraints. However, a closer look at existing RP techniques reveals that these techniques suffer from some key challenges, such as scalability, lack of quantification, insufficient prioritisation of participating stakeholders, overreliance on the participation of professional expertise, lack of automation and excessive time consumption. These key challenges serve as the motivation for the present research. Objective This study aims to propose a new semiautomated scalable prioritisation technique called ‘SRPTackle’ to address the key challenges. Method SRPTackle provides a semiautomated process based on a combination of a constructed requirement priority value formulation function using a multi-criteria decision-making method (i.e. weighted sum model), clustering algorithms (K-means and K-means++) and a binary search tree to minimise the need for expert involvement and increase efficiency. The effectiveness of SRPTackle is assessed by conducting seven experiments using a benchmark dataset from a large actual software project. Results Experiment results reveal that SRPTackle can obtain 93.0% and 94.65% as minimum and maximum accuracy percentages, respectively. These values are better than those of alternative techniques. The findings also demonstrate the capability of SRPTackle to prioritise large-scale requirements with reduced time consumption and its effectiveness in addressing the key challenges in comparison with other techniques. Conclusion With the time effectiveness, ability to scale well with numerous requirements, automation and clear implementation guidelines of SRPTackle, project managers can perform RP for large-scale requirements in a proper manner, without necessitating an extensive amount of effort (e.g. tedious manual processes, need for the involvement of experts and time workload).","2021-03-01","2023-05-03 16:18:45","2023-05-03 16:18:45","2023-05-03 16:18:45","106501","","","131","","Information and Software Technology","SRPTackle","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7QT6CF7R\Hujainah et al. - 2021 - SRPTackle A semi-automated requirements prioritis.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IV63XKHE","journalArticle","2020","Malgaonkar, Saurabh; Licorish, Sherlock A.; Savarimuthu, Bastin Tony Roy","Understanding requirements prioritisation: literature survey and critical evaluation","IET Software","","1751-8814","10.1049/iet-sen.2019.0215","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0215","Requirements prioritisation deals with the ranking or classification of user requirements based on their importance. This process is central to releasing a software product with features most favoured by users. While studies have explored the efforts that are dedicated to this cause, these tend to focus on a subset of the solutions that are available in the software engineering domain. Current techniques investigated in the software engineering domain do not consider the strengths inherent in requirements prioritisation techniques developed in other disciplines (e.g. product manufacturing), a gap that should be addressed. The authors thus conducted a comprehensive systematic mapping study and critical evaluation of studies that have provided implementations of requirements prioritisation techniques across multiple disciplines (including software engineering, product manufacturing, and engineering). Among their findings, they observed that while many solutions are targeted, quite often researchers have proposed solutions that were not evaluated. Most solutions were only validated as being operational, and the attributes studied had limited effects on performance outcomes. Their evidence suggests that new techniques may address the requirements prioritisation challenge if they are inspired by hybrid approaches developed across multiple disciplines. In addition, performance trade-offs are to be expected of such techniques, depending on their performance targets.","2020","2023-05-03 16:19:08","2023-05-03 16:19:08","2023-05-03 16:19:08","607-622","","6","14","","","Understanding requirements prioritisation","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0215","","C:\Users\gabra\Zotero\storage\RDMMGVQB\Malgaonkar et al. - 2020 - Understanding requirements prioritisation literat.pdf","","","software engineering; decision making; formal specification; comprehensive systematic mapping study; multiple disciplines; product manufacturing; requirements prioritisation challenge; requirements prioritisation deals; requirements prioritisation techniques; software development management; software engineering domain; software product; user requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9NS72VIV","journalArticle","2018","Anand, R. Vijay; Dinakaran, M.","WhaleRank: an optimisation based ranking approach for software requirements prioritisation","International Journal of Environment and Waste Management","","1478-9876","10.1504/IJEWM.2018.091307","https://www.inderscienceonline.com/doi/abs/10.1504/IJEWM.2018.091307","Requirement prioritisation is one of the major areas in the software product development process. Ranking methods employed for prioritising orders the requirements based on their importance. Ranking the requirements contributes in enhancing the quality of the product using additional features and to attain customer satisfaction. However, effectiveness is the growing concern in requirement prioritisation. This paper proposes a ranking method WhaleRank to rank the requirement and the effectiveness of ranking gets enhanced using the whale optimisation algorithm (WOA). The WhaleRank method uses four ranking functions based on dictionary words, similarity measure, perception of the manager, and the newly updated requirements that are combined to form a linear rank using the ranking constants. WOA determines the optimal weights of the ranking constants that promote to determine the optimal rank for the requirements. Experimentation with the methods like CBRank, average rank, WhaleRank, and GA provide a comparative performance analysis that proves that the proposed WhaleRank outperforms all methods in terms of accuracy and disagreement measure (NDA) and the values of accuracy and NDA is 83.33% and 16.24% respectively.","2018-01","2023-05-03 16:19:18","2023-05-03 16:19:18","2023-05-03 16:19:18","1-21","","1","21","","","WhaleRank","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirement updates; similarity matrix; weighed ranking constants; whale rank optimisation; WhaleRank; WOA","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6R5TCNM8","conferencePaper","2021","Talele, Pratvina; Phalnikar, Rashmi","Software Requirements Classification and Prioritisation Using Machine Learning","Machine Learning for Predictive Analysis","9789811571060","","10.1007/978-981-15-7106-0_26","","Software Development Lifecycle (SDLC) is a systematic process used to achieve high quality software that meets customer requirements. During SDLC requirements, engineering plays an important role. Prioritisation helps to focus on the most important requirements in terms of importance, cost, penalty, time and risk. Stakeholders (users, developers) of the software product identify requirements. The two major activities of requirement engineering process are requirements classification and requirements prioritisation. Sometimes requirement mentioned by stakeholder can be of both types, i.e. functional and non-functional. So it is challenging to classify requirements separately in two different categories. There are many fundamental prioritisation techniques available to prioritise software requirements. In this paper, we have compared existing requirements prioritisation techniques based on ease of use, speed, scalability and accuracy. Our literature study suggests that the appropriate requirements prioritisation technique has to be selected that can help software developer to minimise the risk, penalty. In automating various tasks of software engineering, machine learning (ML) has shown useful positive impact. This paper discusses the various algorithms used to classify and prioritise the software requirements. The results in terms of performance, scalability and accuracy from different studies are contradictory in nature due to variations in research methodologies and the type of dataset used. Based on the literature survey conducted, we propose a new architecture that will use both types of datasets, i.e. Software Requirement Specifications (SRS) and user text reviews to create a generalised model. Our proposed architecture will attempt to extract features which can be used to train the model using ML algorithms. The ML algorithms for classifying and prioritising software requirements will be developed and assessed based on performance, scalability and accuracy.","2021","2023-05-03 16:21:42","2023-05-03 16:21:42","","257-267","","","","","","","Lecture Notes in Networks and Systems","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Machine learning; Requirement engieering; Software requirements","Joshi, Amit; Khosravy, Mahdi; Gupta, Neeraj","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IGLH76TD","journalArticle","2004","","Requirements prioritisation: an experiment on exhaustive pair-wise comparisons versus planning game partitioning","","","2004-0407","","https://digital-library.theiet.org/content/conferences/10.1049/ic_20040407","The process of selecting the right set of requirements for a product release is highly dependent on how well we succeed in prioritising the requirements candidates. There are different techniques available for requirements prioritisation, some more elaborate than others. In order to compare different techniques, a controlled experiment was conducted with the objective of understanding differences regarding time consumption, ease of use, and accuracy. The requirements prioritisation techniques compared in the experiment are the analytical hierarchy process (AHP) and a variation of the planning game (PG), isolated from extreme programming. The subjects were 15 Ph.D. students and one professor, who prioritised mobile phone features using both methods. It was found that the straightforward and intuitive PG was less time consuming, and considered by the subjects as easier to use, and more accurate than AHP.","2004-01-01","2023-05-03 16:22:20","2023-05-03 16:22:20","2023-05-03 16:22:20","145-154","","","","","","Requirements prioritisation","","","","","","","en","","","","","digital-library.theiet.org","","Publisher: IET Digital Library","","C:\Users\gabra\Zotero\storage\E3UMMS6A\ic_20040407.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SCVHZLB7","journalArticle","2007","Karlsson, Lena; Thelin, Thomas; Regnell, Björn; Berander, Patrik; Wohlin, Claes","Pair-wise comparisons versus planning game partitioning—experiments on requirements prioritisation techniques","Empirical Software Engineering","","1573-7616","10.1007/s10664-006-7240-4","https://doi.org/10.1007/s10664-006-7240-4","The process of selecting the right set of requirements for a product release is dependent on how well the organisation succeeds in prioritising the requirements candidates. This paper describes two consecutive controlled experiments comparing different requirements prioritisation techniques with the objective of understanding differences in time-consumption, ease of use and accuracy. The first experiment evaluates Pair-wise comparisons and a variation of the Planning game. As the Planning game turned out as superior, the second experiment was designed to compare the Planning game to Tool-supported pair-wise comparisons. The results indicate that the manual pair-wise comparisons is the most time-consuming of the techniques, and also the least easy to use. Tool-supported pair-wise comparisons is the fastest technique and it is as easy to use as the Planning game. The techniques do not differ significantly regarding accuracy.","2007-02-01","2023-05-03 16:22:36","2023-05-03 16:22:36","2023-05-03 16:22:36","3-33","","1","12","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\C6KF7ZR8\Karlsson et al. - 2007 - Pair-wise comparisons versus planning game partiti.pdf","","","Requirements engineering; Decision making; Controlled experiment; Release planning; Requirements prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"H75CANRW","journalArticle","2019","Hujainah, Fadhl; Bakar, Rohani Binti Abu; Abdulgabber, Mansoor Abdullateef","StakeQP: A semi-automated stakeholder quantification and prioritisation technique for requirement selection in software system projects","Decision Support Systems","","0167-9236","10.1016/j.dss.2019.04.009","https://www.sciencedirect.com/science/article/pii/S0167923619300764","Stakeholder quantification and prioritisation (SQP) is performed on the basis of the stakeholder's influence. The involvement of adequate stakeholders plays a crucial role in identifying and selecting the most essential requirements to produce a successful system. However, the current SQP techniques still face serious limitations, such as having insufficient low-level implementation details, being time-consuming, lacking an automation level, heavily relying on professional expertise and having no attribute measurement criteria (AMC) for stakeholder evaluation. These key issues serve as the motivation of the present study. Hence, this study is aimed at proposing a new semi-automated technique called StakeQP to address the reported key limitations. StakeQP introduces new low-level implementation details to perform SQP automatically on the basis of the newly proposed AMC using the multi-attribute decision-making method, namely, the technique of order preference similarity to the ideal solution (TOPSIS), to achieve an efficient StakeQP. The effectiveness of StakeQP is evaluated using a benchmark dataset of the actual software project. The findings show that StakeQP can produce more accurate results with less time consumption and is more effective in addressing the defined key limitations compared with other alternative techniques.","2019-06-01","2023-05-03 16:22:51","2023-05-03 16:22:51","2023-05-03 16:22:51","94-108","","","121","","Decision Support Systems","StakeQP","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\YFK6ACUW\S0167923619300764.html","","","Multi-attribute decision-making; Software system project; Stakeholder analysis; Stakeholder prioritisation; Stakeholder quantification; TOPSIS","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8ND629CR","journalArticle","2003","Karatzas, Kostas; Dioudi, Eirini; Moussiopoulos, Nicolas","Identification of major components for integrated urban air quality management and information systems via user requirements prioritisation","Environmental Modelling & Software","","1364-8152","10.1016/S1364-8152(02)00053-1","https://www.sciencedirect.com/science/article/pii/S1364815202000531","Integrated environmental management and information systems are software applications with various components. In the current paper the identification of the major components of such systems is being performed with the aid of the prioritisation of user requirements. For this reason, the analytical hierarchy process is applied for an integrated urban air quality management and information system, which is developed as a portal for environmental information. Useful results are drawn regarding the relevant importance of the components of such systems and the sensitivity of the prioritisation during their selection as a function of their relevant cost and value.","2003-03-01","2023-05-03 16:22:56","2023-05-03 16:22:56","2023-05-03 16:22:56","173-178","","2","18","","Environmental Modelling & Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\5E8S6AWE\S1364815202000531.html","","","Analytical hierarchy process; Integrated information systems; Urban air quality management; User requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K5J83DGL","journalArticle","2013","Ejnioui, Abdel; Otero, Carlos E.; Otero, Luis D.","Prioritisation of software requirements using grey relational analysis","International Journal of Computer Applications in Technology","","0952-8091","10.1504/IJCAT.2013.054344","https://www.inderscienceonline.com/doi/abs/10.1504/IJCAT.2013.054344","While many efforts have been undertaken to prioritise requirements in software projects, almost none has shown practical methods to do so. Most methods that produce consistent results tend to be complex and consequently difficult to implement. On the other hand, informal methods can save time and are easy to implement, but lack the structure and consistency needed to reliably analyse requirements. This paper introduces a new approach for prioritising software requirements. Because of the imprecise nature of requirement and attribute data, this approach represents the problem as a grey multi–attribute decision problem by relying on grey relational analysis to address this decision problem. In addition, the approach allows decision makers to use an objective or subjective weighting scheme to model the importance of attributes before solving the decision problem. This approach is practical and can be easily implemented as a decision making tool to assist decision makers in prioritising requirements.","2013-01","2023-05-03 16:23:17","2023-05-03 16:23:17","2023-05-03 16:23:17","100-109","","2-3","47","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements engineering; software engineering; software requirements; GRA; grey relational analysis; grey systems theory; MADM; multi–attribute decision making; requirements prioritisation; software quality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QZCEKADP","conferencePaper","2009","Svahnberg, Mikael; Karasira, Aimable","A Study on the Importance of Order in Requirements Prioritisation","2009 Third International Workshop on Software Product Management","","","10.1109/IWSPM.2009.1","","A key principle when performing research studies is that of randomisation, in order to counter any effects that the ordering of tasks, elements, subjects, etc. may have on the dependent variables. When performing requirements prioritisation, it is not always possible (e.g., because of how prioritisation methods are constructed) or even desirable to randomise all requirements before prioritising them. It is thus important to know the effect that the initial order of the requirements will have on their final priorities, and this is studied in this article. The results indicate that the initial order of elements does not significantly influence the resulting priorities of the most and least important requirements, but that it does indeed influence the results when looking at all of the requirements.","2009-09","2023-05-03 16:23:28","2023-05-03 16:23:28","","35-41","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\P6EK7D2N\5457322.html","","","Product development; Control systems; Counting circuits; History; Job production systems; Logistics; Voting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 Third International Workshop on Software Product Management","","","","","","","","","","","","","","",""
"AGZ9IUTF","conferencePaper","2006","Karlsson, Lena; Höst, Martin; Regnell, Björn","Evaluating the practical use of different measurement scales in requirements prioritisation","Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering","978-1-59593-218-1","","10.1145/1159733.1159782","https://doi.org/10.1145/1159733.1159782","The importance of prioritising requirements is widely recognised. A number of different techniques for prioritising requirements have been proposed, some based on an ordinal scale, others on a ratio scale. Some measurement scales provide more information than others, i.e. the ratio scale is richer than the ordinal scale. This paper aims to investigate the differences between the scales used in prioritisation. This is important since techniques using a richer scale tend to be more time-consuming and complex to use. Thus, there is a trade-off between simple techniques only providing ranks and complex techniques providing information about the relative distance between requirements priorities. The paper suggests an approach to measure the skewness of the ratio distribution and a way to use the cost-value approach on ordinal scale data. Four different empirical data sets were used to verify the suggested approaches. The skewness measure seems feasible to determine in which cases the ratio scale is valuable. It indicates that some of our subjects tend to use the extreme values of the scale while others are more modest. The cost-value approach based on ordinal scale data also seems feasible. The requirements selection decisions based on ordinal scale data agree substantially with the decisions based on ratio scale data.","2006-09-21","2023-05-03 16:23:41","2023-05-03 16:23:41","2023-05-03","326–335","","","","","","","ISESE '06","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements prioritisation; costvalue approach; ordinal scale data; ratio scale data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9CZZELHW","journalArticle","2001","Kamara, J. M; Anumba, C. J","ClientPro: a prototype software for client requirements processing in construction","Advances in Engineering Software","","0965-9978","10.1016/S0045-7949(00)00142-5","https://www.sciencedirect.com/science/article/pii/S0045794900001425","This paper describes a prototype software, ClientPro, which was developed in response to the need for computer based tools to support the early stages of the construction process. ClientPro was developed as a Microsoft Access application, and it is designed to facilitate the effective processing of client requirements on construction projects. The methodology, development, operation and evaluation of the prototype are discussed, and it is concluded that, ClientPro is potentially useful in facilitating the systematic definition, analysis, and mapping of client requirements to design specifications. It also provides for the incorporation and prioritisation of the perspectives represented by the client, the determination of the relative importance of his/her requirements, and the early consideration of issues affecting the life cycle of a facility. Thus, it can contribute to the ultimate satisfaction of the requirements of construction clients.","2001-01-08","2023-05-03 16:23:48","2023-05-03 16:23:48","2023-05-03 16:23:48","141-158","","2","32","","Advances in Engineering Software","ClientPro","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\ICVW9QXR\S0045794900001425.html","","","Briefing; Client requirements processing; Construction; Prototype software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"D9NYT2NG","journalArticle","2022","Tøndel, Inger Anne; Cruzes, Daniela Soares; Jaatun, Martin Gilje; Sindre, Guttorm","Influencing the security prioritisation of an agile software development project","Computers & Security","","0167-4048","10.1016/j.cose.2022.102744","https://www.sciencedirect.com/science/article/pii/S0167404822001390","Software security is a complex topic, and for development projects it can be challenging to assess what security is necessary and cost-effective. Agile Software Development (ASD) values self-management. Thus, teams and their Product Owners are expected to also manage software security prioritisation. In this paper we build on the notion that security experts who want to influence the priority given to security in ASD need to do this through interactions and support for teams rather than prescribing certain activities or priorities. But to do this effectively, there is a need to understand what hinders and supports teams in prioritising security. Based on a longitudinal case study, this article offers insight into the strategy used by one security professional in an SME to influence the priority of security in software development projects in the company. The main result is a model of influences on security prioritisation that can assist in understanding what supports or hinders the prioritisation of security in ASD, thus providing recommendations for security professionals. Two alternative strategies are outlined for software security in ASD – prescribed and emerging – where we hypothesise that an emerging approach can be more relevant for SMEs doing ASD, and that this can impact how such companies should consider software security maturity.","2022-07-01","2023-05-03 16:23:54","2023-05-03 16:23:54","2023-05-03 16:23:53","102744","","","118","","Computers & Security","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\C9EQKYQT\S0167404822001390.html","","","Agile software development; Case study; Security priority; Security requirements; Software security","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3WE5RZ6B","conferencePaper","2011","Taylor, Colin A.; Miranskyy, Andriy V.; Madhavji, Nazim H.","Request-implementation ratio as an indicator for requirements prioritisation imbalance","2011 Fifth International Workshop on Software Product Management (IWSPM)","","","10.1109/IWSPM.2011.6046206","","Software development organizations strive to implement features that will bring the highest business value to existing and prospective clients; hence the importance of requirements elicited directly from clients. However, some requirements need to be put into the backlog due to time and resource constraints in the development organization. Consequently, there have been numerous prioritisation approaches published in the literature and used in practice.","2011-08","2023-05-03 16:24:31","2023-05-03 16:24:31","","3-6","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\7YMVETQN\6046206.html","","","Databases; Planning; Software systems; Organizations; Requirements prioritisation; Correlation; Product management; request-implementation ratio (RI)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2011 Fifth International Workshop on Software Product Management (IWSPM)","","","","","","","","","","","","","","",""
"4J3NWCG3","journalArticle","2007","Karlsson, Lena; Dahlstedt, Åsa G.; Regnell, Björn; Natt och Dag, Johan; Persson, Anne","Requirements engineering challenges in market-driven software development – An interview study with practitioners","Information and Software Technology","","0950-5849","10.1016/j.infsof.2007.02.008","https://www.sciencedirect.com/science/article/pii/S0950584907000183","Requirements engineering for market-driven software development entails special challenges. This paper presents results from an empirical study that investigates these challenges, taking a qualitative approach using interviews with fourteen employees at eight software companies and a focus group meeting with practitioners. The objective of the study is to increase the understanding of the area of market-driven requirements engineering and provide suggestions for future research by describing encountered challenges. A number of challenging issues were found, including bridging communication gaps between marketing and development, selecting the right level of process support, basing the release plan on uncertain estimates, and managing the constant flow of requirements.","2007-06-01","2023-05-03 16:24:35","2023-05-03 16:24:35","2023-05-03 16:24:35","588-604","","6","49","","Information and Software Technology","","Qualitative Software Engineering Research","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\Q7BZE63L\S0950584907000183.html","","","Requirements engineering; Market-driven software development; Qualitative research; Semi-structured interview","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GDAE9XVR","bookSection","2022","Hoy, Zoe","Sixteen Limitations for Five Popular Requirements Prioritisation Approaches","Emerging Technologies for Innovation Management in the Software Industry","978-1-79989-059-1","","","https://www.igi-global.com/chapter/sixteen-limitations-for-five-popular-requirements-prioritisation-approaches/www.igi-global.com/chapter/sixteen-limitations-for-five-popular-requirements-prioritisation-approaches/304547","Software is an essential commodity that ensures mobile phones to the controls of an aeroplane work. There will always be more requirements for software than there is time and budget to achieve them, hence the need for various prioritisation approaches to decide which requirements to include in the s...","2022","2023-05-03 16:25:05","2023-05-03 16:25:05","2023-05-03 16:25:05","202-222","","","","","","","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-7998-9059-1.ch013","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"886HV23E","bookSection","2005","Greer, D.","Requirements Prioritisation for Incremental and Iterative Development","Requirements Engineering for Sociotechnical Systems","978-1-59140-506-1","","","https://www.igi-global.com/chapter/requirements-engineering-sociotechnical-systems/www.igi-global.com/chapter/requirements-engineering-sociotechnical-systems/28405","The problems associated with requirements prioritisation for an incremental and iterative software process are described. Existing approaches to prioritisation are then reviewed, including the Analytic Hierarchy Process, which involves making comparisons between requirements and SERUM, a method that...","2005","2023-05-03 16:25:08","2023-05-03 16:25:08","2023-05-03 16:25:08","100-118","","","","","","","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-59140-506-1.ch007","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4WQTBZ6N","journalArticle","2002","Moisiadis, Frank","THE FUNDAMENTALS OF PRIORITISING REQUIREMENTS","Systems Engineering","","","","","In systems development projects the activity of prioritising requirements is carried out during the requirements engineering phase. The current trend is to develop systems that are quick-tomarket, bound by strict budget constraints, and released in progressive versions. The inherent risks with this trend include not adequately fulfilling the core requirements or simply missing important ones altogether.","2002","2023-05-03 16:25:19","2023-05-03 16:25:19","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\F8AIKPTM\Moisiadis - 2002 - THE FUNDAMENTALS OF PRIORITISING REQUIREMENTS.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DZRWPDU8","conferencePaper","1996","Finkelstein, A.; Spanoudakis, G.; Ryan, M.","Software package requirements and procurement","Proceedings of the 8th International Workshop on Software Specification and Design","","","10.1109/IWSSD.1996.501156","","The paper outlines the problems of specifying requirements and deploying these requirements in the procurement of software packages. Despite the fact that software construction de novo is the exception rather than the rule, little or no support for the task of formulating requirements to support assessment and selection among existing software packages has been developed. We analyse the problems arising in this process and review related work. We outline the key components of a programme of research in this area.","1996-03","2023-05-03 16:25:24","2023-05-03 16:25:24","","141-145","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\C28UIE4T\Finkelstein et al. - 1996 - Software package requirements and procurement.pdf; C:\Users\gabra\Zotero\storage\3PYWYR4Y\501156.html","","","Software packages; Procurement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the 8th International Workshop on Software Specification and Design","","","","","","","","","","","","","","",""
"7C8EJGMD","journalArticle","2018","Saher, Najia; Baharom, Fauziah; Romli, Rohaida","A Review of Requirement Prioritization Techniques in Agile Software Development","","","","","","Prioritization is a crucial process in Requirement Change Management (RCM), as erroneous requirements prioritisation may increase the cost of development and lead to project failures. In Agile Software Development (ASD), requirement prioritization (RP) is difficult to maintain and requires more formal process. Changes in the priority list leads towards rework. Moreover, requirement prioritization in Agile is a difficult task due to its volatile nature. Ignorance of critical requirements during prioritization will result in numerous problems like poor quality of product and unsatisfied client. This paper presents a comprehensive review of RP by reviewing the strengths and weaknesses of existing RP techniques. This paper also provides information related to the current state-of-the-art on techniques and practices of RP and the research gaps in related works. These findings will contribute as inputs to construct a framework for selecting suitable RP techniques in ASD which can help software practitioners in choosing suitable prioritization techniques for handling continuous requirement change in ASD.","2018","2023-05-03 16:25:31","2023-05-03 16:25:31","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\D9MQMKJR\Saher et al. - 2018 - A Review of Requirement Prioritization Techniques .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2H78LH2L","journalArticle","","Kifetew, Fitsum Meshesha; Susi, Angelo; Munante, Denisse; Perini, Anna; Siena, Alberto; Busetta, Paolo","Towards Multi-decision-maker Requirements Prioritisation via Multi-Objective Optimisation","","","","","","Requirements prioritisation is a key decision making activity of the software development process, which relies on the capability of diﬀerent decision-makers to identify the optimal candidate rankings of the requirements, in order to be able to perform a strategic choice among them. In this paper, we formulate such multi-decision-maker requirements prioritisation as a multi-objective optimisation problem, and outline a solution that takes advantage of metaheuristic algorithms. The proposed solution allows diﬀerent decision-makers to specify their rankings according to a set of prioritisation criteria, it then synthesises them into a set of Pareto optimal global rankings. The ultimate choice of the prioritisation of the requirements would be made upon a focused analysis of the trade-oﬀs amongst the solutions on the Pareto frontier.","","2023-05-03 16:25:36","2023-05-03 16:25:36","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PY39QGEC\Kifetew et al. - Towards Multi-decision-maker Requirements Prioriti.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RSZG3MEV","conferencePaper","2011","Lim, Soo Ling; Damian, Daniela; Finkelstein, Anthony","StakeSource2.0: using social networks of stakeholders to identify and prioritise requirements","Proceedings of the 33rd International Conference on Software Engineering","978-1-4503-0445-0","","10.1145/1985793.1985983","https://doi.org/10.1145/1985793.1985983","Software projects typically rely on system analysts to conduct requirements elicitation, an approach potentially costly for large projects with many stakeholders and requirements. This paper describes StakeSource2.0, a web-based tool that uses social networks and collaborative filtering, a ""crowdsourcing"" approach, to identify and prioritise stakeholders and their requirements.","2011-05-21","2023-05-03 16:25:52","2023-05-03 16:25:52","2023-05-03","1022–1024","","","","","","StakeSource2.0","ICSE '11","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements elicitation; collaborative filtering; social networks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GPDCXU6A","journalArticle","2017","Anand, R. Vijay; Dinakaran, M.","Multi-voting and binary search tree-based requirements prioritisation for e-service software project development","Electronic Government, an International Journal","","1740-7494","10.1504/EG.2017.086041","https://www.inderscienceonline.com/doi/abs/10.1504/EG.2017.086041","In an ever changing modern business environment, the movement and trends are so unpredictable and almost imposes challenges that are not viable for the professionals to resolve and fulfil the requirements at once. Prioritisation is one of the foremost concerns for any business professionals and individuals as it helps them to achieve better results in production management, and quality and assurance sites. In the past, various methods were proposed such as MoSCoW, business value based, technology risk based, Kano model, agile methods, walking skeleton and validated learning which suffered in addressing the problem of stakeholder conflict (SC). In this paper, we have proposed a framework model for e-service development using multi-voting and binary search tree to prioritise requirements with systematic probability sample selection of stakeholders. Relative weighting method was adopted to perform prioritisation in iteration process which helps the stakeholders to maximise their returns of investment (ROI).","2017-01","2023-05-03 16:25:56","2023-05-03 16:25:56","2023-05-03 16:25:56","111-128","","2","13","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements prioritisation; binary search tree; e-governance; iteration with relative weighting; multi-voting; response rate estimation; systematic probability sampling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7ISVKZW5","book","2017","Munante, Denisse; Kifetew, Fitsum Meshesha; Albrecht, Oliver","Modelling Prioritisation Decision-making in Software Evolution","","","","","","Decisions concerning prioritisation occur in different moments during software development and can involve different stakehold-ers. Our research objective is to develop prioritisation processes that meet stakeholders' needs, and allow obtaining better quality decisions. In this paper we propose a structured approach to model decision-making in real setting with the purpose of eliciting from the stakeholders involved in the decision-making process their needs for improvements. We use the resulting models to derive a general model for prioritisation processes and outline how such processes could be tool-supported.","2017-02-27","2023-05-03 16:26:01","2023-05-03 16:26:01","","","","","","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\V528CI3A\Munante et al. - 2017 - Modelling Prioritisation Decision-making in Softwa.pdf; ","https://www.researchgate.net/profile/Fitsum-Meshesha-Kifetew/publication/317358546_Modelling_Prioritisation_Decision-making_in_Software_Evolution/links/593679b5aca272fc556f1045/Modelling-Prioritisation-Decision-making-in-Software-Evolution.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7I6T7ZW2","journalArticle","2014","Gambo, Ishaya P.; Soriyan, Abimbola H.; Ikono, Rhoda N.","A Proposed Process Model for Requirements Engineering using Delphi Techniques for Prioritisation","International Journal of Information Technology and Computer Science","","20749007, 20749015","10.5815/ijitcs.2015.01.09","http://www.mecs-press.org/ijitcs/ijitcs-v7-n1/v7n1-9.html","Requirements engineering (RE) addresses the first software development step and lays the foundation for a successful system. Consequently, ability to identify problems and suggestions for improvements in the RE process opens up significant potential for increasing the success of software projects. Since RE process is naturally collaborative in nature, the intensiveness from both knowledge and human perspectives opens up the problem of decision making on requirements that can be facilitated by requirements prioritisation. In this regard, the paper opined the need for requirements prioritization techniques that will help the developers to obtain consensus among stakeholders using a suitable technique. In particular, the paper proposed a RE process model using Delphi technique. The Delphi technique was suggested in this paper to facilitate and enhance the process of requirements prioritisation in a multilevel prioritisation dimension. Therefore, the proposed model on implementation will contribute to the formulation of an interactive framework for requirements prioritisation to produce a requirement ordering which complies with the existing priorities.","2014-12-08","2023-05-03 16:26:12","2023-05-03 16:26:13","2023-05-03 16:26:12","73-80","","1","7","","IJITCS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\A4VZYLWT\Gambo et al. - 2014 - A Proposed Process Model for Requirements Engineer.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"A8Y6T8A6","journalArticle","2002","Carlshamre, Pär","Release Planning in Market-Driven Software Product Development: Provoking an Understanding","Requirements Engineering","","1432-010X","10.1007/s007660200010","https://doi.org/10.1007/s007660200010","","2002-09-01","2023-05-03 16:26:14","2023-05-03 16:26:14","2023-05-03 16:26:13","139-151","","3","7","","Requirements Eng","Release Planning in Market-Driven Software Product Development","","","","","","","en","","","","","Springer Link","","","","","","","Key words:Pragmatic algorithm – Provotype – Release planning – Requirements coupling – Requirements interdependencies – Wicked problem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GMDJF36G","conferencePaper","2018","Gralha, Catarina; Damian, Daniela; Wasserman, Anthony I. (Tony); Goulão, Miguel; Araújo, João","The evolution of requirements practices in software startups","Proceedings of the 40th International Conference on Software Engineering","978-1-4503-5638-1","","10.1145/3180155.3180158","https://doi.org/10.1145/3180155.3180158","We use Grounded Theory to study the evolution of requirements practices of 16 software startups as they grow and introduce new products and services. These startups operate in a dynamic environment, with significant time and market pressure, and rarely have time for systematic requirements analysis. Our theory describes the evolution of practice along six dimensions that emerged as relevant to their requirements activities: requirements artefacts, knowledge management, requirements-related roles, planning, technical debt and product quality. Beyond the relationships among the dimensions, our theory also explains the turning points that drove the evolution along these dimensions. These changes are reactive, rather than planned, suggesting an overall pragmatic lightness, i.e., flexibility, in the startups' evolution towards engineering practices for requirements. Our theory organises knowledge about evolving requirements practice in maturing startups, and provides practical insights for startups' assessing their own evolution as they face challenges to their growth. Our research also suggests that a startup's evolution along the six dimensions is not fundamental to its success, but has significant effects on their product, their employees and the company.","2018-05-27","2023-05-03 16:26:17","2023-05-03 16:26:17","2023-05-03","823–833","","","","","","","ICSE '18","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements engineering; grounded theory; evolution; startups","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J5R6U44R","journalArticle","2018","Hujainah, Fadhl; Abu Bakar, Rohani Binti; Al-haimi, Basheer; Abdulgabber, Mansoor Abdullateef","Stakeholder quantification and prioritisation research: A systematic literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2018.05.008","https://www.sciencedirect.com/science/article/pii/S0950584917302422","Context Stakeholder quantification and prioritisation (SQP) is executed to quantify and prioritise stakeholders of the system based on their impacts. Selecting and involving the appropriate stakeholders are considered one of the major factors for producing a successful system. Objective The objectives of this paper is to provide precise investigation regarding the SQP domain with respect to its impact on prioritising requirements, identifying SQP attributes, critically investigating the existing techniques, and presenting the challenges and recommended future works. Method The systematic literature review (SLR) guidelines proposed by Kitchenham are adopted to guide the review process. The identified related studies underwent a rigorous study selection process. Thus, 31 out of 210 identified studies were selected as primary studies to address adequately the formulated research questions. Results Findings demonstrate that SQP is a crucial process in requirement prioritisation (RP) because of its ability to identify stakeholders’ impact on the systems requirements that lead to the production of a correctly prioritised list of requirements. Seventeen SQP attributes are revealed along with their description, usage impact, and degree of importance. Furthermore, nine techniques that focus on quantification and prioritisation of the stakeholders are identified and critically analysed in terms of their description, SQP process involved, SQP attributes used, types, and limitations. The findings reveal that these techniques face some challenges with respect to the lack of low-level implementation details, lack of automation and intelligence level, and heavy reliance on the involvement of experts. Conclusion SQP has been extensively discussed in stakeholder analysis and requirement prioritisation domains. Based on the findings, a new intelligent solution is suggested to minimise the need for expert participation in conducting the SQP process along with proposing measurement criteria for the attributes used to evaluate the stakeholders. The deficiency of research works regarding the selection of SQP techniques is also observed.","2018-10-01","2023-05-03 16:26:24","2023-05-03 16:26:24","2023-05-03 16:26:24","85-99","","","102","","Information and Software Technology","Stakeholder quantification and prioritisation research","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\HRX7HFAF\S0950584917302422.html","","","Systematic review; Stakeholders prioritisation; Stakeholders quantification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V8VTGTBM","journalArticle","2020","Ali, Sadia; Hafeez, Yaser; Asghar, Sohail; Nawaz, Asif; Saeed, Saqib","Aspect-based requirements mining technique to improve prioritisation process: multi-stakeholder perspective","IET Software","","1751-8814","10.1049/iet-sen.2019.0332","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0332","Requirement prioritisation and selection is an essential activity in modern-day large software development. Optimal prioritisation process is critical for successful implementation and release planning in a software development project. Requirement prioritisation becomes more challenging in projects having large sets of requirements and stakeholders, having diverse perspectives resulting in irrelevancy and ambiguity during features extraction. This study aims to improve requirement prioritisation process using text mining and clustering techniques for accurate extraction of features and requirement prioritisation in multi-stakeholder context. The proposed framework developed to avoid incompleteness in requirements and disagreement among development teams and stakeholders. Thus, the proposed framework compared with other requirement prioritisation techniques (i.e. Analytical Heretical Process, Commutative Voting and Wiegers) to highlight the significance of the proposed framework while conducting an experimental study. The results show that the proposed framework outperformed the traditional techniques and enhanced the prioritisation process with complete semantic information of extracted features and taking into account the diverse perspective of stakeholders.","2020","2023-05-03 16:26:32","2023-05-03 16:26:32","2023-05-03 16:26:32","482-492","","5","14","","","Aspect-based requirements mining technique to improve prioritisation process","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0332","","C:\Users\gabra\Zotero\storage\UACIIS42\Ali et al. - 2020 - Aspect-based requirements mining technique to impr.pdf","","","decision making; systems analysis; formal specification; software development management; analytical heretical process; clustering techniques; data mining; development teams; feature extraction; multistakeholder context; multistakeholder perspective; optimal prioritisation process; release planning; requirement prioritisation process; requirement prioritisation techniques; software development project; text mining","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P6A3Q5BV","bookSection","2022","Hoy, Zoe","Use of Framework Synthesis to Identify the Factors Considered for Five Popular Prioritisation Approaches","Emerging Technologies for Innovation Management in the Software Industry","978-1-79989-059-1","","","https://www.igi-global.com/chapter/use-of-framework-synthesis-to-identify-the-factors-considered-for-five-popular-prioritisation-approaches/www.igi-global.com/chapter/use-of-framework-synthesis-to-identify-the-factors-considered-for-five-popular-prioritisation-approaches/304543","Software requirement prioritisation is an important task that ultimately determines whether the software is successful and achieves customer satisfaction. Startups use agile methodologies to develop software, as it adapts to requirement changes well and delivers software quickly in short increments,...","2022","2023-05-03 16:26:38","2023-05-03 16:26:38","2023-05-03 16:26:38","157-167","","","","","","","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-7998-9059-1.ch009","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"98EQQGAG","journalArticle","2002","Helmer, Guy; Wong, Johnny; Slagell, Mark; Honavar, Vasant; Miller, Les; Lutz, Robyn","A Software Fault Tree Approach to Requirements Analysis of an Intrusion Detection System","Requirements Engineering","","1432-010X","10.1007/s007660200016","https://doi.org/10.1007/s007660200016","","2002-12-01","2023-05-03 16:29:31","2023-05-03 16:29:31","2023-05-03 16:29:31","207-220","","4","7","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Key words:Coloured Petri nets – Intrusion detection system – Mobile agents – Requirements analysis – Software fault tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"G4J3CI9H","conferencePaper","2014","Snijders, Remco; Dalpiaz, Fabiano; Hosseini, Mahmood; Shahri, Alimohammad; Ali, Raian","Crowd-centric Requirements Engineering","2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing","","","10.1109/UCC.2014.96","","Requirements engineering is a preliminary and crucial phase for the correctness and quality of software systems. Despite the agreement on the positive correlation between user involvement in requirements engineering and software success, current development methods employ a too narrow concept of that user and rely on a recruited set of users considered to be representative. Such approaches might not cater for the diversity and dynamism of the actual users and the context of software usage. This is especially true in new paradigms such as cloud and mobile computing. To overcome these limitations, we propose crowd-centric requirements engineering (CCRE) as a revised method for requirements engineering where users become primary contributors, resulting in higher-quality requirements and increased user satisfaction. CCRE relies on crowd sourcing to support a broader user involvement, and on gamification to motivate that voluntary involvement.","2014-12","2023-05-03 16:29:37","2023-05-03 16:29:37","","614-615","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\UBWA5Z27\Snijders et al. - 2014 - Crowd-centric Requirements Engineering.pdf","","","requirements engineering; Companies; Educational institutions; Software systems; Context; user involvement; Cloud computing; crowdsourcing; Crowdsourcing; gamification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing","","","","","","","","","","","","","","",""
"5YL6GM2Y","journalArticle","2010","Dzamashvili Fogelström, Nina; Gorschek, Tony; Svahnberg, Mikael; Olsson, Peo","The impact of agile principles on market-driven software product development","Journal of Software Maintenance and Evolution: Research and Practice","","1532-0618","10.1002/spip.420","https://onlinelibrary.wiley.com/doi/abs/10.1002/spip.420","Agile development methods such as extreme programming (XP), SCRUM, Lean Software Development (Lean SD) and others have gained much popularity during the last years. Agile methodologies promise faster time-to-market, satisfied customers and high quality software. While these prospects are appealing, the suitability of agile practices to different domains and business contexts still remains unclear. In this article we investigate the applicability of agile principles in the context of market-driven software product development (MDPD), focusing on pre-project activities. This article presents results of a comparison between typical properties of agile methods to the needs of MDPD, as well as findings of a case study conducted at Ericsson, an early adopter of agile product development. The results show misalignment between the agile principles and needs of pre-project activities in market-driven development. This misalignment threatens to subtract from the positive aspects of agile development, but maybe more importantly, threaten the overall product development by disabling effective product management. Copyright © 2009 John Wiley & Sons, Ltd.","2010","2023-05-03 16:29:44","2023-05-03 16:29:44","2023-05-03 16:29:44","53-80","","1","22","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spip.420","","C:\Users\gabra\Zotero\storage\BNJGFK9B\spip.html","","","case study; agile methods; market-driven software development; software product management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U7FWL4GH","conferencePaper","2010","Pandey, Dhirendra; Suman, U.; Ramani, A.K.","An Effective Requirement Engineering Process Model for Software Development and Requirements Management","2010 International Conference on Advances in Recent Technologies in Communication and Computing","","","10.1109/ARTCom.2010.24","","Requirement engineering is the most effective phase of software development process. It aims to collect good requirements from stakeholders in the right way. It is important for every organization to develop quality software products that can satisfy user's needs. Requirements engineering for software development process is a complex exercise that considers product demands from a vast number of viewpoints, roles, responsibilities, and objectives. Therefore, it becomes necessary to apply requirement engineering practices in every phase of software development process. In this paper, we propose an effective requirements engineering process model to produce quality requirements for software development. Requirement management and planning phase is executed independently for an effective management of requirements. It is iterative in nature for better requirement engineering and later maintenance. The successful implementation of proposed requirement engineering process can have a good impact on the production of quality software product.","2010-10","2023-05-03 16:29:56","2023-05-03 16:29:56","","287-291","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\29IIABA8\5656776.html","","","Programming; Documentation; Software engineering; Software; Planning; Resource management; Requirement engineering; requirement elicitation; Presses; requirement analysis; requirement development; requirement management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 International Conference on Advances in Recent Technologies in Communication and Computing","","","","","","","","","","","","","","",""
"BMWVVNU2","conferencePaper","2014","Valença, George; Alves, Carina; Heimann, Virgínia; Jansen, Slinger; Brinkkemper, Sjaak","Competition and collaboration in requirements engineering: A case study of an emerging software ecosystem","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","10.1109/RE.2014.6912289","","Increasingly, small to medium software producing organisations are working together in collaboration networks to supply complex compositions of their products and services to customers. In this paper, we present a case study of two software companies that are evolving their partnership towards the creation of a software ecosystem. We investigate the impacts of their tightening partnership on software product management, with a focus on requirements engineering practices. We observe that the requirements definition and negotiation processes are directly affected by their fluid collaborative and competitive relationships. Power disputes, volatile roles and mismatches in release synchronisation are also aspects observed in the studied software ecosystem.We extract several observations from the case study that support small to medium software firms in making decisions within their software ecosystem.","2014-08","2023-05-03 16:30:00","2023-05-03 16:30:00","","384-393","","","","","","Competition and collaboration in requirements engineering","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\LZ8YTW9F\6912289.html","","","Collaboration; Software; Companies; Interviews; Planning; Ecosystems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"VN6V859I","journalArticle","2017","Sharma, Ashish K.; Khandait, Sunanda P.","Development of a fuzzy integrated software tool to prioritise technical requirements for effective design of online shopping websites","International Journal of Computational Systems Engineering","","2046-3391","10.1504/IJCSYSE.2017.083168","https://www.inderscienceonline.com/doi/abs/10.1504/IJCSYSE.2017.083168","Recently, there has been a tremendous growth in the online shopping; nevertheless the users' satisfaction rate has dropped largely due to poor design of websites. Thus, there is a pressing need of well-designed websites. Decision making plays a significant role in effective design of websites. Quality function deployment (QFD) being a decision making tool, can be employed for the design of online shopping websites. However, QFD uses linguistic expressions and follows crisp approach generating uncertainty and vagueness which leads to inconsistency in results. This requires fuzzy integration with QFD to address the issue. In QFD, the customer needs (CNs) and technical requirements (TRs) are prioritised. However, the paper considers TRs prioritisation only and in this regard it aims to develop a fuzzy integrated technical requirements prioritisation software tool for effective design of online shopping websites. The tool is developed using VB.Net and MS-Access and symmetrical triangular fuzzy numbers (STFNs) are proposed to deal with the uncertainty and vagueness.","2017-01","2023-05-03 16:30:47","2023-05-03 16:30:47","2023-05-03 16:30:47","91-110","","1-2","3","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","decision making; customer needs; fuzzy integrated software; fuzzy logic; online shopping websites; prioritisation; QFD; quality function deployment; STFN; symmetrical triangular fuzzy numbers; technical requirements; uncertainty; user satisfaction; vagueness; VBNet; website design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M45Y3FIM","conferencePaper","2009","Yoo, Shin; Harman, Mark; Tonella, Paolo; Susi, Angelo","Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge","Proceedings of the eighteenth international symposium on Software testing and analysis","978-1-60558-338-9","","10.1145/1572272.1572296","https://doi.org/10.1145/1572272.1572296","Pair-wise comparison has been successfully utilised in order to prioritise test cases by exploiting the rich, valuable and unique knowledge of the tester. However, the prohibitively large cost of the pair-wise comparison method prevents it from being applied to large test suites. In this paper, we introduce a cluster-based test case prioritisation technique. By clustering test cases, based on their dynamic runtime behaviour, we can reduce the required number of pair-wise comparisons significantly. The approach is evaluated on seven test suites ranging in size from 154 to 1,061 test cases. We present an empirical study that shows that the resulting prioritisation is more effective than existing coverage-based prioritisation techniques in terms of rate of fault detection. Perhaps surprisingly, the paper also demonstrates that clustering (even without human input) can outperform unclustered coverage-based technologies, and discusses an automated process that can be used to determine whether the application of the proposed approach would yield improvement.","2009-07-19","2023-05-03 16:30:52","2023-05-03 16:30:52","2023-05-03","201–212","","","","","","","ISSTA '09","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","ahp; clustering; test case prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TZS4KSKU","journalArticle","2020","Prakash, B.; Viswanathan, V.","A comparative study of meta-heuristic optimisation techniques for prioritisation of risks in agile software development","International Journal of Computer Applications in Technology","","0952-8091","10.1504/IJCAT.2020.104688","https://www.inderscienceonline.com/doi/abs/10.1504/IJCAT.2020.104688","Risks are in general termed as threats or uncertainties that influence the project performance and its outcomes to the greater extent. To ensure software quality and project success, every organisation should enforce a proper mechanism to efficiently manage the risks irrespective of the development model they follow. Risk prioritisation is a most critical step in risk management process that helps the organisation to resolve the risks in shorter duration of time. In this paper, a comparative study about different meta-heuristic optimisation techniques for prioritising the risks in agile environments is presented. The five most effective meta-heuristic optimisation algorithms such as Genetic Algorithm (GA), Particle Swarm Optimisation (PSO), Ant Colony Optimisation (ACO), Grey Wolf Optimisation (GWO) and Analytical Hierarchy Process (AHP) are considered and the results are evaluated based on four key criterion attributes such as error rate, accuracy, reliability, and running time. The result proves that GWO outperforms other four meta-heuristic optimisation techniques for the prioritisation of risks in agile environment.","2020-01","2023-05-03 16:31:06","2023-05-03 16:31:06","2023-05-03 16:31:06","175-188","","2","62","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","agile software development; project management; meta-heuristic optimisation; risk management; risk prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6E6JLIBH","conferencePaper","1999","Greer, D.; Bustard, D.W.; Sunazuka, T.","Prioritisation of system changes using cost-benefit and risk assessments","Proceedings IEEE International Symposium on Requirements Engineering (Cat. No.PR00188)","","","10.1109/ISRE.1999.777998","","This paper proposes an approach to the prioritisation of system changes that takes account of the relative costs and benefits of those changes and the risks that they reduce or introduce. This is part of the SERUM methodology (Software Engineering Risk: Understanding and Management), which is being developed to help identify effective ways of using risk analysis and control in software production. SERUM introduces risk management at the initial business analysis stage of requirements investigation, and assumes an evolutionary approach to software delivery. Prioritisation is determined from five factors: benefits, costs and risk exposure in the current system, target system, and development process. The relative importance of these factors is adjustable. Results from a case study at NEC illustrate the prioritisation process and a supporting software tool is also described.","1999-06","2023-05-03 16:31:11","2023-05-03 16:31:11","","180-187","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\MDRAUTJX\777998.html","","","Software engineering; Software systems; Application software; Costs; Read only memory; Business; National electric code; Production; Risk analysis; Risk management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE International Symposium on Requirements Engineering (Cat. No.PR00188)","","","","","","","","","","","","","","",""
"UEYZ7XYX","preprint","2013","Ellis-Braithwaite, Richard","Analysing the Assumed Benefits of Software Requirements","","","","10.48550/arXiv.1305.3853","http://arxiv.org/abs/1305.3853","Often during the requirements engineering (RE) process, the value of a requirement is assessed, e.g., in requirement prioritisation, release planning, and trade-off analysis. In order to support these activities, this research evaluates Goal Oriented Requirements Engineering (GORE) methods for the description of a requirement's value. Specifically, we investigate the goal-to-goal contribution relationship for its ability to demonstrate the value of a requirement, and propose that it is enriched with concepts such as correlation, confidence, and utility.","2013-06-13","2023-05-03 16:31:19","2023-05-03 16:31:19","2023-05-03 16:31:18","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1305.3853 [cs]","","C:\Users\gabra\Zotero\storage\7PQ2JGKS\Ellis-Braithwaite - 2013 - Analysing the Assumed Benefits of Software Require.pdf; C:\Users\gabra\Zotero\storage\4Z8TTE35\1305.html","","","Computer Science - Software Engineering; D.2.1","","","","","","","","","","","","","","","","","","","arXiv:1305.3853","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MYYV43U8","journalArticle","2015","Latha, T. Jessie; Suganthi, L.","An empirical study on creating software product value in India – an analytic hierarchy process approach","International Journal of Business Information Systems","","1746-0972","10.1504/IJBIS.2015.066125","https://www.inderscienceonline.com/doi/abs/10.1504/IJBIS.2015.066125","India is growing strongly in the software industry and has a dynamic global market in software development. In today’s competitive market it is necessary for the software companies to maximise the creation of software product value to remain a success in the market. The value of a software product is largely derived through the fulfilment of requirements. Therefore, it is necessary to carefully select the requirements to include in a specific software release. This paper presents an empirical study to understand how the value is created by finding the importance of different decision-making criteria and the perspectives that motivates them. The study is carried out among multinational software companies operating in India. The analytic hierarchy process is used to find the relative importance of the 13 criteria and to prioritise them by considering what creates business value in a software product. The results depict that for any product to be accepted in the market or by the potential customers business perspective is vital.","2015-01","2023-05-03 16:31:40","2023-05-03 16:31:40","2023-05-03 16:31:40","26-43","","1","18","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements engineering; AHP; analytic hierarchy process; business value; criteria prioritisation; India; value-based software engineering; VBSE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TQSHN6EH","conferencePaper","2007","Bang, Tom J.","An Agile Approach to Requirement Specification","Agile Processes in Software Engineering and Extreme Programming","978-3-540-73101-6","","10.1007/978-3-540-73101-6_35","","This experience report is about how one project in Norway made an agile approach to specifying software requirements for a new intranet. Rather than spending months on trying to detail all requirements and aspects of the solution, the team spent a few weeks specifying a prioritized list of high-level requirements. Further details will emerge by face-to-face communication through the iterations of the project quickly turning in to valuable working software for the customer.","2007","2023-05-03 16:31:48","2023-05-03 16:31:48","","193-197","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Content Management System; Project Plan; Requirement Specification; Student Welfare; User Story","Concas, Giulio; Damiani, Ernesto; Scotto, Marco; Succi, Giancarlo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R84889WV","journalArticle","2014","Achimugu, Philip; Selamat, Ali; Ibrahim, Roliana; Mahrin, Mohd Naz’ri","A systematic literature review of software requirements prioritization research","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.02.001","https://www.sciencedirect.com/science/article/pii/S0950584914000354","Context During requirements engineering, prioritization is performed to grade or rank requirements in their order of importance and subsequent implementation releases. It is a major step taken in making crucial decisions so as to increase the economic value of a system. Objective The purpose of this study is to identify and analyze existing prioritization techniques in the context of the formulated research questions. Method Search terms with relevant keywords were used to identify primary studies that relate requirements prioritization classified under journal articles, conference papers, workshops, symposiums, book chapters and IEEE bulletins. Results 73 Primary studies were selected from the search processes. Out of these studies; 13 were journal articles, 35 were conference papers and 8 were workshop papers. Furthermore, contributions from symposiums as well as IEEE bulletins were 2 each while the total number of book chapters amounted to 13. Conclusion Prioritization has been significantly discussed in the requirements engineering domain. However, it was generally discovered that, existing prioritization techniques suffer from a number of limitations which includes: lack of scalability, methods of dealing with rank updates during requirements evolution, coordination among stakeholders and requirements dependency issues. Also, the applicability of existing techniques in complex and real setting has not been reported yet.","2014-06-01","2023-05-03 16:31:50","2023-05-03 16:31:50","2023-05-03 16:31:50","568-585","","6","56","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\IMJDHMQD\S0950584914000354.html","","","Software systems; Requirements; Stakeholders; Requirement engineering; Prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U3UZDGEN","journalArticle","1998","Karlsson, Joachim; Wohlin, Claes; Regnell, Björn","An evaluation of methods for prioritizing software requirements","Information and Software Technology","","0950-5849","10.1016/S0950-5849(97)00053-0","https://www.sciencedirect.com/science/article/pii/S0950584997000530","This article describes an evaluation of six different methods for prioritizing software requirements. Based on the quality requirements for a telephony system, the authors individually used all six methods on separate occasions to prioritize the requirements. The methods were then characterized according to a number of criteria from a user's perspective. We found the analytic hierarchy process to be the most promising method, although it may be problematic to scale-up. In an industrial follow-up study we used the analytic hierarchy process to further investigate its applicability. We found that the process is demanding but worth the effort because of its ability to provide reliable results, promote knowledge transfer and create consensus among project members.","1998-01-01","2023-05-03 16:31:55","2023-05-03 16:31:55","2023-05-03 16:31:55","939-947","","14","39","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\R5M37GJ6\S0950584997000530.html; C:\Users\gabra\Zotero\storage\JGEMVPAP\Karlsson et al. - 1998 - An evaluation of methods for prioritizing software.pdf","","","Experimental evaluation; Requirements, engineering; Requirements, prioritising","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZV3MZHAP","journalArticle","2013","AL-Ta’ani, Rami Hasan; Razali, Rozilawati","Prioritizing Requirements in Agile Development: A Conceptual Framework","Procedia Technology","","2212-0173","10.1016/j.protcy.2013.12.252","https://www.sciencedirect.com/science/article/pii/S2212017313004064","The advance of technology and business needs have triggered user requirements to evolvealmost every day.It is therefore impossible to fulfill the requirements at once. Agile methods have been introduced to mitigate such issues by implementing user requirements incrementally and iteratively. Selecting a group of prominent requirements to be implemented in iterationsis considered as essential in agile development. This can be achieved by performing continuous requirements prioritisation. Practitioners however are confronted with difficulties in making decisions about which requirements should be considered for implementation at the inter-iteration period. This paper proposes a conceptual framework that outlines the contributing factors and how these factors affect the process and the final product of requirements prioritisation process in agile methods. Thefactors were identified by reviewing the related work. The data were analysed by using content analysis. The proposed conceptual framework aims to guide practice and future research on effective requirements prioritisation process thatcan produce high quality requirementswhich meet the needsof the intendedusers.","2013-01-01","2023-05-03 16:32:03","2023-05-03 16:32:03","2023-05-03 16:32:03","733-739","","","11","","Procedia Technology","Prioritizing Requirements in Agile Development","4th International Conference on Electrical Engineering and Informatics, ICEEI 2013","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\5ENBQJL4\AL-Ta’ani and Razali - 2013 - Prioritizing Requirements in Agile Development A .pdf; C:\Users\gabra\Zotero\storage\KPKU792H\S2212017313004064.html","","","Agile Methods; Requirements Prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"38FCPRDQ","journalArticle","2013","Colomo-Palacios, Ricardo; Casado-Lumbreras, Cristina; Soto-Acosta, Pedro; García-Crespo, Ángel","Decisions in software development projects management. An exploratory study","Behaviour & Information Technology","","0144-929X","10.1080/0144929X.2011.630414","https://doi.org/10.1080/0144929X.2011.630414","Given the importance of software in today's world, the development of software systems is a key activity that requires complex management scenarios. This article explores the implications of hard decisions in the context of software development projects (SDPs). More in deep, it focuses on the emotional consequences of making hard decisions in IT organisations. Complex SDPs involve a great variety of actors. This fact entails morale, feelings and emotions, which play an important role for communication, interaction and, ultimately, decision making. The aim of the article is twofold. First (Study 1), to identify which are the most important hard decisions in SDPS. Second (Study 2), to study the influence of emotions on decision-making processes (Study 2). Findings show the complex emotional consequences and difficulties that managers must face in hard decision-making processes.","2013-11-01","2023-05-03 16:32:23","2023-05-03 16:32:23","2023-05-03 16:32:23","1077-1085","","11","32","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/0144929X.2011.630414","","C:\Users\gabra\Zotero\storage\LGVV2DZP\Colomo-Palacios et al. - 2013 - Decisions in software development projects managem.pdf","","","decision making; Delphi method; emotional response; emotions; hard decisions; information systems success; organisational performance; software project management; task analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2GCZ7I9E","journalArticle","2013","Thakurta, Rahul","A value-based approach to prioritise non-functional requirements during software project development","International Journal of Business Information Systems","","1746-0972","10.1504/IJBIS.2013.053213","https://www.inderscienceonline.com/doi/abs/10.1504/IJBIS.2013.053213","Non-functional requirements determine the characteristics of a software product or service as a whole. The research described in this paper presents an empirical framework involving respondents of both the project and the business organisation, in order to select and prioritise a list of non-functional requirements for implementation during software project development. The assessment process takes into consideration the extent of relative value addition while making trade-off in selection of non-functional requirements for inclusion in the project’s requirement set. The final results are expected to be beneficial to both the business and the project organisation by identifying and implementing the desired non-functional requirements that contributes to business value in a cost effective manner.","2013-01","2023-05-03 16:32:28","2023-05-03 16:32:28","2023-05-03 16:32:28","363-382","","4","12","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","business value; NFR; non-functional requirement; software project development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VTW6FWJ2","conferencePaper","2013","Valen¸a, George","Requirements negotiation model: A social oriented approach for software ecosystems evolution","2013 21st IEEE International Requirements Engineering Conference (RE)","","","10.1109/RE.2013.6636763","","Software Ecosystems is becoming a relevant research topic by analysing the software industry as networked organisations based on a common interest in a central software technology. In this context, appropriately handling Requirements Engineering is a success factor for Software Platform Management. Nevertheless, recent research in this subject does not integrate the ecosystem's social dimension to a business view during requirements negotiations. The state-of-the-art is generally concerned with challenges of achieving and agreed requirements understanding. Thereby, this PhD proposes a Requirements Negotiation Model to address the negotiation process through a more holistic perspective. It aims to present an insightful reasoning on how requirements negotiation collaborates to ecosystem's health and success, defining negotiation strategies along Software Ecosystem evolution considering the Software Platform Management.","2013-07","2023-05-03 16:34:39","2023-05-03 16:34:39","","393-396","","","","","","Requirements negotiation model","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\LNH8V77E\6636763.html","","","Software; Companies; Conferences; Decision making; Context; decision making; Ecosystems; Requirements negotiation; social aspects; software ecosystems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 21st IEEE International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"Q4Y9TJS9","bookSection","2016","Fernandes, João M.; Machado, Ricardo J.","Requirements Negotiation and Prioritisation","Requirements in Engineering Projects","978-3-319-18597-2","","","https://doi.org/10.1007/978-3-319-18597-2_6","The quality of a software application is highly dependent on its ability to meet the necessities of customers and users, so it is crucial to capture and specify all requirements that the system must possess. However, many projects have more candidate requirements than those that can be built without exceeding the available time and budget. This chapter presents and discusses the need to allow stakeholders to collectively negotiate the requirements in order to decide which ones shall be incorporated in the system. The chapter also discusses the importance of assigning priorities to requirements, in the context of a system project. The aspects related to requirements prioritisation and some of the most popular prioritisation techniques are also presented.","2016","2023-05-03 16:34:43","2023-05-03 16:34:43","2023-05-03 16:34:39","119-136","","","","","","","Lecture Notes in Management and Industrial Engineering","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","DOI: 10.1007/978-3-319-18597-2_6","","","","","Requirement Engineer; Analytical Hierarchy Process; Negotiation Process; Null Point; Prioritisation Method","Fernandes, João M.; Machado, Ricardo J.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ALQC2QVU","journalArticle","2014","Zhang, He; Li, Juan; Zhu, Liming; Jeffery, Ross; Liu, Yan; Wang, Qing; Li, Mingshu","Investigating dependencies in software requirements for change propagation analysis","Information and Software Technology","","0950-5849","10.1016/j.infsof.2013.07.001","https://www.sciencedirect.com/science/article/pii/S095058491300147X","Context The dependencies between individual requirements have an important influence on software engineering activities e.g., project planning, architecture design, and change impact analysis. Although dozens of requirement dependency types were suggested in the literature from different points of interest, there still lacks an evaluation of the applicability of these dependency types in requirements engineering. Objective Understanding the effect of these requirement dependencies to software engineering activities is useful but not trivial. In this study, we aimed to first investigate whether the existing dependency types are useful in practise, in particular for change propagation analysis, and then suggest improvements for dependency classification and definition. Method We conducted a case study that evaluated the usefulness and applicability of two well-known generic dependency models covering 25 dependency types. The case study was conducted in a real-world industry project with three participants who offered different perspectives. Results Our initial evaluation found that there exist a number of overlapping and/or ambiguous dependency types among the current models; five dependency types are particularly useful in change propagation analysis; and practitioners with different backgrounds possess various viewpoints on change propagation. To improve the state-of-the-art, a new dependency model is proposed to tackle the problems identified from the case study and the related literature. The new model classifies dependencies into intrinsic and additional dependencies on the top level, and suggests nine dependency types with precise definitions as its initial set. Conclusions Our case study provides insights into requirement dependencies and their effects on change propagation analysis for both research and practise. The resulting new dependency model needs further evaluation and improvement.","2014-01-01","2023-05-03 16:34:50","2023-05-03 16:34:50","2023-05-03 16:34:50","40-53","","1","56","","Information and Software Technology","","Special sections on International Conference on Global Software Engineering – August 2011 and Evaluation and Assessment in Software Engineering – April 2012","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\N8TJUUXW\S095058491300147X.html","","","Case study; Change propagation; Impact analysis; Requirement dependency; Requirement relationship; Requirement traceability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WJ7RYFKD","journalArticle","2001","Lang, Michael; Duggan, Jim","A Tool to Support Collaborative Software Requirements Management","Requirements Engineering","","1432-010X","10.1007/s007660170002","https://doi.org/10.1007/s007660170002","","2001-10-01","2023-05-03 16:35:13","2023-05-03 16:35:13","2023-05-03 16:35:13","161-172","","3","6","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Key words:Computer-aided software engineering – Requirements management – Requirements volatility – Software development process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KHDB4BI2","journalArticle","1998","Regnell, Björn; Beremark, Per; Eklundh, Ola","A market-driven requirements engineering process: Results from an industrial process improvement programme","Requirements Engineering","","1432-010X","10.1007/BF02919972","https://doi.org/10.1007/BF02919972","In market-driven software evolution, the objective of a requirements engineering process include the envisioning and fostering of new requirements on existing packaged software products in a way that ensures competitiveness in the marketplace. This paper describes an industrial, market-driven requirements engineering process which incorporates continuous requirements elicitation and prioritisation together with expert cost estimation as a basis for release planning. The company has gained a measurable improvement in delivery precision and product quality of their packaged software. The described process will act as a baseline against which promising new techniques can be evaluated in the continuation of the improvement programme.","1998-06-01","2023-05-03 16:35:24","2023-05-03 16:35:24","2023-05-03 16:35:24","121-129","","2","3","","Requirements Eng","A market-driven requirements engineering process","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Release planning; Requirements prioritisation; COTS; Process improvement; Process scenarios","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7VXJ2JC8","conferencePaper","2005","Martínez Carod, Nadina; Cechich, Alejandra","Classifying software requirement prioritization approaches","","","","","http://sedici.unlp.edu.ar/handle/10915/23059","Defining software requirements is a complex and difficult process, which often leads to costly project failures. Requirements emerge from a collaborative and interactive negotiation process that involves heterogeneous stakeholders (people involved in an elicitation process such as users, analysts, developers, and customers). Practical experience shows that prioritizing requirements is not as straightforward task as the literature suggests. A process for prioritizing requirements must not only be simple and fast, but it must obtain trustworthy results. The objective of this paper is to provide a classification framework to characterize prioritization proposals. We highlight differences among eleven selected approaches by emphasizing their most important features","2005-10","2023-05-03 16:35:27","2023-05-03 16:35:27","2023-05-03 16:35:27","","","","","","","","","","","","","","en","http://creativecommons.org/licenses/by-nc-sa/2.5/ar/","","","","sedici.unlp.edu.ar","","","","C:\Users\gabra\Zotero\storage\BAT3MPIT\Martínez Carod and Cechich - 2005 - Classifying software requirement prioritization ap.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XI Congreso Argentino de Ciencias de la Computación","","","","","","","","","","","","","","",""
"PDKYE52G","journalArticle","2014","Gupta, Varun; Chauhan, Durg Singh; Gupta, Chetna; Dutta, Kamlesh","Current prioritisation and reprioritisation practices: a case study approach","International Journal of Computer Aided Engineering and Technology","","1757-2657","10.1504/IJCAET.2014.060297","https://www.inderscienceonline.com/doi/abs/10.1504/IJCAET.2014.060297","Prioritisation and reprioritisation consider both requirements as well as decision aspects for creating the implementation ordering in the incremental delivery of evolving software. These activities determine the success of a software product and hence the survivability of the developing organisation in the markets. The practices of the organisations involved in mass market developments need to be analysed to provide the basis for the research focused on providing solution strategies with the aim to incorporate the missing activities and overall improvement of the development process. This paper addresses the findings acquired after the conduct of interviews with the representatives of few software developing firms in the field of web, mobile and desktop applications. The findings suggest that the customer and developer centric effortful activities related to prioritisation and reprioritisation are missing from the practices of the organisations. Organisations believe regression testing to be an expensive activity and in the absence of the developer, it will be very difficult to perform impact analysis during regression testing, as the documentations are outdated and complete development knowledge resides in the brain of the developer.","2014-01","2023-05-03 16:35:34","2023-05-03 16:35:34","2023-05-03 16:35:34","159-170","","2","6","","","Current prioritisation and reprioritisation practices","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","prioritisation; decision aspects; market driven developments; regression testing; reprioritisations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BM2IE6VG","webpage","","","Requirements Engineering","Guide books","","","","https://dl.acm.org/doi/abs/10.5555/1869735","Requirements engineering is the process of eliciting individual stakeholder requirements and needs and developing them into detailed, agreed requirements documented and specified in such a way that...","","2023-05-03 16:35:45","2023-05-03 16:35:45","2023-05-03 16:35:45","","","","","","","","","","","","","","EN","","","","","","","Archive Location: world DOI: 10.5555/1869735","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"59VX33BT","journalArticle","2016","Thakurta, Rahul","A specification of principles governing the design of requirement prioritisation approaches","International Journal of Business Information Systems","","1746-0972","10.1504/IJBIS.2016.074262","https://www.inderscienceonline.com/doi/abs/10.1504/IJBIS.2016.074262","The importance of prioritising requirements stems from the fact that not all requirements can usually be met with available time and resource constraints. Although several papers have been published in this domain, they mainly focus on descriptive research endeavours to suggest different requirement prioritisation approaches. Prescriptive research dealing with design science for a systematic and holistic understanding of the prioritisation process is still scarce. The gap motivates our research, which aims at arriving at a set of design principles that explains the form and function of a requirement prioritisation approach. We resort to a non-experimental approach using content analysis to identify and analyse articles on requirement prioritisation in order to arrive at the set of six design principles addressed in the paper. This subsequently is evaluated based on expert feedbacks to validate our design principles. We finally give a brief outlook on implications and issues for further research.","2016-01","2023-05-03 16:35:48","2023-05-03 16:35:48","2023-05-03 16:35:48","206-220","","2","21","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","content analysis; design principles; design science; prioritisation approaches; requirement prioritisation; requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"L2YNYBYJ","conferencePaper","2020","Moyón, Fabiola; Méndez, Daniel; Beckers, Kristian; Klepper, Sebastian","How to Integrate Security Compliance Requirements with Agile Software Engineering at Scale?","Product-Focused Software Process Improvement","978-3-030-64148-1","","10.1007/978-3-030-64148-1_5","","Integrating security into agile software development is an open issue for research and practice. Especially in strongly regulated industries, complexity increases not only when scaling agile practices but also when aiming for compliance with security standards. To achieve security compliance in a large-scale agile context, we developed S2C-SAFe: An extension of the Scaled Agile Framework that is compliant to the security standard IEC 62443-4-1 for secure product development.","2020","2023-05-03 16:36:17","2023-05-03 16:36:17","","69-87","","","","","","","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\SYV2CUA6\Moyón et al. - 2020 - How to Integrate Security Compliance Requirements .pdf","","","Scaled Agile Framework; Secure software engineering; Security standards","Morisio, Maurizio; Torchiano, Marco; Jedlitschka, Andreas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RMI3STSN","journalArticle","2018","Rincon-Garcia, Nicolas; Waterson, Ben J.; Cherrett, Tom J.","Requirements from vehicle routing software: perspectives from literature, developers and the freight industry","Transport Reviews","","0144-1647","10.1080/01441647.2017.1297869","https://doi.org/10.1080/01441647.2017.1297869","Routing and scheduling software is part of the information and technology systems available to support the transport industry, and uses complex algorithms along with geographical representations of the road network to allow better planning of daily collection and delivery schedules. This paper reviews the evolution of routing and scheduling software, the algorithms used along with reported barriers to wider take-up and potential industry-driven improvements that could be made. A survey of transport companies in the U.K. was conducted in order to validate and prioritise the software capabilities that require the most development according to the new challenges that the industry is facing. Responses suggested that companies required improved route optimisation to tackle congestion based on time-dependent data and models, and greater accuracy in the representation of the road network. Not considering congestion leads to the underestimation of travel times and the production of inaccurate schedules. Literature shows that operational research techniques are available to solve problems that represent real-world conditions, but research into the relative merits of using time-dependent models needs to be undertaken. Data might be improved by cooperation between government and private sector.","2018-01-02","2023-05-03 16:36:23","2023-05-03 16:36:23","2023-05-03 16:36:23","117-138","","1","38","","","Requirements from vehicle routing software","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Routledge _eprint: https://doi.org/10.1080/01441647.2017.1297869","","","","","vehicle routing problem; Vehicle routing software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KG84ZTSL","conferencePaper","2012","Phillips, Laura B.; Aurum, Aybüke; Svensson, Richard Berntsson","Managing Software Quality Requirements","2012 38th Euromicro Conference on Software Engineering and Advanced Applications","","","10.1109/SEAA.2012.65","","This research study explores current quality requirements (QR) management practices in Australian organisations focusing on the elicitation, handling processes, challenges faced, quantification methods used and interdependency management. This research was conducted through six mini case studies, examining organizations that varied in size, structure, industry and function. A mixed methodology was utilised through an online survey for gathering quantitative data and semi-structured interviews for gathering explanatory qualitative data. The results found that five out of the six organisations studied did not have a formal and defined process for the handling of QRs. Large organisations treated QRs are part of their overall project specifications, while smaller organisations saw the management of QRs as more ad hoc. When prioritising QRs, Accuracy was considered the most important priority followed by Security and Reliability. The main challenges that organisations face in their management of QRs is defining and quantifying these requirements.","2012-09","2023-05-03 16:36:29","2023-05-03 16:36:29","","349-356","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2376-9505","","","","","Software; Companies; Interviews; Industries; Testing; non-functional requirements; Accuracy; industrial practice; prioritization; Software quality requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 38th Euromicro Conference on Software Engineering and Advanced Applications","","","","","","","","","","","","","","",""
"6PCMENVG","journalArticle","2019","Cha, Jonghyuk; Maytorena-Sanchez, Eunice","Prioritising project management competences across the software project life cycle","International Journal of Managing Projects in Business","","1753-8378","10.1108/IJMPB-11-2017-0145","https://doi.org/10.1108/IJMPB-11-2017-0145","Purpose The purpose of this paper is to investigate the relative importance of project management (PM) competences across the different stages of a software project life cycle to identify competence development gaps and opportunities. Design/methodology/approach A deductive and quantitative approach was adopted to address the research questions with a web-based survey for data collection. Findings After reviewing the context of competences and PM competences, the importance of the PM competences overall and for specific stages in the project life cycle was analysed. The result highlights that functional and meta-competences are perceived to be the most important competence dimensions for software project practitioners. Originality/value This study makes three contributions. First, it consolidates PM competences into a set of 20 within four competence dimensions. Second, it prioritises these competences across the software project life cycle. Third, it identifies the significance of the inter-relationship between PM competences and project life cycle to reveal PM competence development gaps and opportunities.","2019-01-01","2023-05-03 16:36:36","2023-05-03 16:36:36","2023-05-03 16:36:36","961-978","","4","12","","","","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Publishing Limited","","C:\Users\gabra\Zotero\storage\XTSMVRFH\Cha and Maytorena-Sanchez - 2019 - Prioritising project management competences across.pdf; C:\Users\gabra\Zotero\storage\PHZYJSW8\html.html","","","Competence prioritisation; Project management competence; Project management life cycle; Software project","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JD2DKD9C","journalArticle","2023","Madampe, Kashumi; Hoda, Rashina; Grundy, John","A Framework for Emotion-oriented Requirements Change Handling in Agile Software Engineering","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2023.3253145","","Background: Requirements Changes (RCs) – the additions/modifications/deletions of functional/non-functional requirements in software products – are challenging for software practitioners to handle. Handling some changes may significantly impact the emotions of the practitioners. Objective: We wanted to know the key challenges that make RC handling difficult, how these impact the emotions of software practitioners, what influences their RC handling, and how RC handling can be made less emotionally challenging. Method: We followed a mixed-methods approach. We conducted two survey studies, with 40 participants and 201 participants respectively. The presentation of key quantitative data was followed by descriptive statistical analysis, and the qualitative data was analysed using Strauss–Corbinian Grounded Theory, and Socio–Technical Grounded Theory analysis techniques. Findings: We found (1) several key factors that make RC handling an emotional challenge, (2) varying emotions that practitioners feel when it is challenging to handle RCs, (3) how stakeholders, including practitioners themselves, peers, managers and customers, influence the RC handling and how practitioners feel due to the stakeholder influence, and (4) practices that can be used to better handle RCs. Conclusion: Some challenges are technical and some are social which also belong to aspects of agile practice, emotional intelligence, and likely belong to cognitive intelligence. Therefore, to better handle RCs with positive emotions in socio–technical environments, agility, emotional intelligence, and cognitive intelligence need to work in synergy with each other.","2023","2023-05-03 16:36:52","2023-05-03 16:36:52","","1-20","","","","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\8EJNENP9\10061282.html","","","Software engineering; agile; Software; software engineering; Productivity; Stakeholders; emotions; requirements; affects; changes; Codes; emotional intelligence; Emotional responses; human factors; job-related affective well-being scale; mixed-methods; socio-technical grounded theory; software teams; Statistical analysis; well-being; workplace awareness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MQDI64PM","journalArticle","2017","Sebega, Yanda; Mnkandla, Ernest","Exploring Issues in Agile Requirements Engineering in the South African Software Industry","THE ELECTRONIC JOURNAL OF INFORMATION SYSTEMS IN DEVELOPING COUNTRIES","","1681-4835","10.1002/j.1681-4835.2017.tb00597.x","https://onlinelibrary.wiley.com/doi/abs/10.1002/j.1681-4835.2017.tb00597.x","Issues of the agile requirements engineering (ARE) process are abundant and pervasive throughout software projects. The aim of this study was to determine common issues experienced in agile requirements engineering in the South African software industry and identify tools and frameworks to mitigate risks emanating from such problems. This includes finding out how much value software practitioners put in the agile principles of the Agile Manifesto. This study was essentially quantitative. Self-administered questionnaires were used to collect required data which was then subjected to exploratory data analysis, a tool for statistical analysis. The results suggest that software practitioners have a strong penchant for principles of the Agile Manifesto. A detailed baseline of issues in agile requirements engineering was created along with a set of recommended tools and techniques used in the software industry. And developers are divergent on the idea of non-functional requirements integration which is vital for software quality.","2017","2023-05-03 16:37:03","2023-05-03 16:37:03","2023-05-03 16:37:03","1-18","","1","81","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/j.1681-4835.2017.tb00597.x","","C:\Users\gabra\Zotero\storage\BFFVIXTU\Sebega and Mnkandla - 2017 - Exploring Issues in Agile Requirements Engineering.pdf; C:\Users\gabra\Zotero\storage\DY646UPB\j.1681-4835.2017.tb00597.html","","","Agile Requirements Engineering; Agile Tools and Techniques; Customer Collaboration; Issues of Agile Requirements Engineering; Non-Functional Requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z6YWJFVC","journalArticle","","Nuseibeh, Bashar","Department of Computing Imperial College 180 Queen’s Gate London SW7 2BZ, U.K. Email: svs@doc.ic.ac.uk","","","","","","Determining which requirements are selected for implementation of software applications is crucial to the satisfaction of customers. In a commercial setting, the value assigned by markets to a publicly held company is the ultimate measure of the degree to which the company meets its business goals -- satisfies its customers. We argue that portfolio theory provides a market driven, systematic, and more objective approach to selecting requirements and also accounts for uncertainty and incomplete knowledge in the real world. We illustrate through two examples, that the economic dimension is an important factor of software engineering decision-making because it facilitates the calibration of our estimates of limited resources. The underlying point is that the success or otherwise of software systems in commercial settings can be better ascertained by making the connection to market-assigned value explicit. Our particular application of portfolio-based reasoning is a step in contributing towards this objective.","","2023-05-03 16:37:12","2023-05-03 16:37:12","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PGRXB3ZV\Nuseibeh - Department of Computing Imperial College 180 Queen.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EX2ELDPQ","conferencePaper","2002","Hall, J.G.; Jackson, M.; Laney, R.C.; Nuseibeh, B.; Rapanotti, L.","Relating software requirements and architectures using problem frames","Proceedings IEEE Joint International Conference on Requirements Engineering","","","10.1109/ICRE.2002.1048516","","Problem frames provide a means of analyzing and decomposing problems. They emphasise the world outside of the computer, helping the developer to focus on the problem domain, instead of drifting into inventing solutions. However, even modestly complex problems can force us into detailed consideration of the architecture of the solution. This is counter to the intention of the problem frames approach, which is to delay consideration of the solution space until a good understanding of the problem is gained. We therefore extend problem frames, allowing architectural structures, services and artifacts to be considered as part of the problem domain. Through a case study, we show how this extension enhances the applicability of problem frames in permitting an architecture-based approach to software development. We conclude that, through our extension, the applicability of problem frames is extended to include domains with existing architectural support.","2002-09","2023-05-03 16:37:20","2023-05-03 16:37:20","","137-144","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","C:\Users\gabra\Zotero\storage\MU2KSYJZ\Hall et al. - 2002 - Relating software requirements and architectures u.pdf; C:\Users\gabra\Zotero\storage\FINSVZ7U\1048516.html","","","Programming; Computer architecture; Software architecture; Delay; Counting circuits; Shape","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE Joint International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"KSJ8IDQQ","journalArticle","2010","Hannola, Lea; Elfvengren, Kalle; Tuominen, Markku","A group support system process for the definition of software requirements","International Journal of Innovation and Learning","","1471-8197","10.1504/IJIL.2010.030612","https://www.inderscienceonline.com/doi/abs/10.1504/IJIL.2010.030612","The definition of software requirements in the early phases of the software innovation process is considered to be an extremely important and challenging task, as decisions about precisely what will be developed are made during this stage. This paper presents a Group Support System (GSS) process for the definition of software requirements, and studies the usability of a GSS as a tool for requirements definition. The developed process was validated in a telecommunications company, and the study shows that requirements definition was expedited and more effective with the GSS-supported process compared to the traditional methods used in the case company.","2010-01","2023-05-03 16:37:27","2023-05-03 16:37:27","2023-05-03 16:37:27","171-186","","2","7","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","software development; group support systems; GSS; learning; process improvement; requirements definition; software innovation; telecommunications industry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M3LLTPPF","conferencePaper","2011","Conboy, Kieran; Lang, Michael","The Paradox of “Structured” Methods for Software Requirements Management: A Case Study of an e-Government Development Project","Information Systems Development","978-1-4419-7355-9","","10.1007/978-1-4419-7355-9_19","","This chapter outlines the alternative perspectives of “rationalism” and “improvisation” within information systems development and describes the major shortcomings of each. It then discusses how these shortcomings manifested themselves within an e-government case study where a “structured” requirements management method was employed. Although this method was very prescriptive and firmly rooted in the “rational” paradigm, it was observed that users often resorted to improvised behaviour, such as privately making decisions on how certain aspects of the method should or should not be implemented.","2011","2023-05-03 16:37:34","2023-05-03 16:37:34","","223-232","","","","","","The Paradox of “Structured” Methods for Software Requirements Management","","","","","Springer","New York, NY","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\XJW6V5Y9\Conboy and Lang - 2011 - The Paradox of “Structured” Methods for Software R.pdf","","","Requirements prioritisation; e-Government systems development; Method enactment; Requirements manage-ment; Situated action","Song, William Wei; Xu, Shenghua; Wan, Changxuan; Zhong, Yuansheng; Wojtkowski, Wita; Wojtkowski, Gregory; Linger, Henry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"347EXAD7","journalArticle","2014","Ruhaya, A A; Bernard, W","Exploring the Relationships Between Requirements Relationships Knowledge and Requirements Prioritisation Towards Software Development Project Success","Australian Journal of Basic and Applied Sciences","","","","","In software development project, requirements are very important and they need to be managed effectively for the project to be successful. One of the important parts in managing requirements is prioritising the requirements. However, prioritising requirements is difficult as requirements do not stand alone and they are typically related to one another in several ways. These relationships may affect individual requirement as well as the whole process of software development project. Hence, requirements relationships need to be captured, analysed, and managed carefully to avoid any costly mistake. This research aims to investigate how these types of requirements relationships impact requirements prioritisation as well as the success of software development project. We examined the impacts from the perspective of business analyst. Partial least square (PLS) and structural equation modelling (SEM) were used to analyse the data. The findings from this research can be used as a guide on working with requirements relationships knowledge useful for business analysts and research community.","2014","2023-05-03 16:37:52","2023-05-03 16:37:52","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\U7G5QH45\Ruhaya and Bernard - 2014 - Exploring the Relationships Between Requirements R.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S3CTGBG9","journalArticle","2018","Gambo, Ishaya; Ikono, Rhoda; Achimugu, Philip; Soriyan, Abimbola","An Integrated Framework for Prioritizing Software Specifications in Requirements Engineering","International Journal of Software Engineering and Its Applications","","17389984, 17389984","10.14257/ijseia.2018.12.1.03","http://www.sersc.org/journals/IJSEIA/vol12_no1_2018/3.pdf","Requirements prioritization is an established activity facilitating good decision making for the purpose of coping with complexities that often arise when determining the right choice of requirement during requirements engineering process. However, making precise and accurate decision for the purpose of averting subsequent system failure is an issue of concern when developing large scale systems. In this paper, we proposed the use of imprecise knowledge-based solutions over precise-knowledge based solutions for prioritizing software requirements to overcome the problem of decision making. In this regard, our proposed technique is an integration of Fuzzy Multi Criteria Decision Making (FMCDM), similarity measures and target-based approach to requirements prioritization using linguistic values of triangular fuzzy numbers. With the integrated framework, the challenge of making decisions under uncertain conditions are considered. The integrated framework was based on some defined criteria, a three-phased process comprising of five steps and a five-point scale used to determine the relative values of requirements. The result is the specification of a stepwise process of the computations that can be performed during decision making by the integrated technique proposed. It is hoped that when this technique is implemented, executed, evaluated and validated on case study, a promising results will be achieved. For validating the proposed technique, requirements from reallife case studies can be elicited, analysed, and reconciled for completeness and consistency.","2018-02-28","2023-05-03 16:37:58","2023-05-03 16:37:59","2023-05-03 16:37:58","33-46","","1","12","","IJSEIA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\84WQUN5R\Gambo et al. - 2018 - An Integrated Framework for Prioritizing Software .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"26JYDDVR","thesis","2015","Ellis-Braithwaite, Richard","Modelling the instrumental value of software requirements","","","","","https://hdl.handle.net/2134/21803","Numerous studies have concluded that roughly half of all implemented software requirements are never or rarely used in practice, and that failure to realise expected benefits is a major cause of software project failure. This thesis presents an exploration of these concepts, claims, and causes. It evaluates the literature s proposed solutions to them, and then presents a unified framework that covers additional concerns not previously considered. The value of a requirement is assessed often during the requirements engineering (RE) process, e.g., in requirement prioritisation, release planning, and trade-off analysis. In order to support these activities, and hence to support the decisions that lead to the aforementioned waste, this thesis proposes a framework built on the modelling languages of Goal Oriented Requirements Engineering (GORE), and on the principles of Value Based Software Engineering (VBSE). The framework guides the elicitation of a requirement s value using philosophy and business theory, and aims to quantitatively model chains of instrumental value that are expected to be generated for a system s stakeholders by a proposed software capability. The framework enriches the description of the individual links comprising these chains with descriptions of probabilistic degrees of causation, non-linear dose-response and utility functions, and credibility and confidence. A software tool to support the framework s implementation is presented, employing novel features such as automated visualisation, and information retrieval and machine learning (recommendation system) techniques. These software capabilities provide more than just usability improvements to the framework. For example, they enable visual comprehension of the implications of what-if? questions, and enable re-use of previous models in order to suggest modifications to a project s requirements set, and reduce uncertainty in its value propositions. Two case studies in real-world industry contexts are presented, which explore the problem and the viability of the proposed framework for alleviating it. The thesis research questions are answered by various methods, including practitioner surveys, interviews, expert opinion, real-world examples and proofs of concept, as well as less-common methods such as natural language processing analysis of real requirements specifications (e.g., using TF-IDF to measure the proportion of software requirement traceability links that do not describe the requirement s value or problem-to-be-solved). The thesis found that in general, there is a disconnect between the state of best practice as proposed by the literature, and current industry practice in requirements engineering. The surveyed practitioners supported the notion that the aforementioned value realisation problems do exist in current practice, that they would be treatable by better requirements engineering practice, and that this thesis proposed framework would be useful and usable in projects whose complexity warrants the overhead of requirements modelling (e.g., for projects with many stakeholders, competing desires, or having high costs of deploying incorrect increments of software functionality).","2015","2023-05-03 16:38:14","2023-05-03 16:38:14","2023-05-03 16:38:14","","","","","","","","","","","","Loughborough University","","eng","","Ph.D.","","","ethos.bl.uk","","Accepted: 2015","","C:\Users\gabra\Zotero\storage\FCUPK4VI\OrderDetails.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SG67GL5C","conferencePaper","2015","Madhavji, Nazim H.; Miranskyy, Andriy; Kontogiannis, Kostas","Big Picture of Big Data Software Engineering: With Example Research Challenges","2015 IEEE/ACM 1st International Workshop on Big Data Software Engineering","","","10.1109/BIGDSE.2015.10","","In the rapidly growing field of Big Data, we note that a disproportionately larger amount of effort is being invested in infrastructure development and data analytics in comparison to applications software development – approximately a 80:20 ratio. This prompted us to create a context model of Big Data Software Engineering (BDSE) containing various elements – such as development practice, Big Data systems, corporate decision-making, and research – and their relationships. The model puts into perspective where various types of stakeholders fit in. From the research perspective, we describe example challenges in BDSE, specifically requirements, architectures, and testing and maintenance.","2015-05","2023-05-03 16:38:19","2023-05-03 16:38:19","","11-14","","","","","","Big Picture of Big Data Software Engineering","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\WAQPVB83\7165992.html","","","Software engineering; Software; Computer architecture; Software Engineering; Testing; Data models; Big Data; Business; Applications; Big data; Context model; Research challenges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE/ACM 1st International Workshop on Big Data Software Engineering","","","","","","","","","","","","","","",""
"Z3SUNN7C","journalArticle","2022","Tøndel, Inger Anne; Cruzes, Daniela Soares","Continuous software security through security prioritisation meetings","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2022.111477","https://www.sciencedirect.com/science/article/pii/S0164121222001625","Software security needs to be a continuous endeavour in current software development practices. Frequent software updates, paired with an ongoing flow of security breaches, requires software companies to address software security throughout development and post deployment. Prescriptive software security approaches do not match well with agile software development and its emphasis on self-management. Agile approaches are however in favour of meetings as a coordination and problem-solving strategy. This article investigates the role of regular security meetings centred on making security priorities and decisions for achieving continuous software security. Through technical action research and an observational case study, we studied variations of such meetings in three companies. We found that such meetings can reach key stakeholders, make security more visible, and contribute to ongoing security prioritisation. Thus, security meetings are a promising approach, especially for small and medium sized development companies with basic yet immature security competence. Future research should investigate further the role of such meetings and how best to organise them for different contexts and needs. For this we outline implications for research and practice, e.g., related to participants and how to organise the discussions and prioritisations in the meeting.","2022-12-01","2023-05-03 16:38:22","2023-05-03 16:38:22","2023-05-03 16:38:22","111477","","","194","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\RUGFR2X9\S0164121222001625.html","","","Agile software development; Security requirements; Software security; Security meeting; Security prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I7NBHF4Q","journalArticle","","Verma, Abhijeet","Requirements analysis phase reengineering:  Decision making & requirements prioritisation among stakeholders for a new bespoke software project","","","","","","","","2023-05-03 16:38:33","2023-05-03 16:38:33","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\QH99IPFG\Verma - Requirements analysis phase reengineering  Decisi.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YWM2NUF6","journalArticle","2019","Hujainah, Fadhl Mohammed Omar","A SEMI-AUTOMATED REQUIREMENTS PRIORITISATION TECHNIQUE FOR SCALABLE REQUIREMENTS WITH STAKEHOLDER QUANTIFICATION AND PRIORITISATION","","","","","","","2019","2023-05-03 16:41:34","2023-05-03 16:41:34","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\S65648UF\Hujainah - 2019 - A SEMI-AUTOMATED REQUIREMENTS PRIORITISATION TECHN.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K38FJ4VV","preprint","2013","Ellis-Braithwaite, Richard; Lock, Russell; Dawson, Ray; Haque, Badr","Towards an Approach for Analysing the Strategic Alignment of Software Requirements using Quantified Goal Graphs","","","","10.48550/arXiv.1307.2580","http://arxiv.org/abs/1307.2580","Analysing the strategic alignment of software requirements primarily provides assurance to stakeholders that the software-to-be will add value to the organisation. Additionally, such analysis can improve a requirement by disambiguating its purpose and value, thereby supporting validation and value-oriented decisions in requirements engineering processes, such as prioritisation, release planning, and trade-off analysis. We review current approaches that could enable such an analysis. We focus on Goal Oriented Requirements Engineering methodologies, since goal graphs are well suited for relating software goals to business goals. However, we argue that unless the extent of goal-goal contribution is quantified with verifiable metrics, goal graphs are not sufficient for demonstrating the strategic alignment of software requirements. Since the concept of goal contribution is predictive, what results is a forecast of the benefits of implementing software requirements. Thus, we explore how the description of the contribution relationship can be enriched with concepts such as uncertainty and confidence, non-linear causation, and utility. We introduce the approach using an example software project from Rolls-Royce.","2013-12-30","2023-05-03 16:41:36","2023-05-03 16:41:36","2023-05-03 16:41:36","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1307.2580 [cs]","","C:\Users\gabra\Zotero\storage\DKPHYACG\Ellis-Braithwaite et al. - 2013 - Towards an Approach for Analysing the Strategic Al.pdf; C:\Users\gabra\Zotero\storage\N9NAS7NA\1307.html","","","Computer Science - Software Engineering; D.2.1","","","","","","","","","","","","","","","","","","","arXiv:1307.2580","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X8Q2EXUZ","journalArticle","2015","Babar, Muhammad Imran; Ghazali, Masitah; Jawawi, Dayang N. A.; Shamsuddin, Siti Maryam; Ibrahim, Noraini","PHandler: An expert system for a scalable software requirements prioritization process","Knowledge-Based Systems","","0950-7051","10.1016/j.knosys.2015.04.010","https://www.sciencedirect.com/science/article/pii/S0950705115001483","Software requirements engineering is a critical discipline in the software development life cycle. The major problem in software development is the selection and prioritization of the requirements in order to develop a system of high quality. This research analyzes the issues associated with existing software requirement prioritization techniques. One of the major issues in software requirement prioritization is that the existing techniques handle only toy projects or software projects with very few requirements. The current techniques are not suitable for the prioritization of a large number of requirements in projects where requirements may grow to the hundreds or even thousands. The research paper proposes an expert system, called the Priority Handler (PHandler), for requirement prioritization. PHandler is based on the value-based intelligent requirement prioritization technique, neural network and analytical hierarchical process in order to make the requirement prioritization process scalable. The back-propagation neural network is used to predict the value of a requirement in order to reduce the extent of expert biases and make the PHandler efficient. Moreover, the analytical hierarchy process is applied on prioritized groups of requirements in order to enhance the scalability of the requirement prioritization process.","2015-08-01","2023-05-03 16:42:05","2023-05-03 16:42:05","2023-05-03 16:42:04","179-202","","","84","","Knowledge-Based Systems","PHandler","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\TVQSUTVB\S0950705115001483.html","","","Artificial neural networks; Decision support; Expert systems; Hybrid model; Software requirement prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"26B26J8V","journalArticle","2008","Boness, K.; Finkelstein, A.; Harrison, R.","A lightweight technique for assessing risks in requirements analysis","IET Software","","1751-8814","10.1049/iet-sen:20070068","https://digital-library.theiet.org/content/journals/10.1049/iet-sen_20070068","A simple and practical technique for assessing the risks, that is, the potential for error, and consequent loss, in software system development, acquired during a requirements engineering phase is described. The technique uses a goal-based requirements analysis as a framework to identify and rate a set of key issues in order to arrive at estimates of the feasibility and adequacy of the requirements. The technique is illustrated and how it has been applied to a real systems development project is shown. How problems in this project could have been identified earlier is shown, thereby avoiding costly additional work and unhappy users.","2008-02-01","2023-05-03 16:42:08","2023-05-03 16:42:08","2023-05-03 16:42:09","46-57","","1","2","","","","","","","","","","en","","","","","digital-library.theiet.org","","Publisher: IET Digital Library","","C:\Users\gabra\Zotero\storage\B6I48J89\iet-sen_20070068.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T9YXGAVA","journalArticle","2013","Rajarathinam, Kavitha; Natarajan, Sureshkumar","Test suite prioritisation using trace events technique","IET Software","","1751-8814","10.1049/iet-sen.2011.0203","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2011.0203","The size of the test suite and the duration of time determines the time taken by the regression testing. Conversely, the testers can prioritise the test cases by the use of a competent prioritisation technique to obtain an increased rate of fault detection in the system, allowing for earlier corrections, and getting higher overall confidence that the software has been tested suitably. A prioritised test suite is more likely to be more effective during that time period than would have been achieved via a random ordering if execution needs to be suspended after some time. An enhanced test case ordering may be probable if the desired implementation time to run the test cases is proven earlier. This research work's main intention is to prioritise the regression-testing test cases. In order to prioritise the test cases some factors are considered here. These factors are employed in the prioritisation algorithm. The trace events are one of the important factors, used to find the most significant test cases in the projects. The requirement factor value is calculated and subsequently a weightage is calculated and assigned to each test case in the software based on these factors by using a thresholding technique. Later, the test cases are prioritised according to the weightage allocated to them. Executing the test cases based on the prioritisation will greatly decreases the computation cost and time. The proposed technique is efficient in prioritising the regression test cases. The new prioritised subsequences of the given unit test suites are executed on Java programs after the completion of prioritisation. Average of the percentage of faults detected is an evaluation metric used for evaluating the ‘superiority’ of these orderings.","2013","2023-05-03 16:42:17","2023-05-03 16:42:17","2023-05-03 16:42:17","85-92","","2","7","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2011.0203","","C:\Users\gabra\Zotero\storage\FN8NTA8N\Rajarathinam and Natarajan - 2013 - Test suite prioritisation using trace events techn.pdf; C:\Users\gabra\Zotero\storage\KGXMYDXY\iet-sen.2011.html","","","Java; test case prioritisation; regression testing; fault detection; Java programs; ordering superiority evaluation; prioritisation algorithm; prioritised subsequence execution; program testing; random ordering; random processes; regression analysis; software fault tolerance; software testing; test case ordering; test suite prioritisation; thresholding technique; trace event technique","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NJQ5WWGL","conferencePaper","2018","Salih, Ahmad M.; Omar, Mazni; Yasin, Azman","Understanding Uncertainty of Software Requirements Engineering: A Systematic Literature Review Protocol","Requirements Engineering for Internet of Things","978-981-10-7796-8","","10.1007/978-981-10-7796-8_13","","Requirements engineering uncertainty is considered as one of the main problems in software industry. It can complicate early decisions on requirements and architecture and might expose the software project to significant risks. Continuous effort by researchers has resulted in a largely grown body of work on uncertainty in software requirements. In this paper, a systematic literature review protocol is presented to investigate the research literature on approaches deals with uncertainty in software requirements engineering. Requirements management was widely studied on the uncertainty in software requirement engineering. Results showed that review and analyses approach are most widely approaches dealt with requirements uncertainty and some were briefly explained. Further research is required on the identification of prominent causes of software requirements uncertainty and the solution to cope with such causes.","2018","2023-05-03 16:42:19","2023-05-03 16:42:19","","164-171","","","","","","Understanding Uncertainty of Software Requirements Engineering","Communications in Computer and Information Science","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Systematic literature review; Requirements engineering; Requirements uncertainty","Kamalrudin, Massila; Ahmad, Sabrina; Ikram, Naveed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"54633MWT","preprint","2013","Ellis-Braithwaite, Richard; Lock, Russell; Dawson, Ray; Haque, Badr","Modelling the Strategic Alignment of Software Requirements using Goal Graphs","","","","10.48550/arXiv.1211.6258","http://arxiv.org/abs/1211.6258","This paper builds on existing Goal Oriented Requirements Engineering (GORE) research by presenting a methodology with a supporting tool for analysing and demonstrating the alignment between software requirements and business objectives. Current GORE methodologies can be used to relate business goals to software goals through goal abstraction in goal graphs. However, we argue that unless the extent of goal-goal contribution is quantified with verifiable metrics and confidence levels, goal graphs are not sufficient for demonstrating the strategic alignment of software requirements. We introduce our methodology using an example software project from Rolls-Royce. We conclude that our methodology can improve requirements by making the relationships to business problems explicit, thereby disambiguating a requirement's underlying purpose and value.","2013-03-25","2023-05-03 16:42:26","2023-05-03 16:42:26","2023-05-03 16:42:26","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1211.6258 [cs]","","C:\Users\gabra\Zotero\storage\YS2VLWY9\Ellis-Braithwaite et al. - 2013 - Modelling the Strategic Alignment of Software Requ.pdf; C:\Users\gabra\Zotero\storage\QELTMDDL\1211.html","","","Computer Science - Software Engineering; D.2.1","","","","","","","","","","","","","","","","","","","arXiv:1211.6258","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J3AAEMJN","journalArticle","","Beus-Dukic, Ljerka","Non-Functional Requirements for COTS Software Components","","","","","","Commercially available software components come with the built-in functionality often offering end-user more than they need. A fact that end-user has no or very little influence on component’s functionality promoted nonfunctional requirements which are getting more attention than ever before. In this paper, we identify some of the problems encountered when non-functional requirements for COTS software components need to be defined.","","2023-05-03 16:42:28","2023-05-03 16:42:28","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\FN8N4W3S\Beus-Dukic - Non-Functional Requirements for COTS Software Comp.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CMGWSU4R","journalArticle","2015","Kamalrudin, Massila; Sidek, Safiah","A Review on Software Requirements Validation and Consistency Management","International Journal of Software Engineering and Its Applications","","","10.14257/ijseia.2015.9.10.05","","Requirements need to be validated at the early phase of the software development to avoid errors such as inconsistency, incompleteness and incorrectness. Drawn from this argument, a requirements validation process needs to consider Consistency, Completeness and Correctness (""3 Cs"") for the production of a quality software specifications. This paper provides a review of requirements validation and consistency management based on the existing literature in order to identify the gaps in the existing knowledge on the process of software requirements specifications. This paper begins with a review of the definitions of the 3Cs,upon which the understanding of the 3Cs is derived. Next comprehensive review of related works on the identified consistency management techniques: traceability and analysis approaches are then presented. This is supported with a heat map representations of the related research on the types of contributions, techniques, specifications and semantics used in consistency management. Since semi-formal specifications were found as the most common representation of the requirements, the types of models used as semi-formal specifications to represent the requirements were also discussed. Overall, this paper identifies the various gaps existing within the process of validating and managing the consistency of requirements to avoid re-inventing the wheels in the diverse and comprehensive knowledge of requirements engineering.","2015-10-31","2023-05-03 16:42:44","2023-05-03 16:42:44","","39-58","","","9","","International Journal of Software Engineering and Its Applications","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\Q5NVHNC7\Kamalrudin and Sidek - 2015 - A Review on Software Requirements Validation and C.pdf; ","https://www.researchgate.net/profile/Massila-Kamalrudin/publication/283685838_A_Review_on_Software_Requirements_Validation_and_Consistency_Management/links/5749ae0108ae5f7899b9f588/A-Review-on-Software-Requirements-Validation-and-Consistency-Management.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VSPVML76","thesis","2009","Ma, Qiao","The effectiveness of requirements prioritization techniques for a medium to large number of requirements: a systematic literature review","","","","","http://hdl.handle.net/10292/833","In software system development, it can be a challenge for people to select the ‘right’ requirement among several or many options if it is not obvious which requirement is desirable. Requirements prioritization helps people to discover the most desirable requirements. It seems that most requirements prioritization techniques work well on a small number of requirements, but many of them have constraints on medium to large numbers of requirements. This directly leads to a question: are there prioritization techniques that are suitable for people to prioritize medium to large numbers of requirements? In order to find an answer to this question, this research investigates the strength of evidence for the effectiveness of different requirements prioritization techniques for medium to large numbers of requirements. The methodology used for this research is a Systematic Literature Review. A Systematic Literature Review investigates research questions through identifying, evaluating and interpreting all relevant studies. It summarises the existing evidence for a certain technology. The reason a Systematic Literature Review was used to conduct this research is because it matches the purpose of this research, which is to systematically assess current studies in requirements prioritisation techniques as reported in literature, and analyse and draw together the results. After conducting the Systematic Literature Review, prioritization techniques that have been applied to medium to large numbers of requirements are identified and the strength of evidence for effectiveness of each technique is evaluated. It is found that the strength of evidence for effectiveness is weak for most prioritization techniques for large numbers of requirements. More studies on prioritization techniques for large numbers of requirements are needed. Stronger evidence presented for prioritization techniques for medium sized numbers of requirements shows the techniques are more mature. However, all the studies in the medium-size category use a subjective measure of improvement based on the users’ perceptions of level of improvement. It seems that the evaluations are still not strong for these studies.","2009","2023-05-03 16:42:49","2023-05-03 16:42:49","2023-05-03 16:42:49","","","","","","","The effectiveness of requirements prioritization techniques for a medium to large number of requirements","","","","","Auckland University of Technology","","en","","","","","openrepository.aut.ac.nz","","","","C:\Users\gabra\Zotero\storage\J5KYWF8R\Ma - 2009 - The effectiveness of requirements prioritization t.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CCX2FYKZ","journalArticle","2010","Şen, Ceyda Güngör; Baraçlı, Hayri","Fuzzy quality function deployment based methodology for acquiring enterprise software selection requirements","Expert Systems with Applications","","0957-4174","10.1016/j.eswa.2009.10.006","https://www.sciencedirect.com/science/article/pii/S0957417409008720","In many software acquisition methods, functional software requirements are resolved, but non-functional requirements are more or less deliberately put aside. A large body of research exists on the necessity of handling specific non-functional requirements as major drivers in the software development process. However, prior research does not provide adequate support for managing non-functional requirements in the software selection process, and suggests a unique technique and methodology for identifying the selection criteria. This paper presents a fuzzy quality function deployment approach for determining which of the non-functional requirements reported by earlier studies are important to a company’s software selection decision based on and integrated with its functional requirements. The solution provided in this study not only assists decision makers in acquiring software requirements and defining selection criteria, but also supports determining the relative importance of these criteria. An actual case in Audio Electronics of Turkey’s electronic industry demonstrates the feasibility of applying the proposed framework in practice.","2010-04-01","2023-05-03 16:42:52","2023-05-03 16:42:52","2023-05-03 16:42:50","3415-3426","","4","37","","Expert Systems with Applications","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\F2TVAVAW\S0957417409008720.html","","","Non-functional requirements; ERP; Fuzzy QFD; Software requirements analysis; Software selection process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6UCX8QKF","journalArticle","2019","Sadiq, Mohd.; Nazneen, Sanjida","Elicitation of software testing requirements from the selected set of software's requirements in GOREP","International Journal of Computational Systems Engineering","","2046-3391","10.1504/IJCSYSE.2019.100743","https://www.inderscienceonline.com/doi/abs/10.1504/IJCSYSE.2019.100743","Requirements engineering (RE) is employed to elicit, model, and analyse the requirements of software. Software requirements elicitation is the first sub-process of RE; and it is used to identify the requirements of software according to the need of the stakeholders. In literature, we identify that goal oriented requirements elicitation process (GOREP) do not support the identification of testing requirements from the functional requirements (FR) of software in early phase of RE. Therefore, to tackle this research issue, we proposed a method for the identification of the testing requirements from the FR in GOREP. In real life applications, only those requirements are implemented and tested, which are selected by the stakeholders. So in the proposed method we used fuzzy based technique for FR selection on the basis of non-functional requirements (NFR). The 'canonical representation of multiplication operation' (CRMO) associated with L−1 R−1 inverse arithmetic principle and 'graded mean integration representation' (GMIR) based on 'triangular fuzzy numbers' (TFNs) have been applied for the selection of the FR. In our work, an Institute Examination System (IES) is used as a case study to explain the steps of the proposed method.","2019-01","2023-05-03 16:42:53","2023-05-03 16:42:53","2023-05-03 16:42:52","152-160","","3","5","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","non-functional requirements; NFR; functional requirements; fuzzy based approach; test cases; testing requirements; TFNs; triangular fuzzy numbers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LAJQ2PUY","journalArticle","2018","Jayatilleke, Shalinka; Lai, Richard","A systematic review of requirements change management","Information and Software Technology","","0950-5849","10.1016/j.infsof.2017.09.004","https://www.sciencedirect.com/science/article/pii/S0950584917304664","Context Software requirements are often not set in concrete at the start of a software development project; and requirements changes become necessary and sometimes inevitable due to changes in customer requirements and changes in business rules and operating environments; hence, requirements development, which includes requirements changes, is a part of a software process. Previous work has shown that failing to manage software requirements changes well is a main contributor to project failure. Given the importance of the subject, there's a plethora of research work that discuss the management of requirements change in various directions, ways and means. An examination of these works suggests that there's a room for improvement. Objective In this paper, we present a systematic review of research in Requirements Change Management (RCM) as reported in the literature. Method We use a systematic review method to answer four key research questions related to requirements change management. The questions are: (1) What are the causes of requirements changes? (2) What processes are used for requirements change management? (3) What techniques are used for requirements change management? and (4) How do organizations make decisions regarding requirements changes? These questions are aimed at studying the various directions in the field of requirements change management and at providing suggestions for future research work. Results The four questions were answered; and the strengths and weaknesses of existing techniques for RCM were identified. Conclusions This paper has provided information about the current state-of-the-art techniques and practices for RCM and the research gaps in existing work. Benefits, risks and difficulties associated with RCM are also made available to software practitioners who will be in a position of making better decisions on activities related to RCM. Better decisions will lead to better planning which will increase the chance of project success.","2018-01-01","2023-05-03 16:42:55","2023-05-03 16:42:55","2023-05-03 16:42:54","163-185","","","93","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\SEXL39JW\S0950584917304664.html","","","Systematic review; Agile; Requirements change management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EA6T9Z56","conferencePaper","2008","Zhang, Yuanyuan; Finkelstein, Anthony; Harman, Mark","Search Based Requirements Optimisation: Existing Work and Challenges","Requirements Engineering: Foundation for Software Quality","978-3-540-69062-7","","10.1007/978-3-540-69062-7_8","","In this position paper, we argue that search based software engineering techniques can be applied to the optimisation problem during the requirements analysis phase. Search based techniques offer significant advantages; they can be used to seek robust, scalable solutions, to perform sensitivity analysis, to yield insight and provide feedback explaining choices to the decision maker. This position paper overviews existing achievements and sets out future challenges.","2008","2023-05-03 16:43:01","2023-05-03 16:43:01","","88-94","","","","","","Search Based Requirements Optimisation","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Pareto Front; Release Problem; Requirement Dependency; Requirement Optimisation; Requirement Prioritisation","Paech, Barbara; Rolland, Colette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LPHEXDG8","journalArticle","2007","Sadraei, Emila; Aurum, Aybüke; Beydoun, Ghassan; Paech, Barbara","A field study of the requirements engineering practice in Australian software industry","Requirements Engineering","","1432-010X","10.1007/s00766-007-0042-4","https://doi.org/10.1007/s00766-007-0042-4","Empirical studies have demonstrated that requirements errors introduced during software development are most numerous in the software life-cycle, making software requirements critical determinants of software quality. This article reports an exploratory study which provides insight into industrial practices with respect to requirements engineering (RE). A combination of both qualitative and quantitative data is collected, using semi-structured interviews and a detailed questionnaire from 28 software projects in 16 Australian companies. The contribution of this RE study is threefold: Firstly, it includes a detailed examination of the characteristics of the RE activities involved in the projects. Secondly, it reconstructs the underlying practiced process models. Thirdly, it compares these models to one another and with a number of well-known process models from RE literature to give insight into the gap between RE theory and practice.","2007-07-01","2023-05-07 15:31:41","2023-05-07 15:31:41","2023-05-07 15:31:41","145-162","","3","12","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Software Development Process; Requirement Engineering; Requirement Elicitation; Internal Project; Software Project","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C6Z5N5IG","journalArticle","2015","Brhel, Manuel; Meth, Hendrik; Maedche, Alexander; Werder, Karl","Exploring principles of user-centered agile software development: A literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2015.01.004","https://www.sciencedirect.com/science/article/pii/S0950584915000129","Context In the last decade, software development has been characterized by two major approaches: agile software development, which aims to achieve increased velocity and flexibility during the development process, and user-centered design, which places the goals and needs of the system’s end-users at the center of software development in order to deliver software with appropriate usability. Hybrid development models, referred to as user-centered agile software development (UCASD) in this article, propose to combine the merits of both approaches in order to design software that is both useful and usable. Objective This paper aims to capture the current state of the art in UCASD approaches and to derive generic principles from these approaches. More specifically, we investigate the following research question: Which principles constitute a user-centered agile software development approach? Method We conduct a systematic review of the literature on UCASD. Identified works are analyzed using a coding scheme that differentiates four levels of UCASD: the process, practices, people/social and technology dimensions. Through subsequent synthesis, we derive generic principles of UCASD. Results We identified and analyzed 83 relevant publications. The analysis resulted in a comprehensive coding system and five principles for UCASD: (1) separate product discovery and product creation, (2) iterative and incremental design and development, (3) parallel interwoven creation tracks, (4) continuous stakeholder involvement, and (5) artifact-mediated communication. Conclusion Our paper contributes to the software development body of knowledge by (1) providing a broad overview of existing works in the area of UCASD, (2) deriving an analysis framework (in form a coding system) for works in this area, going beyond former classifications, and (3) identifying generic principles of UCASD and associating them with specific practices and processes.","2015-05-01","2023-05-07 15:31:45","2023-05-07 15:31:45","2023-05-07 15:31:45","163-181","","","61","","Information and Software Technology","Exploring principles of user-centered agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\G9IQSUW6\S0950584915000129.html","","","Agile software development; Systematic literature review; User-centered design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GULFYSME","journalArticle","2012","Bjarnason, Elizabeth; Wnuk, Krzysztof; Regnell, Björn","Are you biting off more than you can chew? A case study on causes and effects of overscoping in large-scale software engineering","Information and Software Technology","","0950-5849","10.1016/j.infsof.2012.04.006","https://www.sciencedirect.com/science/article/pii/S0950584912000778","Context Scope management is a core part of software release management and often a key factor in releasing successful software products to the market. In a market-driven case, when only a few requirements are known a priori, the risk of overscoping may increase. Objective This paper reports on findings from a case study aimed at understanding overscoping in large-scale, market-driven software development projects, and how agile requirements engineering practices may affect this situation. Method Based on a hypothesis of which factors that may be involved in an overscoping situation, semi-structured interviews were performed with nine practitioners at a large, market-driven software company. The results from the interviews were validated by six (other) practitioners at the case company via a questionnaire. Results The results provide a detailed picture of overscoping as a phenomenon including a number of causes, root causes and effects, and indicate that overscoping is mainly caused by operating in a fast-moving market-driven domain and how this ever-changing inflow of requirements is managed. Weak awareness of overall goals, in combination with low development involvement in early phases, may contribute to ‘biting off’ more than a project can ‘chew’. Furthermore, overscoping may lead to a number of potentially serious and expensive consequences, including quality issues, delays and failure to meet customer expectations. Finally, the study indicates that overscoping occurs also when applying agile requirements engineering practices, though the overload is more manageable and perceived to result in less wasted effort when applying a continuous scope prioritization, in combination with gradual requirements detailing and a close cooperation within cross-functional teams. Conclusion The results provide an increased understanding of scoping as a complex and continuous activity, including an analysis of the causes, effects, and a discussion on possible impact of agile requirements engineering practices to the issue of overscoping. The results presented in this paper can be used to identify potential factors to address in order to achieve a more realistic project scope.","2012-10-01","2023-05-07 15:31:48","2023-05-07 15:31:48","2023-05-07 15:31:48","1107-1124","","10","54","","Information and Software Technology","Are you biting off more than you can chew?","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\QPHMKCEJ\Bjarnason et al. - 2012 - Are you biting off more than you can chew A case .pdf; C:\Users\gabra\Zotero\storage\TDRICVK5\S0950584912000778.html","","","Agile requirements engineering; Empirical study; Case study; Requirements scoping; Software release planning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Y38ASTX7","journalArticle","2009","Misra, Subhas Chandra; Kumar, Vinod; Kumar, Uma","Identifying some important success factors in adopting agile software development practices","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2009.05.052","https://www.sciencedirect.com/science/article/pii/S016412120900123X","Agile software development (ASD) is an emerging approach in software engineering, initially advocated by a group of 17 software professionals who practice a set of “lightweight” methods, and share a common set of values of software development. In this paper, we advance the state-of-the-art of the research in this area by conducting a survey-based ex-post-facto study for identifying factors from the perspective of the ASD practitioners that will influence the success of projects that adopt ASD practices. In this paper, we describe a hypothetical success factors framework we developed to address our research question, the hypotheses we conjectured, the research methodology, the data analysis techniques we used to validate the hypotheses, and the results we obtained from data analysis. The study was conducted using an unprecedentedly large-scale survey-based methodology, consisting of respondents who practice ASD and who had experience practicing plan-driven software development in the past. The study indicates that nine of the 14 hypothesized factors have statistically significant relationship with “Success”. The important success factors that were found are: customer satisfaction, customer collaboration, customer commitment, decision time, corporate culture, control, personal characteristics, societal culture, and training and learning.","2009-11-01","2023-05-07 15:31:50","2023-05-07 15:31:50","2023-05-07 15:31:50","1869-1890","","11","82","","Journal of Systems and Software","","SI: TAIC PART 2007 and MUTATION 2007","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\87NMSFXT\S016412120900123X.html","","","Agile software; Success factors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MEAPY8E7","bookSection","2006","Boehm, Barry W.","Value-Based Software Engineering: Overview and Agenda","Value-Based Software Engineering","978-3-540-29263-0","","","https://doi.org/10.1007/3-540-29263-2_1","Much of current software engineering practice and research is done in a value-neutral setting, in which every requirement, use case, object, test case, and defect is equally important. However, most studies of the critical success factors distinguishing successful from failed software projects find that the primary critical success factors lie in the value domain. The value-based software engineering (VBSE) agenda discussed in this chapter and exemplified in the other chapters involves integrating value considerations into the full range of existing and emerging software engineering principles and practices. The chapter then summarizes the primary components of the agenda: value-based requirements engineering, architecting, design and development, verification and validation, planning and control, risk management, quality management, people management, and an underlying theory of VBSE. It concludes with a global road map for realizing the benefits of VBSE.","2006","2023-05-07 15:31:54","2023-05-07 15:31:54","2023-05-07 15:31:53","3-14","","","","","","Value-Based Software Engineering","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/3-540-29263-2_1","","","","","risk management; value-based software engineering; analysis; Benefits realization; business case analysis; cost-benefit analysis; investment; return on investment; software economics; stakeholder values","Biffl, Stefan; Aurum, Aybüke; Boehm, Barry; Erdogmus, Hakan; Grünbacher, Paul","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9S4W738V","book","2018","Murtazina, Marina; Avdeenko, T.","The ontology-driven approach to support the requirements engineering process in Scrum framework","","","","","","The paper presents an approach to the Support of the requirements engineering process in the field of software development process by applying OWL ontology. A brief overview of the capabilities of using ontologies for intellectual support of the process of requirements engineering is given. The main features of requirements engineering for Scrum project management of software development are analyzed.The quality assessment criteria of user stories are explored. The developed ontology accumulates knowledge about the quality assessment criteria of user stories, about requirements artifacts, types of requirements, about elements of Scrum framework. The ontology includes axioms that determine the quality of user story expression and the quality properties of the requirements.Also ontology includes axioms determining the priority and risk of user stories.The ontology is implemented in the Protégé environment.","2018-01-01","2023-05-07 15:31:59","2023-05-07 15:31:59","","","287","","","","","","","","","","","","","","","","","ResearchGate","","Pages: 295 DOI: 10.18287/1613-0073-2018-2212-287-295","","C:\Users\gabra\Zotero\storage\JU7TNFGN\Murtazina and Avdeenko - 2018 - The ontology-driven approach to support the requir.pdf; ","https://www.researchgate.net/profile/T-Avdeenko/publication/327922567_The_ontology-driven_approach_to_support_the_requirements_engineering_process_in_Scrum_framework/links/5c1a299492851c22a3361499/The-ontology-driven-approach-to-support-the-requirements-engineering-process-in-Scrum-framework.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3R67VBKE","journalArticle","2014","Chuang, Sun-Wen; Luor, Tainyi; Lu, Hsi-Peng","Assessment of institutions, scholars, and contributions on agile software development (2001–2012)","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2014.03.006","https://www.sciencedirect.com/science/article/pii/S0164121214000697","The number of scholarly publications on agile software development has grown significantly in recent years. Several researchers reviewed and attempted to synthesize studies on agile software development. However, no work has ranked the contributions of scholars and institutions to publications using a thorough process. This study presents findings on top publications, institutions, and scholars in the agile software development field from 2001 to 2012 based on the publication of such works in Science Citation Index journals. This paper highlights the key outlets for agile research and summarizes the most influential researchers and institutions as well as the most studied research areas. This study concludes by providing directions for future research.","2014-07-01","2023-05-07 15:32:03","2023-05-07 15:32:03","2023-05-07 15:32:02","84-101","","","93","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\XGKW7ZGU\S0164121214000697.html","","","Agile software development; Literature assessment; Research productivity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K973IVLD","conferencePaper","2011","Baca, Dejan; Carlsson, Bengt","Agile development with security engineering activities","Proceedings of the 2011 International Conference on Software and Systems Process","978-1-4503-0730-7","","10.1145/1987875.1987900","https://doi.org/10.1145/1987875.1987900","Agile software development has been used by industry to create a more flexible and lean software development process, i.e making it possible to develop software at a faster rate and with more agility during development. There are however concerns that the higher development pace and lack of documentation are creating less secure software. We have therefore looked at three known Security Engineering processes, Microsoft SDL, Cigatel touchpoints and Common Criteria and identified what specific security activities they performed. We then compared these activities with an Agile development process that is used in industry. Developers, from a large telecommunication manufacturer, were interviewed to learn their impressions on using these security activities in an agile development process. We produced a security enhanced Agile development process that we present in this paper. This new Agile process use activities from already established security engineering processes that provide the benefit the developers wanted but did not hinder or obstruct the Agile process in a significant way.","2011-05-21","2023-05-07 15:32:07","2023-05-07 15:32:07","2023-05-07","149–158","","","","","","","ICSSP '11","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\GWJMIWAS\Baca and Carlsson - 2011 - Agile development with security engineering activi.pdf","","","software engineering; agile process; development process; security engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5KNH3WAN","journalArticle","2018","Pereira, Julio Cesar; Russo, Rosaria de F. S. M.","Design Thinking Integrated in Agile Software Development: A Systematic Literature Review","Procedia Computer Science","","1877-0509","10.1016/j.procs.2018.10.101","https://www.sciencedirect.com/science/article/pii/S1877050918317484","Software development raises the relevance as it enables automation of the processes and provides new functionalities to the final consumers; Agile Software Development is an enabler to accelerate software delivery, manage priorities changes and increase productivity. During the software development life cycle, the development team is expected to fully understand customers’ needs, but it is challenged by geographic constraints, narrow project schedule, or short budget. Design Thinking is an approach that promotes the understanding of customer needs considering what is technical and economic feasible. To evaluate how the Design Thinking approach is used integrated with Agile Software Development methodologies, we applied the Systematic Literature Review, which collected, categorized and reviewed 29 articles related to this topic. The results show that most of the integrated models are applied throughout the software life cycle, noting that the model that integrates the DT approach published by the International Organization for Standardization (ISO) and Scrum as an agile methodology composes the most frequently used integrated model. The integrated models resulted in a greater approximation of end users and the development team, improving the quality and usability of the software.","2018-01-01","2023-05-07 15:32:09","2023-05-07 15:32:09","2023-05-07 15:32:07","775-782","","","138","","Procedia Computer Science","Design Thinking Integrated in Agile Software Development","CENTERIS 2018 - International Conference on ENTERprise Information Systems / ProjMAN 2018 - International Conference on Project MANagement / HCist 2018 - International Conference on Health and Social Care Information Systems and Technologies, CENTERIS/ProjMAN/HCist 2018","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\IQF52SXG\Pereira and Russo - 2018 - Design Thinking Integrated in Agile Software Devel.pdf; C:\Users\gabra\Zotero\storage\G4E22AGG\S1877050918317484.html","","","Software; Design Thinking; Agile Methodology; Information Systems; Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BFJRSWAQ","journalArticle","2012","Moe, Nils Brede; Aurum, Aybüke; Dybå, Tore","Challenges of shared decision-making: A multiple case study of agile software development","Information and Software Technology","","0950-5849","10.1016/j.infsof.2011.11.006","https://www.sciencedirect.com/science/article/pii/S0950584911002308","Context Agile software development changes the nature of collaboration, coordination, and communication in software projects. Objective Our objective was to understand the challenges of shared decision-making in agile software development teams. Method We designed a multiple case study consisting of four projects in two software product companies that recently adopted Scrum. We collected data in semi-structured interviews, through participant observations, and from process artifacts. Results We identified three main challenges to shared decision-making in agile software development: alignment of strategic product plans with iteration plans, allocation of development resources, and performing development and maintenance tasks in teams. Conclusion Agile software development requires alignment of decisions on the strategic, tactical, and operational levels in order to overcome these challenges. Agile development also requires a transition from specialized skills to redundancy of functions and from rational to naturalistic decision-making. This takes time; the case companies needed from one to two years to change from traditional, hierarchical decision-making to shared decision-making in software development projects.","2012-08-01","2023-05-07 15:32:14","2023-05-07 15:32:14","2023-05-07 15:32:11","853-865","","8","54","","Information and Software Technology","Challenges of shared decision-making","Special Issue: Voice of the Editorial Board","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\CYQNLVHA\S0950584911002308.html","","","Agile software development; Teamwork; Scrum; Alignment; Decision-making; Self-management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VJVJHJPI","book","2013","Wiegers, Karl; Beatty, Joy","Software Requirements","","978-0-7356-7962-7","","","","Now in its third edition, this classic guide to software requirements engineering has been fully updated with new topics, examples, and guidance. Two leaders in the requirements community have teamed up to deliver a contemporary set of practices covering the full range of requirements development and management activities on software projects.  Describes practical, effective, field-tested techniques for managing the requirements engineering process from end to end. Provides examples demonstrating how requirements ""good practices"" can lead to fewer change requests, higher customer satisfaction, and lower development costs. Fully updated with contemporary examples and many new practices and techniques. Describes how to apply effective requirements practices to agile projects and numerous other special project situations. Targeted to business analysts, developers, project managers, and other software project stakeholders who have a general understanding of the software development process. Shares the insights gleaned from the authors’ extensive experience delivering hundreds of software-requirements training courses, presentations, and webinars.   New chapters are included on specifying data requirements, writing high-quality functional requirements, and requirements reuse. Considerable depth has been added on business requirements, elicitation techniques, and nonfunctional requirements. In addition, new chapters recommend effective requirements practices for various special project situations, including enhancement and replacement, packaged solutions, outsourced, business process automation, analytics and reporting, and embedded and other real-time systems projects.","2013-08-15","2023-05-07 15:32:15","2023-05-07 15:32:15","","","1343","","","","","","","","","","Pearson Education","","en","","","","","Google Books","","Google-Books-ID: nbpCAwAAQBAJ","","","https://books.google.co.in/books?id=nbpCAwAAQBAJ","","Computers / Software Development & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WTCVMRW8","conferencePaper","2008","Uusitalo, Eero J.; Komssi, Marko; Kauppinen, Marjo; Davis, Alan M.","Linking Requirements and Testing in Practice","2008 16th IEEE International Requirements Engineering Conference","","","10.1109/RE.2008.30","","An increasing number of organizations are interested in binding requirements and testing more closely together. Based on a series of practitioner interviews conducted in five Finnish organizations, this paper presents a set of good practices that can be applied to create a stronger link between requirements engineering and testing. These practices include early tester participation particularly in requirements reviews, setting up traceability policies, taking feature requests from testers into account, and linking testing personnel with requirement owners. Due to reported hardships in implementing complete test traceability to requirements, communication links between testers and requirement owners are suggested in order to overcome the deficiencies of document links.","2008-09","2023-05-07 15:32:20","2023-05-07 15:32:20","","265-270","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\V4ZQ57ZC\4685680.html","","","requirements engineering; software engineering; Software testing; System testing; Information systems; software testing; Collaborative Requirements Engineering; Computer network management; Computer security; Engineering management; Joining processes; Personnel; Research and development; Research and development management; Tester Participation; traceability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 16th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"SFUJIGWA","journalArticle","2003","Williams, L.; Cockburn, A.","Agile software development: it's about feedback and change","Computer","","0018-9162","10.1109/MC.2003.1204373","http://ieeexplore.ieee.org/document/1204373/","","2003-06","2023-05-07 15:32:27","2023-05-07 15:32:27","2023-05-07 15:32:24","39-43","","6","36","","Computer","Agile software development","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\2XSAV867\Williams and Cockburn - 2003 - Agile software development it's about feedback an.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9WJZS4T7","journalArticle","2013","Mahmoud, Sara S; Ahmad, Imtiaz","A Green Model for Sustainable Software Engineering","International Journal of Software Engineering and Its Applications","","","","","Information Communication Technology (ICT) has a strong impact on sustainable development due its rising demands for energy and resources needed when building hardware and software products. Most of the efforts spent on Green ICT/IT have been dedicated to addressing the effects of hardware on the environment but little have been considering the effects of building software products as well. Efficient software will indirectly consume less energy by using up less hardware equipment to run. Our contributions in this paper are devoted to building a two level green software model that covers the sustainable life cycle of a software product and the software tools promoting green and environmentally sustainable software. In the first level we propose a new green software engineering process that is a hybrid process between sequential, iterative, and agile development processes to produce an environmentally sustainable one. Each stage of the software process is then further studied to produce a green and sustainable stage. We propose either green guidelines or green processes for each software stage in the engineering process. We add to the software life cycle the requirements stage and the testing stage. We also include in the first level a complete list of metrics to measure the greenness of each stage in terms of the first order effects of ICT on the environment for a green software engineering process. No effort has been placed before in designing a green software engineering process. The second level explains how software itself can be used as a tool to aid in green computing by monitoring resources in an energy efficient manner. Finally, we show and explain relationships that can be found between the two levels in our proposed model to make the software engineering process and product green and sustainable.","2013","2023-05-07 15:32:35","2023-05-07 15:32:35","","","","4","7","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\6M68VA7Z\Mahmoud and Ahmad - 2013 - A Green Model for Sustainable Software Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"77A8NECM","conferencePaper","2008","Dingsøyr, Torgeir; Dybå, Tore; Abrahamsson, Pekka","A Preliminary Roadmap for Empirical Research on Agile Software Development","Agile 2008 Conference","","","10.1109/Agile.2008.50","","Some claim that especially in the field of agile software development the research lags years behind of the practice. In this paper, we characterize the status and main challenges for research on agile software development, and propose a preliminary roadmap, focusing on providing more empirical research, primarily on experienced agile teams and organizations, connecting better to existing streams of research in more established fields, giving more attention to management-oriented approaches, and finally give more emphasis to the core ideas in agile software development in order to increase our understanding. We hope that this preliminary roadmap serves as a starting point for creating a common research agenda and enables the generation of fruitful discussions and research results from the field.","2008-08","2023-05-07 15:35:48","2023-05-07 15:35:48","","83-94","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\22U4PTRF\4599455.html","","","agile software development; scrum; Software; Companies; Industries; Argon; Art; Ear; empirical software engineering; extreme programming; lean software development; research roadmap; US Department of Energy; xp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Agile 2008 Conference","","","","","","","","","","","","","","",""
"XCTDKNFC","journalArticle","2008","Hanssen, Geir K.; Fægri, Tor E.","Process fusion: An industrial case study on agile software product line engineering","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2007.10.025","https://www.sciencedirect.com/science/article/pii/S0164121207002518","This paper presents a case study of a software product company that has successfully integrated practices from software product line engineering and agile software development. We show how practices from the two fields support the company’s strategic and tactical ambitions, respectively. We also discuss how the company integrates strategic, tactical and operational processes to optimize collaboration and consequently improve its ability to meet market needs, opportunities and challenges. The findings from this study are relevant to software product companies seeking ways to balance agility and product management. The findings also contribute to research on industrializing software engineering.","2008-06-01","2023-05-07 15:35:52","2023-05-07 15:35:52","2023-05-07 15:35:52","843-854","","6","81","","Journal of Systems and Software","Process fusion","Agile Product Line Engineering","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\ZCRITPQU\S0164121207002518.html","","","Agile software development; Software product management; Software product development; Software product line engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4CYGQPRF","journalArticle","2018","Shafiq, Muhammad; Zhang, Qinghua; Akbar, Muhammad Azeem; Khan, Arif Ali; Hussain, Shahid; Amin, Fazal-E; Khan, Asfandyar; Soofi, Aized Amin","Effect of Project Management in Requirements Engineering and Requirements Change Management Processes for Global Software Development","IEEE Access","","2169-3536","10.1109/ACCESS.2018.2834473","","Presently, global software development (GSD) is growing very rapidly. However, it is not an easy and straightforward process. Requirements engineering (RE) and requirements change management (RCM) both are considered as very challenging activities due to demanding rich communications. Because it is necessary to address geographical and cultural differences in GSD, this requirement makes RE and RCM challenging. This paper investigates the importance of project management in RE and RCM processes. First, the frameworks with the phenomena of specialized project management are proposed for RE and RCM. Then, a survey and blind interviews of the experts are conducted to validate the proposed frameworks. Finally, statistical tools are applied to analyze the collected data. By utilizing the analyzed data, our results show the significant impacts of both frameworks (i.e., RE and RCM) in the GSD environment.","2018","2023-05-07 15:35:58","2023-05-07 15:35:58","","25747-25763","","","6","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Access","","C:\Users\gabra\Zotero\storage\SIP2RXXS\8357767.html","","","Project management; Requirements engineering; Software; Organizations; Computer science; global software development (GSD); requirements change management (RCM); requirements collections (RCs); Requirements engineering (RE); Task analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3DHS8MAL","conferencePaper","2011","Stettina, Christoph Johann; Heijstek, Werner","Necessary and neglected? an empirical study of internal documentation in agile software development teams","Proceedings of the 29th ACM international conference on Design of communication","978-1-4503-0936-3","","10.1145/2038476.2038509","https://doi.org/10.1145/2038476.2038509","When compared to traditional development methods, agile development practices are associated with more direct communication and less documentation. However, few empirical studies exist that investigate the role of documentation in agile development teams. We thus employed a questionnaire to measure the perceptions of a group of agile practitioners with regard to the documentation in their projects. We obtained responses from 79 agile software development professionals and 8 teams in 13 different countries. Our findings include that over half of developers in our data set find documentation important or even very important but that too little documentation is available in their projects. Agile practitioners do not seem to agree with the agile principle that ""The most efficient and effective method of conveying information to and within a development team is face-to-face conversation."" We were able to validate this result for a set of dissimilar agile teams in various domains.","2011-10-03","2023-05-07 15:35:59","2023-05-07 15:35:59","2023-05-07","159–166","","","","","","Necessary and neglected?","SIGDOC '11","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","agile software development; empirical study; documentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EFBZ8BNC","book","2013","Eckstein, Jutta","Agile Software Development in the Large: Diving Into the Deep","","978-0-13-349237-8","","","","This is the digital version of the printed book (Copyright © 2004).  Who Says Large Teams Can’t Handle Agile Software Development?   Agile or ""lightweight"" processes have revolutionized the software development industry. They're faster and more efficient than traditional software development processes. They enable developers to    embrace requirement changes during the project deliver working software in frequent iterations focus on the human factor in software development    Unfortunately, most agile processes are designed for small or mid-sized software development projects—bad news for large teams that have to deal with rapid changes to requirements. That means all large teams!   With   Agile Software Development in the Large,   Jutta Eckstein—a leading speaker and consultant in the agile community—shows how to scale agile processes to teams of up to 200. The same techniques are also relevant to teams of as few as 10 developers, especially within large organizations.   Topics include  the agile value system as used in large teams the impact of a switch to agile processes the agile coordination of several sub-teams the way project size and team size influence the underlying architecture    Stop getting frustrated with inflexible processes that cripple your large projects! Use this book to harness the efficiency and adaptability of agile software development.   Stop getting frustrated with inflexible processes that cripple your large projects! Use this book to harness the efficiency and adaptability of agile software development.","2013-07-19","2023-05-07 15:36:02","2023-05-07 15:36:02","","","249","","","","","Agile Software Development in the Large","","","","","Addison-Wesley","","en","","","","","Google Books","","Google-Books-ID: iaodAAAAQBAJ","","","https://books.google.co.in/books?id=iaodAAAAQBAJ","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZVDHEJRK","conferencePaper","2018","Marchesi, Michele; Marchesi, Lodovica; Tonelli, Roberto","An Agile Software Engineering Method to Design Blockchain Applications","Proceedings of the 14th Central and Eastern European Software Engineering Conference Russia","978-1-4503-6176-7","","10.1145/3290621.3290627","https://doi.org/10.1145/3290621.3290627","Cryptocurrencies and their foundation technology, the Blockchain, are reshaping finance and economics, allowing a decentralized approach enabling trusted applications with no trusted counterpart. More recently, the Blockchain and the programs running on it, called Smart Contracts, are also finding more and more applications in all fields requiring trust and sound certifications. Some people have come to the point of saying that the ""Blockchain revolution"" can be compared to that of the Internet and the Web in their early days. As a result, all the software development revolving around the Blockchain technology is growing at a staggering rate. The feeling of many software engineers about such huge interest in Blockchain technologies is that of unruled and hurried software development, a sort of competition on a first-come-first-served basis which does not assure neither software quality, nor that the basic concepts of software engineering are taken into account. This paper tries to cope with this issue, proposing a software development process to gather the requirement, analyze, design, develop, test and deploy Blockchain applications. The process is based on several Agile practices, such as User Stories and iterative and incremental development based on them. However, it makes also use of more formal notations, such as some UML diagrams describing the design of the system, with additions to represent specific concepts found in Blockchain development. The method is described in good detail, and an example is given to show how it works.","2018-10-12","2023-05-07 15:36:07","2023-05-07 15:36:07","2023-05-07","1–8","","","","","","","CEE-SECR '18","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\GLHA5IC2\Marchesi et al. - 2018 - An Agile Software Engineering Method to Design Blo.pdf","","","UML; Blockchain; Blockchain-oriented software engineering; dApp design; Smart Contracts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EXVDQ78G","bookSection","2010","Williams, Laurie","Agile Software Development Methodologies and Practices","Advances in Computers","","","","https://www.sciencedirect.com/science/article/pii/S0065245810800014","Beginning in the mid-1990s, a number of consultants independently created and evolved what later came to be known as agile software development methodologies. Agile methodologies and practices emerged as an attempt to more formally and explicitly embrace higher rates of change in software requirements and customer expectations. Some prominent agile methodologies are Adaptive Software Development, Crystal, Dynamic Systems Development Method, Extreme Programming (XP), Feature-Driven Development (FDD), Pragmatic Programming, and Scrum. This chapter presents the principles that underlie and unite the agile methodologies. Then, 32 practices used in agile methodologies are presented. Finally, three agile methodologies (XP, FDD, and Scrum) are explained. Most often, software development teams select a subset of the agile practices and create their own hybrid software development methodology rather than strictly adhere to all the practices of a predefined agile methodology. Teams that use primarily agile practices are most often small- to medium-sized, colocated teams working on less complex projects.","2010-01-01","2023-05-07 15:36:09","2023-05-07 15:36:09","2023-05-07 15:36:08","1-44","","","80","","","","Advances in Computers","","","","Elsevier","","en","","","","","ScienceDirect","","DOI: 10.1016/S0065-2458(10)80001-4","","C:\Users\gabra\Zotero\storage\3U99SXX2\S0065245810800014.html","","","","Zelkowitz, Marvin V.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UXGZPEC8","journalArticle","2006","Meso, Peter; Jain, Radhika","Agile Software Development: Adaptive Systems Principles and Best Practices","Information Systems Management","","1058-0530","10.1201/1078.10580530/46108.23.3.20060601/93704.3","https://doi.org/10.1201/1078.10580530/46108.23.3.20060601/93704.3","Today's environments of increasing business change require software development methodologies that are more adaptable. This article examines how complex adaptive systems (CAS) theory can be used to increase our understanding of how agile software development practices can be used to develop this capability. A mapping of agile practices to CAS principles and three dimensions (product, process, and people) results in several recommendations for “best practices” in systems development.","2006-06-01","2023-05-07 15:36:10","2023-05-07 15:36:10","2023-05-07 15:36:10","19-30","","3","23","","","Agile Software Development","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1201/1078.10580530/46108.23.3.20060601/93704.3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QS8CH5G6","conferencePaper","2002","Lloyd, W.J.; Rosson, M.B.; Arthur, J.D.","Effectiveness of elicitation techniques in distributed requirements engineering","Proceedings IEEE Joint International Conference on Requirements Engineering","","","10.1109/ICRE.2002.1048544","","Software development teams are often geographically distributed from their customers and end users. This creates significant communication and coordination challenges that impact the effectiveness of requirements engineering. Travel costs, and the local availability of quality technical staff increase the demand for effective distributed software development teams. This research reports an empirical study of how groupware can be used to aid distributed requirements engineering for a software development project. Six groups of seven to nine members were formed and divided into separate remote groups of customers and engineers. The engineers conducted a requirements analysis and produced a software requirements specification (SRS) document through distributed interaction with the remote customers. We present results and conclusions from the research including: an analysis of factors that affected the quality of the software requirements specification document written at the conclusion of the requirements process and the effectiveness of requirements elicitation techniques which were used in a distributed setting for requirements gathering.","2002-09","2023-05-07 15:38:38","2023-05-07 15:38:38","","311-318","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","C:\Users\gabra\Zotero\storage\WHP4AGD9\1048544.html; C:\Users\gabra\Zotero\storage\XPDDJZIW\Lloyd et al. - 2002 - Effectiveness of elicitation techniques in distrib.pdf","","","Programming; Software quality; Collaborative software; Collaborative work; Costs; Software maintenance; Software prototyping; Performance evaluation; Software performance; Spirals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE Joint International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"UV9MN8RF","conferencePaper","2010","Maiden, Neil; Jones, Sara; Karlsen, Kristine; Neill, Roger; Zachos, Konstantinos; Milne, Alastair","Requirements Engineering as Creative Problem Solving: A Research Agenda for Idea Finding","2010 18th IEEE International Requirements Engineering Conference","","","10.1109/RE.2010.16","","This vision paper frames requirements engineering as a creative problem solving process. Its purpose is to enable requirements researchers and practitioners to recruit relevant theories, models, techniques and tools from creative problem solving to understand and support requirements processes more effectively. It uses 4 drivers to motivate the case for requirements engineering as a creative problem solving process. It then maps established requirements activities onto one of the longest-established creative problem solving processes, and uses these mappings to locate opportunities for the application of creative problem solving in requirements engineering. The second half of the paper describes selected creativity theories, techniques, software tools and training that can be adopted to improve requirements engineering research and practice. The focus is on support for problem and idea finding - two creative problem solving processes that our investigation revealed are poorly supported in requirements engineering. The paper ends with a research agenda to incorporate creative processes, techniques, training and tools in requirements projects.","2010-09","2023-05-07 15:38:48","2023-05-07 15:38:48","","57-66","","","","","","Requirements Engineering as Creative Problem Solving","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\I4KE2E2I\Maiden et al. - 2010 - Requirements Engineering as Creative Problem Solvi.pdf; C:\Users\gabra\Zotero\storage\92XSKGBJ\5636900.html","","","Programming; Requirements engineering; Driver circuits; Problem-solving; Software tools; creativity; Technological innovation; Training","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 18th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"J89FCYTD","journalArticle","2018","Liebel, Grischa; Tichy, Matthias; Knauss, Eric; Ljungkrantz, Oscar; Stieglbauer, Gerald","Organisation and communication problems in automotive requirements engineering","Requirements Engineering","","1432-010X","10.1007/s00766-016-0261-7","https://doi.org/10.1007/s00766-016-0261-7","Project success in the automotive industry is highly influenced by requirements engineering (RE), for which communication and organisation structure play a major role, much due to the scale and distribution of these projects. However, empirical research is scarce on these aspects of automotive RE and warrants closer examination. Therefore, the purpose of this paper is to identify problems or challenges in automotive RE with respect to communication and organisation structure. Using a multiple-case study approach, we collected data via 14 semi-structured interviews at one car manufacturer and one supplier. We tested our findings from the case study with a questionnaire distributed to practitioners in the automotive industry. Our results indicate that it is difficult but increasingly important to establish communication channels outside the fixed organisation structure and that responsibilities are often unclear. Product knowledge during early requirements elicitation and context knowledge later on is lacking. Furthermore, abstraction gaps between requirements on different abstraction levels leads to inconsistencies. For academia, we formulate a concrete agenda for future research. Practitioners can use the findings to broaden their understanding of how the problems manifest and to improve their organisations.","2018-03-01","2023-05-07 15:38:54","2023-05-07 15:38:54","2023-05-07 15:38:53","145-167","","1","23","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\NAPMKRGM\Liebel et al. - 2018 - Organisation and communication problems in automot.pdf","","","Requirements engineering; Communication; Automotive; Challenges; Organisation; Problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CAZMD9Y4","journalArticle","2017","Hoda, Rashina; Salleh, Norsaremah; Grundy, John; Tee, Hui Mien","Systematic literature reviews in agile software development: A tertiary study","Information and Software Technology","","0950-5849","10.1016/j.infsof.2017.01.007","https://www.sciencedirect.com/science/article/pii/S0950584917300538","Context A number of systematic literature reviews and mapping studies (SLRs) covering numerous primary research studies on various aspects of agile software development (ASD) exist. Objective The aim of this paper is to provide an overview of the SLRs on ASD research topics for software engineering researchers and practitioners. Method We followed the tertiary study guidelines by Kitchenham et al. to find SLRs published between late 1990s to December 2015. Results We found 28 SLRs focusing on ten different ASD research areas: adoption, methods, practices, human and social aspects, CMMI, usability, global software engineering (GSE), organizational agility, embedded systems, and software product line engineering. The number of SLRs on ASD topics, similar to those on software engineering (SE) topics in general, is on the rise. A majority of the SLRs applied standardized guidelines and the quality of these SLRs on ASD topics was found to be slightly higher for journal publications than for conferences. While some individuals and institutions seem to lead this area, the spread of authors and institutions is wide. With respect to prior review recommendations, significant progress was noticed in the area of connecting agile to established domains such as usability, CMMI, and GSE; and considerable progress was observed in focusing on management-oriented approaches as Scrum and sustaining ASD in different contexts such as embedded systems. Conclusion SLRs of ASD studies are on the rise and cover a variety of ASD aspects, ranging from early adoption issues to newer applications of ASD such as in product line engineering. ASD research can benefit from further primary and secondary studies on evaluating benefits and challenges of ASD methods, agile hybrids in large-scale setups, sustainability, motivation, teamwork, and project management; as well as a fresh review of empirical studies in ASD to cover the period post 2008.","2017-05-01","2023-05-07 15:38:57","2023-05-07 15:38:57","2023-05-07 15:38:57","60-70","","","85","","Information and Software Technology","Systematic literature reviews in agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7CGW9JW5\S0950584917300538.html","","","Agile software development; Mapping study; Systematic literature reviews; Tertiary study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VFKWBMT4","journalArticle","2014","Flora, Harleen K; Chande, Swati V","A Systematic Study on Agile Software Development Methodologies and Practices","","","","","","Software engineering techniques have been employed for many years to create software products. The selections of appropriate software development methodologies for a given project, and tailoring the methodologies to a specific requirement have been a challenge since the establishment of software development as a discipline. In the late 1990’s, the general trend in software development techniques has changed from traditional waterfall approaches to more iterative incremental development approaches with different combination of old concepts, new concepts, and metamorphosed old concepts. Nowadays, the aim of most software companies is to produce software in short time period with minimal costs, and within unstable, changing environments that inspired the birth of Agile.","2014","2023-05-07 15:39:00","2023-05-07 15:39:00","","","","","5","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\TQPL7Q3L\Flora and Chande - 2014 - A Systematic Study on Agile Software Development M.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZXBANGY7","conferencePaper","2011","Bakalova, Zornitza; Daneva, Maya; Herrmann, Andrea; Wieringa, Roel","Agile Requirements Prioritization: What Happens in Practice and What Is Described in Literature","Requirements Engineering: Foundation for Software Quality","978-3-642-19858-8","","10.1007/978-3-642-19858-8_18","","[Context & motivation] Requirements (re)prioritization is an essential mechanism of agile development approaches to maximize the value for the clients and to accommodate changing requirements. Yet, in the agile Requirements Engineering (RE) literature, very little is known about how agile (re)prioritization happens in practice. [Question/problem] To gain better understanding of prioritization practices, we analyzed the real-life processes as well as the guidance that the literature provides. We compare the results of a literature research with the results of a multiple case study that we used to create a conceptual model of the prioritization process. We set out to answer the research question: “Which concepts of agile prioritization are shared in practice and in literature and how they are used to provide guidance for prioritization”. [Results] The case study yielded a conceptual model of the inter-iteration prioritization process. Further, we achieved a mapping between the concepts from the model and the existing prioritization techniques, described by several authors. [Contribution] The model contributes to the body of knowledge in agile RE. It makes explicit the concepts that practitioners tacitly use in the agile prioritization process. We use this for structuring the mapping study with the literature and plan to use it for analyzing, supporting, and improving the process in agile projects. The mapping gives us a clear understanding of the ’deviation’ between the existing methods as prescribed in literature and the processes we observe in real life. It helps to identify which of the concepts are used explicitly by other authors/ methods.","2011","2023-05-07 15:39:05","2023-05-07 15:39:05","","181-195","","","","","","Agile Requirements Prioritization","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\RCCZWHU8\Bakalova et al. - 2011 - Agile Requirements Prioritization What Happens in.pdf","","","agile development; conceptual model; requirements prioritization","Berry, Daniel; Franch, Xavier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9M7NGSD5","conferencePaper","2018","van der Heijden, Amber; Broasca, Cosmin; Serebrenik, Alexander","An empirical perspective on security challenges in large-scale agile software development","Proceedings of the 12th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement","978-1-4503-5823-1","","10.1145/3239235.3267426","https://doi.org/10.1145/3239235.3267426","Background Agile methods have been shown to have a negative impact on security. Several studies have investigated challenges in aligning security practices with agile methods, however, none of these have examined security challenges in the context of large-scale agile. Large-scale agile can present unique challenges, as large organizations often involve highly interdependent teams that need to align with other (non-agile) departments. Goal Our objective is to identify security challenges encountered in large-scale agile software development from the perspective of agile practitioners. Method Cooperative Method Development is applied to guide a qualitative case study at Rabobank, a Dutch multinational banking organization. A total of ten interviews is conducted with members in different agile roles from five different agile development teams. Data saturation has been obtained. By open card sorting we identify challenges pertaining to security in agile. Results The following challenges appear to be unique to large-scale agile: alignment of security objectives in a distributed setting, developing a common understanding of the roles and responsibilities in security activities, and integration of low-overhead security testing tools. Additional challenges reported appear to be common to security in software development in general or concur with challenges reported for small-scale agile. Conclusions The reported findings suggest the presence of multiple security challenges unique to large-scale agile. Future work should focus on confirming these challenges and investigating possible mitigations.","2018-10-11","2023-05-07 15:39:08","2023-05-07 15:39:08","2023-05-07","1–4","","","","","","","ESEM '18","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\WAMTAVDL\van der Heijden et al. - 2018 - An empirical perspective on security challenges in.pdf","","","agile software development; large-scale agile; security management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VVXHC6QG","conferencePaper","2010","Bebensee, Thomas; van de Weerd, Inge; Brinkkemper, Sjaak","Binary Priority List for Prioritizing Software Requirements","Requirements Engineering: Foundation for Software Quality","978-3-642-14192-8","","10.1007/978-3-642-14192-8_8","","[Context and motivation] Product managers in software companies are confronted with a continuous stream of incoming requirements. Due to limited resources they have to make a selection of those that can be implemented. However, few prioritization techniques are suitable for prioritizing larger numbers of requirements. [Question/problem] Binary Priority List (BPL) is a binary search based technique for prioritizing requirements. Academics and practitioners have referred to it in previous works. However, it has not been described and researched in detail. [Principal ideas/results] This paper introduces BPL, examines how it can be used for prioritizing requirements and assesses its prioritization process quality by comparing it to another prioritization technique. A facilitating tool was developed and applied in two small Dutch product software companies. [Contribution] The paper demonstrates that the technique can be successfully used to prioritize requirements and is especially suitable for a medium amount of low-level requirements.","2010","2023-05-07 15:39:15","2023-05-07 15:39:15","","67-78","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirements Prioritization; Agile Project Management; Binary Priority List; Binary Search Algorithm; Software Product Management","Wieringa, Roel; Persson, Anne","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I9DBJM2Q","journalArticle","2017","Dragicevic, Srdjana; Celar, Stipe; Turic, Mili","Bayesian network model for task effort estimation in agile software development","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2017.01.027","https://www.sciencedirect.com/science/article/pii/S0164121217300171","Even though the use of agile methods in software development is increasing, the problem of effort estimation remains quite a challenge, mostly due to the lack of many standard metrics to be used for effort prediction in plan-driven software development. The Bayesian network model presented in this paper is suitable for effort prediction in any agile method. Simple and small, with inputs that can be easily gathered, the suggested model has no practical impact on agility. This model can be used as early as possible, during the planning stage. The structure of the proposed model is defined by the authors, while the parameter estimation is automatically learned from a dataset. The data are elicited from completed agile projects of a single software company. This paper describes various statistics used to assess the precision of the model: mean magnitude of relative error, prediction at level m, accuracy (the percentage of successfully predicted instances over the total number of instances), mean absolute error, root mean squared error, relative absolute error and root relative squared error. The obtained results indicate very good prediction accuracy.","2017-05-01","2023-05-07 15:39:17","2023-05-07 15:39:17","2023-05-07 15:39:15","109-119","","","127","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\2PTKHYWV\S0164121217300171.html","","","Agile software development; Bayesian network; Effort prediction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DDXRDBIE","journalArticle","2004","Szalvay, Victor","An Introduction to Agile Software Development","","","","","","","2004","2023-05-07 15:39:22","2023-05-07 15:39:22","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\NUGC4UIW\Szalvay - 2004 - An Introduction to Agile Software Development.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AGC48J3W","book","2008","Holcombe, Mike","Running an Agile Software Development Project","","978-0-470-38587-6","","","","A Practical Approach To Building Small To Medium Software Systems For Real Business Clients Based on more than 100 actual commercial projects, this book clearly explains how to run an agile software development project that delivers high-quality, high-value solutions to business clients. It concentrates on the practical, social, business, and management aspects as well as the technical issues involved. Professor Holcombe successfully connects readers with the wave of ""Agile 2.0"" concepts that take the techniques of agile development and place them in the service of business goals. Since it is widely believed that the use of Windows XP will become much more common in coming years, readers should be armed with cutting-edge knowledge of the latest practices in the field. Further features of the book include:   Case studies provide real-world examples and describe how XP was introduced into the environment   Analysis is provided to help readers determine which elements of XP are suitable for the unique challenges and environments for different projects   Problems of a failing agile project and how they can be fixed are covered, including insight into which managerial techniques can be employed   An Instructor's Guide provides practical advice on how to motivate students, organize real group projects, and deal, in a simple and effective way, with many of the problems that arise   A sample syllabus, sample tests, and additional case study information are available on an instructor's password-protected ftp site   Running an Agile Software Development Project is an indispensable guide for professional software developers, engineers, and project managers interested in learning how to use agile processes. It is also a valuable textbook for advanced undergraduate- and graduate-level students in computer engineering and software engineering courses.","2008-12-05","2023-05-07 15:42:17","2023-05-07 15:42:17","","","328","","","","","","","","","","John Wiley & Sons","","en","","","","","Google Books","","Google-Books-ID: CXbAdeytojQC","","","https://books.google.co.in/books?id=CXbAdeytojQC","","Computers / Software Development & Engineering / General; Computers / Information Technology; Technology & Engineering / Electronics / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CH2LPA8D","journalArticle","2011","Rao, Kuda Nageswara; Naidu, G Kavita; Chakka, Praneeth","A Study of the Agile Software Development Methods, Applicability and Implications in Industry","International Journal of Software Engineering and Its Applications","","","","","There has been a tremendous importance in the field of agile software development approaches in the recent past. This is because of the fastness that agile approaches bring in the life cycle of software development. This interest in the field shows that there are benefits to reap through successful implementation of agile methods. The field is relatively nascent and research is in its initial stages. The paper has been carried with the distinct objectives of examine and gain insights into the current agile methods and practices, understanding the strengths and weaknesses of agile methods and various issues of their applicability. To meet the set goals and objectives, we used both qualitative and quantitative research methodologies. Apart from a systematized literature survey and review, we performed a case study of four software companies in India. The data collection methods included questionnaires, interviews and analysis of the companies’ web-sites.","2011","2023-05-07 15:42:18","2023-05-07 15:42:18","","","","2","5","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\WL7WKJ92\Rao et al. - 2011 - A Study of the Agile Software Development Methods,.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RB6WFWFG","journalArticle","2014","Tessem, Bjørnar","Individual empowerment of agile and non-agile software developers in small teams","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.02.005","https://www.sciencedirect.com/science/article/pii/S0950584914000470","Context Empowerment of employees at work has been known to have a positive impact on job motivation and satisfaction. Software development is a field of knowledge work wherein one should also expect to see these effects, and the idea of empowerment has become particularly visible in agile methodologies, in which proponents emphasise team empowerment and individual control of the work activities as a central concern. Objective This research aims to get a better understanding of how empowerment is enabled in software development teams, both agile and non-agile, to identify differences in empowering practices and levels of individual empowerment. Method Twenty-five interviews with agile and non-agile developers from Norway and Canada on decision making and empowerment are analysed. The analysis is conducted using a conceptual model with categories for involvement, structural empowerment and psychological empowerment. Results Both kinds of development organisations are highly empowered and they are similar in most aspects relating to empowerment. However, there is a distinction in the sense that agile developers have more possibilities to select work tasks and influence the priorities in a development project due to team empowerment. Agile developers seem to put a higher emphasis on the value of information in decision making, and have more prescribed activities to enable low-cost information flow. More power is obtained through the achievement of managing roles for the non-agile developers who show interest and are rich in initiatives. Conclusion Agile developers have a higher sense of being able to impact the organisation than non-agile developers and have information channels that is significantly differently from non-agile developers. For non-agile teams, higher empowerment can be obtained by systematically applying low-cost participative decision making practices in the manager–developer relation and among peer developers. For agile teams, it is essential to more rigorously follow the empowering practices already established.","2014-08-01","2023-05-07 15:42:21","2023-05-07 15:42:21","2023-05-07 15:42:19","873-889","","8","56","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\Q26ED7RT\S0950584914000470.html","","","Agile methods; Software development; Empowerment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LDDEYTVA","book","2006","Cockburn, Alistair","Agile Software Development: The Cooperative Game","","978-0-321-63007-0","","","","“Agile Software Development is a highly stimulating and rich book. The author has a deep background and gives us a tour de force of the emerging agile methods.”  —Tom Gilb    The agile model of software development has taken the world by storm. Now, in Agile Software Development, Second Edition, one of agile’s leading pioneers updates his Jolt Productivity award-winning book to reflect all that’s been learned about agile development since its original introduction.    Alistair Cockburn begins by updating his powerful model of software development as a “cooperative game of invention and communication.” Among the new ideas he introduces: harnessing competition without damaging collaboration; learning lessons from lean manufacturing; and balancing strategies for communication. Cockburn also explains how the cooperative game is played in business and on engineering projects, not just software development   Next, he systematically illuminates the agile model, shows how it has evolved, and answers the questions developers and project managers ask most often, including   · Where does agile development fit in our organization?  · How do we blend agile ideas with other ideas? · How do we extend agile ideas more broadly?    Cockburn takes on crucial misconceptions that cause agile projects to fail. For example, you’ll learn why encoding project management strategies into fixed processes can lead to ineffective strategy decisions and costly mistakes. You’ll also find a thoughtful discussion of the controversial relationship between agile methods and user experience design.    Cockburn turns to the practical challenges of constructing agile methodologies for your own teams. You’ll learn how to tune and continuously reinvent your methodologies, and how to manage incomplete communication. This edition contains important new contributions on these and other topics:    · Agile and CMMI · Introducing agile from the top down · Revisiting “custom contracts” · Creating change with “stickers”   In addition, Cockburn updates his discussion of the Crystal methodologies, which utilize his “cooperative game” as their central metaphor.    If you’re new to agile development, this book will help you succeed the first time out. If you’ve used agile methods before, Cockburn’s techniques will make you even more effective.","2006-10-19","2023-05-07 15:42:25","2023-05-07 15:42:25","","","629","","","","","Agile Software Development","","","","","Pearson Education","","en","","","","","Google Books","","Google-Books-ID: i39yimbrzh4C","","","https://books.google.co.in/books?id=i39yimbrzh4C","","Computers / Software Development & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XGNAXVE5","conferencePaper","2006","Mnkandla, E.; Dwolatzky, B.","Defining Agile Software Quality Assurance","2006 International Conference on Software Engineering Advances (ICSEA'06)","","","10.1109/ICSEA.2006.261292","","Agile software development methodologies have since their inception claimed to improve the quality of the software product. The agile practitioners have also claimed that use of the agile approach has greatly improved the quality of their products. However, software quality is a rather complex concept; in fact some have defined the entire discipline of software engineering as the production of quality software. Quality according to ISO 9000 is defined as ""the totality of characteristics of an entity that bear on its ability to satisfy stated or implied needs."" In the existing agile literature there as not been a comprehensive definition of which characteristics of software quality are improved by the use of agile processes in developing software. In this paper an innovative technique is introduced for evaluating agile methodologies in order to determine which factors of software quality they improve. The technique uses a set of adapted software quality factors as defined by Bertrand Meyer and McCall.","2006-10","2023-05-07 15:42:26","2023-05-07 15:42:26","","36-36","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\9E4VUE55\4031821.html","","","Programming; Quality management; Software quality; Software engineering; software development; Software testing; Taxonomy; Writing; Agile methodologies; agile quality assurance; Logic testing; Q factor; Quality assurance; software quality.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2006 International Conference on Software Engineering Advances (ICSEA'06)","","","","","","","","","","","","","","",""
"QE2DEHCU","journalArticle","2016","Martins, Luiz Eduardo G.; Gorschek, Tony","Requirements engineering for safety-critical systems: A systematic literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2016.04.002","https://www.sciencedirect.com/science/article/pii/S0950584916300568","Context Safety-Critical Systems (SCS) are becoming increasingly present in our society. A considerable amount of research effort has been invested into improving the SCS requirements engineering process as it is critical to the successful development of SCS and, in particular, the engineering of safety aspects. Objective This article aims to investigate which approaches have been proposed to elicit, model, specify and validate safety requirements in the context of SCS, as well as to what extent such approaches have been validated in industrial settings. The paper will also investigate how the usability and usefulness of the reported approaches have been explored, and to what extent they enable requirements communication among the development project/team actors in the development of SCS. Method We conducted a systematic literature review by selecting 151 papers published between 1983 and 2014. The research methodology to conduct the SLR was based on the guidelines proposed by Kitchenham and Biolchini. Results The results of this systematic review should encourage further research into the design of studies to improve the requirements engineering for SCS, particularly to enable the communication of the safety requirements among the project team actors, and the adoption of other models for hazard and accident models. The presented results point to the need for more industry-oriented studies, particularly with more participation of practitioners in the validation of new approaches. Conclusion The most relevant findings from this review and their implications for further research are as follows: integration between requirements engineering and safety engineering areas; dominance of the traditional approaches; early mortality of new approaches; need for industry validation; lack of evidence for the usefulness and usability of most approaches; and the lack of studies that investigate how to improve the communication process throughout the lifecycle. Based on the findings, we suggest a research agenda to the community of researchers and advices to SCS practitioners.","2016-07-01","2023-05-07 15:42:31","2023-05-07 15:42:31","2023-05-07 15:42:27","71-89","","","75","","Information and Software Technology","Requirements engineering for safety-critical systems","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\B6N2NA95\S0950584916300568.html","","","Systematic literature review; Requirements engineering; Accident; Hazard; Safety requirements; Safety-critical systems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"83NVXTZS","journalArticle","2009","Ferreira, Susan; Collofello, James; Shunk, Dan; Mackulak, Gerald","Understanding the effects of requirements volatility in software engineering by using analytical modeling and software process simulation","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2009.03.014","https://www.sciencedirect.com/science/article/pii/S0164121209000557","This paper introduces an executable system dynamics simulation model developed to help project managers comprehend the complex impacts related to requirements volatility on a software development project. The simulator extends previous research and adds research results from an empirical survey, including over 50 new parameters derived from the associated survey data, to a base model. The paper discusses detailed results from two cases that show significant cost, schedule, and quality impacts as a result of requirements volatility. The simulator can be used as an effective tool to demonstrate the complex set of factor relationships and effects related to requirements volatility.","2009-10-01","2023-05-07 15:42:34","2023-05-07 15:42:34","2023-05-07 15:42:29","1568-1577","","10","82","","Journal of Systems and Software","","SI: YAU","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\X8K35CTW\S0164121209000557.html","","","Requirements engineering risk; Requirements volatility; Software process modeling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KQJNAKXK","journalArticle","2014","Yu, Xiaodan; Petter, Stacie","Understanding agile software development practices using shared mental models theory","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.02.010","https://www.sciencedirect.com/science/article/pii/S0950584914000524","Context Agile software development is an alternative software development methodology that originated from practice to encourage collaboration between developers and users, to leverage rapid development cycles, and to respond to changes in a dynamic environment. Although agile practices are widely used in organizations, academics call for more theoretical research to understand the value of agile software development methodologies. Objective This study uses shared mental models theory as a lens to examine practices from agile software methodologies to understand how agile practices enable software development teams to work together to complete tasks and work together effectively as a team. Method A conceptual analysis of specific agile practices was conducted using the lens of shared mental models theory. Three agile practices from Xtreme Programming and Scrum are examined in detail, system metaphor, stand-up meeting, and on-site customer, using shared mental models theory. Results Examining agile practices using shared mental models theory elucidates how agile practices improve collaboration during the software development process. The results explain how agile practices contribute toward a shared understanding and enhanced collaboration within the software development team. Conclusions This conceptual analysis demonstrates the value of agile practices in developing shared mental models (i.e. shared understanding) among developers and customers in software development teams. Some agile practices are useful in developing a shared understanding about the tasks to be completed, while other agile practices create shared mental models about team processes and team interactions. To elicit the desired outcomes of agile software development methods, software development teams should consider whether or not agile practices are used in a manner that enhances the team’s shared understanding. Using three specific agile practices as examples, this research demonstrates how theory, such as shared mental models theory, can enhance our understanding regarding how agile practices are useful in enhancing collaboration in the workplace.","2014-08-01","2023-05-07 15:42:38","2023-05-07 15:42:38","2023-05-07 15:42:32","911-921","","8","56","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\XRPEDJVB\S0950584914000524.html","","","Agile software development; Extreme programming; Scrum; Agile practices; Shared mental models theory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M7C4739T","journalArticle","2014","Unterkalmsteiner, M.; Feldt, R.; Gorschek, T.","A taxonomy for requirements engineering and software test alignment","ACM Transactions on Software Engineering and Methodology","","1049-331X","10.1145/2523088","https://doi.org/10.1145/2523088","Requirements Engineering and Software Testing are mature areas and have seen a lot of research. Nevertheless, their interactions have been sparsely explored beyond the concept of traceability. To fill this gap, we propose a definition of requirements engineering and software test (REST) alignment, a taxonomy that characterizes the methods linking the respective areas, and a process to assess alignment. The taxonomy can support researchers to identify new opportunities for investigation, as well as practitioners to compare alignment methods and evaluate alignment, or lack thereof. We constructed the REST taxonomy by analyzing alignment methods published in literature, iteratively validating the emerging dimensions. The resulting concept of an information dyad characterizes the exchange of information required for any alignment to take place. We demonstrate use of the taxonomy by applying it on five in-depth cases and illustrate angles of analysis on a set of thirteen alignment methods. In addition, we developed an assessment framework (REST-bench), applied it in an industrial assessment, and showed that it, with a low effort, can identify opportunities to improve REST alignment. Although we expect that the taxonomy can be further refined, we believe that the information dyad is a valid and useful construct to understand alignment.","2014-04-04","2023-05-07 15:42:40","2023-05-07 15:42:40","2023-05-07 15:42:39","16:1–16:38","","2","23","","ACM Trans. Softw. Eng. Methodol.","","","","","","","","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\N8DL7HWF\Unterkalmsteiner et al. - 2014 - A taxonomy for requirements engineering and softwa.pdf","","","software testing; Alignment; software process assessment; taxonomy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ATD59NYM","journalArticle","2010","Mellado, Daniel; Blanco, Carlos; Sánchez, Luis E.; Fernández-Medina, Eduardo","A systematic review of security requirements engineering","Computer Standards & Interfaces","","0920-5489","10.1016/j.csi.2010.01.006","https://www.sciencedirect.com/science/article/pii/S0920548910000255","One of the most important aspects in the achievement of secure software systems in the software development process is what is known as Security Requirements Engineering. However, very few reviews focus on this theme in a systematic, thorough and unbiased manner, that is, none of them perform a systematic review of security requirements engineering, and there is not, therefore, a sufficiently good context in which to operate. In this paper we carry out a systematic review of the existing literature concerning security requirements engineering in order to summarize the evidence regarding this issue and to provide a framework/background in which to appropriately position new research activities.","2010-06-01","2023-05-07 15:42:44","2023-05-07 15:42:44","2023-05-07 15:42:36","153-165","","4","32","","Computer Standards & Interfaces","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\PSU3UZ6Z\S0920548910000255.html","","","Systematic review; Requirements engineering; Security requirements; Secure development; Security; Security engineering; Security requirements engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LKVNHY7H","conferencePaper","2009","Levy, Meira; Hazzan, Orit","Knowledge management in practice: The case of agile software development","2009 ICSE Workshop on Cooperative and Human Aspects on Software Engineering","","","10.1109/CHASE.2009.5071412","","Knowledge is considered as the main competitive asset of the organization. One of the knowledge management (KM) cornerstones is improving productivity by effective knowledge sharing and transfer. However, from the game theory perspective, the main constraint is that people tend not to collaborate in uncertainty conditions, when collaborative behavior is not guaranteed, and sharing knowledge is time- and effort-consuming. Therefore, KM must be a practical aspect of the general organizational culture. Specifically, software development is a knowledge-intensive activity and its success depends heavily on the developers' knowledge and experience. In this presentation we highlight how the agile approach initiates a culture change that is in line with the culture change needed for a KM initiative. We discuss KM enablers that are embedded in the agile software engineering approach, and illustrate how collaborating processes and knowledge transparency can weaken the dilemmas people face and lead to better knowledge extraction and sharing.","2009-05","2023-05-07 17:15:09","2023-05-07 17:15:09","","60-65","","","","","","Knowledge management in practice","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Collaboration; Uncertainty; Knowledge management; Laboratories; Asset management; Educational products; Educational technology; Employee rights; Industrial engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 ICSE Workshop on Cooperative and Human Aspects on Software Engineering","","","","","","","","","","","","","","",""
"7NQLW2LG","conferencePaper","2010","Racheva, Zornitza; Daneva, Maya; Herrmann, Andrea","A conceptual model of client-driven agile requirements prioritization: results of a case study","Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement","978-1-4503-0039-1","","10.1145/1852786.1852837","https://doi.org/10.1145/1852786.1852837","Requirements (re)prioritization is an essential mechanism of agile development approaches to maximize the value for the clients and to accommodate changing requirements. Yet, in the agile Requirements Engineering (RE) literature, very little is known about how agile (re)prioritization happens in practice. Conceptual models about this process are missing, which, in turn, makes it difficult for both practitioners and researchers to reason about requirements decision-making at inter-iteration time. We did a multiple case study on agile requirements prioritization methods to yield a conceptual model for understanding the inter-iteration prioritization process. The model is derived by using interview data from practitioners in 8 development organizations. Such a model makes explicit the concepts that are used tacitly in the agile requirements prioritization practice and can be used for structuring future empirical investigations about this topic, and for analyzing, supporting, and improving the process in real-life projects.","2010-09-16","2023-05-07 17:15:45","2023-05-07 17:15:45","2023-05-07","1–4","","","","","","A conceptual model of client-driven agile requirements prioritization","ESEM '10","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","case study; agile development; requirements prioritization; inter-iteration decision-making process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X73AMR67","journalArticle","2010","Petersen, Kai; Wohlin, Claes","The effect of moving from a plan-driven to an incremental software development approach with agile practices","Empirical Software Engineering","","1573-7616","10.1007/s10664-010-9136-6","https://doi.org/10.1007/s10664-010-9136-6","So far, only few in-depth studies focused on the direct comparison of process models in general, and between plan-driven and incremental/agile approaches in particular. That is, it is not made explicit what the effect is of moving from one model to another model. Furthermore, there is limited evidence on advantages and issues encountered in agile software development, this is specifically true in the context of large-scale development. The objective of the paper is to investigate how the perception of bottlenecks, unnecessary work, and rework (from hereon referred to as issues) changes when migrating from a plan-driven to an incremental software development approach with agile practices (flexible product backlog, face-to-face interaction, and frequent integration), and how commonly perceived these practices are across different systems and development roles. The context in which the objective should be achieved is large-scale development with a market-driven focus. The selection of the context was based on the observation in related work that mostly small software development projects were investigated and that the investigation was focused on one agile model (eXtreme programming). A case study was conducted at a development site of Ericsson AB, located in Sweden in the end of 2007. In total 33 interviews were conducted in order to investigate the perceived change when migrating from plan-driven to incremental and agile software development, the interviews being the primary source of evidence. For triangulation purposes measurements collected by Ericsson were considered, the measurements relating to unnecessary work (amount of discarded requirements) and rework (data on testing efficiency and maintenance effort). Triangulation in this context means that the measurements were used to confirm the perceived changes with an additional data source. In total 64 issues were identified, 24 being of general nature and the remaining 40 being local and therefore unique to individual’s opinions or a specific system. The most common ones were documented and analyzed in detail. The commonality refers to how many persons in different roles and across the systems studied have mentioned the issues for each of the process models. The majority of the most common issues relates to plan-driven development. We also identified common issues remaining for agile after the migration, which were related to testing lead-time, test coverage, software release, and coordination overhead. Improvements were identified as many issues commonly raised for the plan-driven approach were not raised anymore for the incremental and agile approach. It is concluded that the recent introduction (start in 2005 with the study being conducted in the end of 2007) of incremental and agile practices brings added values in comparison to the plan-driven approach, which is evident from the absence of critical issues that are encountered in plan-driven development.","2010-12-01","2023-05-07 17:15:58","2023-05-07 17:15:58","2023-05-07 17:15:58","654-693","","6","15","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\7I7NDPSW\Petersen and Wohlin - 2010 - The effect of moving from a plan-driven to an incr.pdf","","","Agile; Case study; Incremental; Migration; Plan-driven","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YDPGW87R","conferencePaper","2003","Reichlmayr, T.","The agile approach in an undergraduate software engineering course project","33rd Annual Frontiers in Education, 2003. FIE 2003.","","","10.1109/FIE.2003.1265946","","The rise in popularity of agile software development methodologies such as extreme programming (XP), crystal, DSDM and feature-driven development has opened an opportunity for the software engineering education community. How can one capitalize on the strengths of agile development models while still appealing to established software engineering practices? The typical introductory software engineering course makes use of a team-based project to reinforce software process activities. The project normally runs for one academic term during which students are led through life-cycle activities using a modified waterfall approach to software development. While useful in teaching software engineering process concepts, this approach limits the team's ability to utilize feedback from downstream process activities. It also limits the students' opportunity to understand process improvement from their own experiences. The ability to respond to project change is also dampened by the fact that teams do not have the time or resources in this format to modify, or refactor the design of a project component let alone incorporate a new or modified customer requirement. Agile methodologies promote an evolutionary approach to development using short incremental release cycles. We report on the experiences of conducting a team project in an introductory software engineering course using agile development techniques at the Rochester Institute of Technology. Teams have the opportunity to experience multiple iterations of the software engineering life cycle and evolve a product design that allows for discoveries made during implementation and through the introduction of changing customer requirements. The project integrates the concept of test-driven development. This agile technique addresses testing early in the development process and reinforces the value of unit testing. The incorporation of agile techniques is not only useful for students in an introductory course, but may also be applied to upper division software engineering courses.","2003-11","2023-05-07 17:16:09","2023-05-07 17:16:09","","S2C-13","","","3","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 0190-5848","","C:\Users\gabra\Zotero\storage\G2B3KLPH\1265946.html","","","Design engineering; Feedback; Software engineering; Programming profession; Software testing; Accreditation; Engineering education; Engineering profession; Object oriented programming; Product design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","33rd Annual Frontiers in Education, 2003. FIE 2003.","","","","","","","","","","","","","","",""
"KS255QHE","journalArticle","2007","Memmel, Thomas; Gundelsweiler, Fredrik; Reiterer, Harald","Agile Human-centered Software Engineering","","","","","https://kops.uni-konstanz.de/handle/123456789/43081","We seek to close the gap between software engineering (SE) and human-computer interaction (HCI) by indicating interdisciplinary interfaces throughout the different phases of SE and HCI lifecycles. As agile representatives of SE, Extreme Programming (XP) and Agile Modeling (AM) contribute helpful principles and practices for a common engineering approach. We present a cross-discipline user interface design lifecycle that integrates SE and HCI under the umbrella of agile development. Melting IT budgets, pressure of time and the demand to build better software in less time must be supported by traveling as light as possible. We did, therefore, choose not just to mediate both disciplines. Following our surveys, a rather radical approach best fits the demands of engineering organizations.","2007","2023-05-07 17:16:13","2023-05-07 17:16:13","2023-05-07 17:16:13","","","","","","","","","","","","","","eng","","","","","kops.uni-konstanz.de","","","","C:\Users\gabra\Zotero\storage\NEQAVE2M\Memmel et al. - 2007 - Agile Human-centered Software Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CCPLPBYA","book","2011","Coplien, James O.; Bjørnvig, Gertrud","Lean Architecture: for Agile Software Development","","978-0-470-97013-3","","","","More and more Agile projects are seeking architectural roots as they struggle with complexity and scale - and they're seeking lightweight ways to do it  Still seeking? In this book the authors help you to find your own path Taking cues from Lean development, they can help steer your project toward practices with longstanding track records Up-front architecture? Sure. You can deliver an architecture as code that compiles and that concretely guides development without bogging it down in a mass of documents and guesses about the implementation Documentation? Even a whiteboard diagram, or a CRC card, is documentation: the goal isn't to avoid documentation, but to document just the right things in just the right amount Process? This all works within the frameworks of Scrum, XP, and other Agile approaches","2011-01-06","2023-05-07 17:16:19","2023-05-07 17:16:19","","","376","","","","","Lean Architecture","","","","","John Wiley & Sons","","en","","","","","Google Books","","Google-Books-ID: lpvY36MPMUwC","","","https://books.google.co.in/books?id=lpvY36MPMUwC","","Computers / Software Development & Engineering / General; Computers / Programming / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ATS6CGP4","journalArticle","2005","Boehm, B.; Turner, R.","Management challenges to implementing agile processes in traditional development organizations","IEEE Software","","1937-4194","10.1109/MS.2005.129","","Discussions with traditional developers and managers concerning agile software development practices nearly always contain two somewhat contradictory ideas. They find that on small, stand-alone projects, agile practices are less burdensome and more in tune with the software industry's increasing needs for rapid development and coping with continuous change. Managers face several barriers, real and perceived, when they try to bring agile approaches into traditional organizations. They categorized the barriers either as problems only in terms of scope or scale, or as significant general issues needing resolution. From these two categories, we've identified three areas - development process conflicts, business process conflicts, and people conflicts - that we believe are the critical challenges to software managers of large organizations in bringing agile approaches to bear in their projects.","2005-09","2023-05-07 17:16:45","2023-05-07 17:16:45","","30-39","","5","22","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\JPQP75NL\1504661.html","","","Programming; Project management; Software development management; Software engineering; Agile software development; Computer industry; Software systems; Automatic testing; Aerospace engineering; agile process; Aerospace materials; process integration; Refining; systems engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"W9UZMM2V","journalArticle","","Pikkarainen, Minna; Mäntyniemi, Annukka","An Approach for Using CMMI in Agile Software Development Assessments: Experiences from Three Case Studies","","","","","","Software development organizations are increasingly interested in the possibility of adopting agile development methods. Organizations that have been employing the Capability Maturity Model (CMM/CMMI) for making improvements are now changing their software development processes towards agility. By deploying agile methods, these organizations are making an investment the success of which needs to be proven. However, CMMI does not always support interpretations in an agile context. Consequently, assessments should be implemented in a manner that takes the agile context into account, while still producing useful results. This paper proposes an approach for agile software development assessment using CMMI and describes how this approach was used for software process improvement purposes in organizations that had either been planning to use or were using agile software development methods.","","2023-05-07 17:16:55","2023-05-07 17:16:55","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\3ZHBHRL2\Pikkarainen and Mäntyniemi - An Approach for Using CMMI in Agile Software Devel.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"88HUI3NU","conferencePaper","2008","Jiang, Li; Eberlein, Armin","Towards a framework for understanding the relationships between classical software engineering and agile methodologies","Proceedings of the 2008 international workshop on Scrutinizing agile practices or shoot-out at the agile corral","978-1-60558-021-0","","10.1145/1370143.1370146","https://doi.org/10.1145/1370143.1370146","There is an ongoing debate in the software engineering (SE) community over the usefulness and applicability of classical SE methodologies versus agile methodologies. Based on an investigation of the philosophical origins, the history and the technological support of representative classical SE methodologies and agile methodologies, a framework is proposed in this paper to help understand the relationship between these different approaches. The framework proposed provides a novel, five-dimensional ways in which to consider the concepts, historical and technological background of the methodologies, the characteristic differences between them, the variety of skills, and the economic, technological and organisational conditions needed to execute them. The framework has been formed by combining five techniques of research analysis: Contextual; Historical; Analysis by analogy; Phenomenological; and Linguistic. This framework (CHAPL) helps software engineers understand the nature of SE methodologies more objectively and at a fundamental level in order to select the best practices and suitable SE methodologies for a software project.","2008-05-10","2023-05-07 17:17:04","2023-05-07 17:17:04","2023-05-07","9–14","","","","","","","APOS '08","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","software engineering; agile methodology; waterfall model; philosophy; software engineering methodology; software process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EC8LK5MV","journalArticle","2017","School of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India-751024; Saurabh, Saurabh; Sagnika, Santwana; School of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India-751024; Mishra, Samaresh; School of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India-751024; Das, Madhabananda; School of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India-751024","A Systematic Review on Software Cost Estimation in Agile Software Development","JOURNAL OF ENGINEERING SCIENCE AND TECHNOLOGY REVIEW","","17919320, 17912377","10.25103/jestr.104.08","http://www.jestr.org/downloads/Volume10Issue4/fulltext81042017.pdf","In the last few years, the size and functionality of software have experienced a massive growth. Along with this, cost estimation plays a major role in the whole cycle of software development, and hence, it is a necessary task that should be done before the development cycle begins and may run throughout the software life cycle. It helps in making accurate estimation for any project so that appropriate charges and delivery date can be obtained. It also helps in identifying the effort required for developing the application, which assures the project acceptance or denial. Since late 90's, Agile Software Development (ASD) methodologies have shown high success rates for projects due to their capability of coping with changing requirements of the customers. Commencing product development using agile methods is a challenging task due to the live and dynamic nature of ASD. So, accurate cost estimation is a must for such development models in order to fine-tune the delivery date and estimation, while keeping the quality of software as the most important priority. This paper presents a systematic survey of cost estimation in ASD, which will be useful for the agile users to understand current trends in cost estimation in ASD.","2017","2023-05-07 17:17:05","2023-05-07 17:17:09","2023-05-07 17:17:05","51-64","","4","10","","JESTR","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\MTICDPKW\School of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India-751024 et al. - 2017 - A Systematic Review on Software Cost Estimation in.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DT8IWEPI","journalArticle","2005","Turk, Daniel; Robert, France; Rumpe, Bernhard","Assumptions Underlying Agile Software-Development Processes","Journal of Database Management (JDM)","","1063-8016","10.4018/jdm.2005100104","https://www.igi-global.com/article/journal-database-management-jdm/www.igi-global.com/article/journal-database-management-jdm/3342","Agile processes focus on the early facilitation and fast production of working code, and are based on software-development process models that support iterative, incremental development of software. Although agile methods have existed for a number of years now, answers to questions concerning the su...","2005-10-01","2023-05-07 17:17:12","2023-05-07 17:17:12","2023-05-07 17:17:12","62-87","","4","16","","JDM","","","","","","","","en","Access limited to members","","","","www.igi-global.com","","Publisher: IGI Global","","C:\Users\gabra\Zotero\storage\4XA2Q44S\Turk et al. - 2005 - Assumptions Underlying Agile Software-Development .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HYH5MX2F","bookSection","2005","Parviainen, Päivi; Tihinen, Maarit; Lormanms, Marco; Solingen, Rini van","Requirements Engineering: Dealing with the Complexity of Sociotechnical Systems Development","Requirements Engineering for Sociotechnical Systems","978-1-59140-506-1","","","https://www.igi-global.com/chapter/requirements-engineering-sociotechnical-systems/www.igi-global.com/chapter/requirements-engineering-sociotechnical-systems/28399","This chapter introduces requirements engineering for sociotechnical systems. Requirements engineering for sociotechnical systems is a complex process that considers product demands from a vast number of viewpoints, roles, responsibilities, and objectives. This chapter explains the requirements engin...","2005","2023-05-07 17:17:24","2023-05-07 17:17:24","2023-05-07 17:17:24","1-20","","","","","","Requirements Engineering","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-59140-506-1.ch001","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IVM29ZLQ","preprint","2014","Turk, Dan; France, Robert; Rumpe, Bernhard","Limitations of Agile Software Processes","","","","10.48550/arXiv.1409.6600","http://arxiv.org/abs/1409.6600","Software developers and project managers are struggling to assess the appropriateness of agile processes to their development environments. This paper identifies limitations that apply to many of the published agile processes in terms of the types of projects in which their application may be problematic.","2014-09-22","2023-05-07 17:17:29","2023-05-07 17:17:29","2023-05-07 17:17:29","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1409.6600 [cs]","","C:\Users\gabra\Zotero\storage\INXTGYP6\Turk et al. - 2014 - Limitations of Agile Software Processes.pdf; C:\Users\gabra\Zotero\storage\P55YFUAA\1409.html","","","Computer Science - Software Engineering","","","","","","","","","","","","","","","","","","","arXiv:1409.6600","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4NRR2S6S","journalArticle","2008","Livermore, Jeffrey A.","Factors that Significantly Impact the Implementation of an Agile Software Development Methodology","Journal of Software","","1796-217X","10.4304/jsw.3.4.31-36","http://www.academypublisher.com/ojs/index.php/jsw/article/view/1943","","2008-04-01","2023-05-07 17:17:53","2023-05-07 17:17:53","2023-05-07 17:17:53","31-36","","4","3","","JSW","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\DCAG6YVA\Livermore - 2008 - Factors that Significantly Impact the Implementati.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UDPSANXS","conferencePaper","2011","Bjarnason, Elizabeth; Wnuk, Krzysztof; Regnell, Björn","Requirements are slipping through the gaps — A case study on causes & effects of communication gaps in large-scale software development","2011 IEEE 19th International Requirements Engineering Conference","","","10.1109/RE.2011.6051639","","Communication is essential for software development as its efficiency throughout the entire project life-cycle is a key factor in developing and releasing successful software products to the market. This paper reports on findings from an explanatory case study aiming at a deeper understanding of the causes and effects of communication gaps in a large-scale industrial set up. Based on an assumption of what causes gaps in communication of requirements and what effects such gaps have, a semi-structured interview study was performed with nine practitioners at a large market-driven software company. We found four main factors that affect the requirements communication, namely scale, temporal aspects, common views and decision structures. The results also show that communication gaps lead to failure to meet the customers' expectations, quality issues and wasted effort. An increased awareness of these factors is a help in identifying what to address to achieve a more efficient requirements management, and ultimately more efficient and successful software development. By closing the communication gaps the requirements may continue all the way through the project life-cycle and be more likely to result in software that meets the customers' expectations.","2011-08","2023-05-07 17:17:55","2023-05-07 17:17:55","","37-46","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\HMAGFLUJ\6051639.html","","","Programming; Software engineering; empirical study; Software; Companies; Interviews; Context; Silicon; explanatory case study; large-scale requirements engineering; requirements communication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2011 IEEE 19th International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"6ZFGXS79","journalArticle","2007","Azar, Jim; Smith, Randy K.; Cordes, David","Value-Oriented Requirements Prioritization in a Small Development Organization","IEEE Software","","1937-4194","10.1109/MS.2007.30","","Requirements engineering, especially requirements prioritization and selection, plays a critical role in overall project development. In small companies, this often difficult process can affect not only project success but also overall company survivability. A value-oriented prioritization (VOP) framework can help this process by clarifying and quantifying the selection and prioritization issues. A case study of a small development company shows a successful VOP deployment that improved communications and saved time by focusing requirements decisions for new product releases on core company values","2007-01","2023-05-07 17:18:01","2023-05-07 17:18:01","","32-37","","1","24","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\3XK9HFBS\4052549.html","","","Programming; Project management; Software development management; software engineering; Decision making; Costs; Marketing and sales; Scheduling; Risk analysis; value-based software engineering; Aerospace testing; Process planning; requirements/specifications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AB4UKT32","conferencePaper","2013","Martini, Antonio; Pareto, Lars; Bosch, Jan","Communication factors for speed and reuse in large-scale agile software development","Proceedings of the 17th International Software Product Line Conference","978-1-4503-1968-3","","10.1145/2491627.2491642","https://doi.org/10.1145/2491627.2491642","An open issue in industry is the combination of software reuse in the context of large scale Agile Software Development. The speed offered by Agile Software Development is needed for short time to market, while reuse strategies such as Software Product Line Engineering are needed for long-term productivity, efficiency, and profit. The paper investigates, through a survey, communication factors affecting both speed and reuse in 3 large companies developing embedded systems and employing Agile Software Development and Software Product Line Engineering. Our results include a prioritized list of communication related factors obtained by statistical analysis and the recognition and spread of the factors in the companies. We have recognized 5 interfaces with the Agile development team that need to be improved: system engineers (architects), product management, distributed teams, inter-project teams and sales unit. Few factors (involving inter-project communication) depend on the business drivers for the company. We also reveal that Agile teams need strategic and architectural inputs in order to be implanted in a large company employing Software Product Line Engineering. Academic and industrial training as well as different tactics for co-location would improve the communication skills of engineers. There is also a need for solutions, in the reference architecture, for fostering Agile Software Development: the goal is the combination of the focus on customer value of the teams, reusability, system requirements and avoidance of organizational dependencies.","2013-08-26","2023-05-07 17:18:04","2023-05-07 17:18:04","2023-05-07","42–51","","","","","","","SPLC '13","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","agile software development; communication; development speed; embedded systems; factors; software process improvement (SPI); software reuse; speed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BHPBM7H6","book","2017","Van Casteren, Wilfred","The Waterfall Model and the Agile Methodologies : A comparison by project characteristics","","","","","","","2017-02-16","2023-05-07 17:18:16","2023-05-07 17:18:16","","","","","","","","The Waterfall Model and the Agile Methodologies","","","","","","","","","","","","ResearchGate","","DOI: 10.13140/RG.2.2.36825.72805","","C:\Users\gabra\Zotero\storage\9KFGZX3K\Van Casteren - 2017 - The Waterfall Model and the Agile Methodologies  .pdf; ","https://www.researchgate.net/profile/Wilfred-Van-Casteren/publication/313768756_The_Waterfall_Model_and_the_Agile_Methodologies_A_comparison_by_project_characteristics/links/58bec1a6a6fdcc7bd45e8418/The-Waterfall-Model-and-the-Agile-Methodologies-A-comparison-by-project-characteristics.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6E3M4FM3","book","2006","Haralambos, Mouratidis; Paolo, Giorgini","Integrating Security and Software Engineering: Advances and Future Visions: Advances and Future Visions","","978-1-59904-149-0","","","","Integrating Security and Software Engineering: Advances and Future Visions provides the first step towards narrowing the gap between security and software engineering. This book introduces the field of secure software engineering, which is a branch of research investigating the integration of security concerns into software engineering practices.Integrating Security and Software Engineering: Advances and Future Visions discusses problems and challenges of considering security during the development of software systems, and also presents the predominant theoretical and practical approaches that integrate security and software engineering.","2006-08-31","2023-05-07 17:18:39","2023-05-07 17:18:39","","","299","","","","","Integrating Security and Software Engineering","","","","","Idea Group Inc (IGI)","","en","","","","","Google Books","","Google-Books-ID: Ohn31ygnrNkC","","","https://books.google.co.in/books?id=Ohn31ygnrNkC","","Computers / Software Development & Engineering / General; Computers / General; Computers / Security / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Q3WHGNM3","journalArticle","2012","Kumar, Gaurav; Bhatia, Pradeep","Impact of Agile Methodology on Software Development Process","International Journal of Computer Technology and Electronics Engineering (IJCTEE)","","","","","Abstract – Agile methodology that utilizes iterative development and prototyping are widely used in variety of industry projects as a light weight development method which can satisfy to the changes of requirements. Short iterations are used that are required for efficient product delivery. Traditional software development processes are not much efficient to manage the rapid change in requirements. Despite the advantages of Agile, criticism on agile methodology states that it fails to pay attention to architectural and design issues and therefore is bound to produce small design-decisions. Here, in this paper we identify the impacts that agile methodology has on software development processes with respect to quality within the organizational, methodical, and cultural framework.","2012-08-01","2023-05-07 17:19:42","2023-05-07 17:19:42","","2249-6343","","","2","","International Journal of Computer Technology and Electronics Engineering (IJCTEE)","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\T4MAEL2I\Kumar and Bhatia - 2012 - Impact of Agile Methodology on Software Developmen.pdf; ","https://www.researchgate.net/profile/Gaurav-Kumar-175/publication/255707851_Impact_of_Agile_Methodology_on_Software_Development_Process/links/00b49520489442e12d000000/Impact-of-Agile-Methodology-on-Software-Development-Process.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AGXXMCH3","journalArticle","2018","Gill, Asif Qumer; Henderson-Sellers, Brian; Niazi, Mahmood","Scaling for agility: A reference model for hybrid traditional-agile software development methodologies","Information Systems Frontiers","","1572-9419","10.1007/s10796-016-9672-8","https://doi.org/10.1007/s10796-016-9672-8","The adoption of agility at a large scale often requires the integration of agile and non-agile development elements for architecting a hybrid adaptive methodology. The challenge is ”which elements or components (agile or non-agile) are relevant to develop the context-aware hybrid adaptive methodology reference architecture?” This paper addresses this important challenge and develops a hybrid adaptive methodology reference architecture model using a qualitative constructive empirical research approach. In this way, we have uncovered the agility, abstraction, business value, business policy, rules, legal, context and facility elements or components that have not been explicitly modelled or discussed in International Standards (IS) such as the ISO/IEC 24744 metamodel. It is anticipated that a context-aware hybrid adaptive methodology can be architected by using the proposed context-aware hybrid adaptive methodology reference architecture elements for a particular situation when using a situational method engineering approach.","2018-04-01","2023-05-07 17:19:52","2023-05-07 17:19:52","2023-05-07 17:19:52","315-341","","2","20","","Inf Syst Front","Scaling for agility","","","","","","","en","","","","","Springer Link","","","","","","","Agile methods; Method engineering; Methodology architecture; Reference architecture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J4UGGFEH","journalArticle","2011","Hajjdiab, Hassan; Taleb, Al","Adopting Agile Software Development: Issues and Challenges","International Journal of Managing Value and Supply Chains","","","10.5121/ijmvsc.2011.2301","","In the recent few years more and more software development organizations are striving to adopt agile software development methods and techniques. Successful agile adoption leads to producing higher quality software, enhance developers moraland at a lower cost than the traditional water wall model approach. However, Agile adoption always comes with special challenges and accordingly, fundamental organizational changes are necessary for successful outcome. The main contribution of this paper is that we present a case study for agile adoption case in a government entity in the U.A.E and we compare and analyze the outcomesobtained with other published case studies in this domain.","2011-09-30","2023-05-07 17:19:58","2023-05-07 17:19:58","","1-10","","","2","","International Journal of Managing Value and Supply Chains","Adopting Agile Software Development","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\BQ7LXK2I\Hajjdiab and Taleb - 2011 - Adopting Agile Software Development Issues and Ch.pdf; ","https://www.researchgate.net/profile/Hassan-Hajjdiab/publication/276198893_Adopting_Agile_Software_Development_Issues_and_Challenges/links/5859000808ae64cb3d490d40/Adopting-Agile-Software-Development-Issues-and-Challenges.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X5XY89N3","bookSection","2005","Aurum, Aybüke; Wohlin, Claes","Requirements Engineering: Setting the Context","Engineering and Managing Software Requirements","978-3-540-28244-0","","","https://doi.org/10.1007/3-540-28244-0_1","This chapter presents a brief overview of requirements engineering and provides an introduction to some of the critical aspects of this field. This includes offering and understanding of the different levels of requirements involved in requirements engineering, namely organizational, product and project level requirements, and illustrating the role of different stakeholders in requirements engineering. The chapter also aims to demonstrate how the three parts of this book are interrelated.","2005","2023-05-07 17:20:05","2023-05-07 17:20:05","2023-05-07 17:20:05","1-15","","","","","","Requirements Engineering","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/3-540-28244-0_1","","","","","Requirements management; Stakeholders; Business requirements; Product requirements; Project requirements; Requirements taxonomy","Aurum, Aybüke; Wohlin, Claes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VVNLF4SU","journalArticle","2011","Díaz, Jessica; Pérez, Jennifer; Alarcón, Pedro P.; Garbajosa, Juan","Agile product line engineering—a systematic literature review","Software: Practice and Experience","","1097-024X","10.1002/spe.1087","https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.1087","Software Product Line Engineering (SPLE) demands upfront long-term investment in (i) designing a common set of core-assets and (ii) managing variability across the products from the same family. When anticipated changes in these core-assets have been predicted with certain accuracy, SPLE has proved significant improvements. However, when large/complex software product line projects have to deal with changing market conditions, alternatives to supplement SPLE are required. Agile Software Development (ASD) may be an alternative, as agile processes harness change for the customer's competitive advantage. However, when the aim is to scale Agile projects up to effectively manage reusability and variability across the products from the same family, alternatives to supplement agility are also required. As a result, a new approach called Agile Product Line Engineering (APLE) advocates integrating SPLE and ASD with the aim of addressing these gaps. APLE is an emerging approach, which implies that organizations have to face several barriers to achieve its adoption. This paper presents a systematic literature review of experiences and practices on APLE, in which the key findings uncover important challenges about how to integrate the SPLE model with an agile iterative approach to fully put APLE into practice. Copyright © 2011 John Wiley & Sons, Ltd.","2011","2023-05-07 17:20:12","2023-05-07 17:20:12","2023-05-07 17:20:12","921-941","","8","41","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.1087","","C:\Users\gabra\Zotero\storage\RZMIEI5E\spe.html","","","agile software development; systematic literature review; agile product line engineering (APLE); software product line engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"URG4B4FG","journalArticle","2019","Klotins, Eriks; Unterkalmsteiner, Michael; Gorschek, Tony","Software engineering in start-up companies: An analysis of 88 experience reports","Empirical Software Engineering","","1573-7616","10.1007/s10664-018-9620-y","https://doi.org/10.1007/s10664-018-9620-y","Start-up companies have become an important supplier of innovation and software-intensive products. The flexibility and reactiveness of start-ups enables fast development and launch of innovative products. However, a majority of software start-up companies fail before achieving any success. Among other factors, poor software engineering could be a significant contributor to the challenges experienced by start-ups. However, the state-of-practice of software engineering in start-ups, as well as the utilization of state-of-the-art is largely an unexplored area.","2019-02-01","2023-05-07 17:20:24","2023-05-07 17:20:24","2023-05-07 17:20:24","68-102","","1","24","","Empir Software Eng","Software engineering in start-up companies","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\TKWHBCD9\Klotins et al. - 2019 - Software engineering in start-up companies An ana.pdf","","","Experience reports; Software engineering practices; Software start-up","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"APLPMFQI","journalArticle","2017","Anwer, Faiza; Aftab, Shabib; Waheed, Usman; Muhammad, Syed Shah","Agile Software Development Models TDD, FDD, DSDM, and Crystal Methods: A Survey","","","","","","Software development is a critical task that requires a detailed and well-structured guideline in the form of software development process model. A good software development process model can play very important role in developing high quality software. Traditional software development models like Water fall, RUP, V-Model and Spiral Model remained dominant in software industry for a long time but to cope with growing needs and technology change in software industry, software developers tried to explore more improved software development models that lead to advent of agile development models. Agile models were warmly welcomed by software community because of their focus towards customer satisfaction, changing requirements and early software delivery. This paper provides a comprehensive review of different agile models which are used in software industry.","2017","2023-05-07 17:20:25","2023-05-07 17:20:25","","","","2","8","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\AQWBJY6F\Anwer et al. - 2017 - Agile Software Development Models TDD, FDD, DSDM, .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Q9LYC9AU","journalArticle","2014","Othmane, Lotfi ben; Angin, Pelin; Weffers, Harold; Bhargava, Bharat","Extending the Agile Development Process to Develop Acceptably Secure Software","IEEE Transactions on Dependable and Secure Computing","","1941-0018","10.1109/TDSC.2014.2298011","","The agile software development approach makes developing secure software challenging. Existing approaches for extending the agile development process, which enables incremental and iterative software development, fall short of providing a method for efficiently ensuring the security of the software increments produced at the end of each iteration. This article (a) proposes a method for security reassurance of software increments and demonstrates it through a simple case study, (b) integrates security engineering activities into the agile software development process and uses the security reassurance method to ensure producing acceptably secure-by the business owner-software increments at the end of each iteration, and (c) discusses the compliance of the proposed method with the agile values and its ability to produce secure software increments.","2014-11","2023-05-07 17:20:28","2023-05-07 17:20:28","","497-509","","6","11","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Dependable and Secure Computing","","C:\Users\gabra\Zotero\storage\8D2M7N6M\Othmane et al. - 2014 - Extending the Agile Development Process to Develop.pdf; C:\Users\gabra\Zotero\storage\JU5SDTSD\6702438.html","","","Agile software development; Variable speed drives; Software development; Computer security; Encoding; Logic gates; secure software; security assurance cases; Software assurance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C4ZRHJB3","journalArticle","2018","Ambreen, Talat; Ikram, Naveed; Usman, Muhammad; Niazi, Mahmood","Empirical research in requirements engineering: trends and opportunities","Requirements Engineering","","1432-010X","10.1007/s00766-016-0258-2","https://doi.org/10.1007/s00766-016-0258-2","Requirements engineering (RE) being a foundation of software development has gained a great recognition in the recent era of prevailing software industry. A number of journals and conferences have published a great amount of RE research in terms of various tools, techniques, methods, and frameworks, with a variety of processes applicable in different software development domains. The plethora of empirical RE research needs to be synthesized to identify trends and future research directions. To represent a state-of-the-art of requirements engineering, along with various trends and opportunities of empirical RE research, we conducted a systematic mapping study to synthesize the empirical work done in RE. We used four major databases IEEE, ScienceDirect, SpringerLink and ACM and Identified 270 primary studies till the year 2012. An analysis of the data extracted from primary studies shows that the empirical research work in RE is on the increase since the year 2000. The requirements elicitation with 22 % of the total studies, requirements analysis with 19 % and RE process with 17 % are the major focus areas of empirical RE research. Non-functional requirements were found to be the most researched emerging area. The empirical work in the sub-area of requirements validation and verification is little and has a decreasing trend. The majority of the studies (50 %) used a case study research method followed by experiments (28 %), whereas the experience reports are few (6 %). A common trend in almost all RE sub-areas is about proposing new interventions. The leading intervention types are guidelines, techniques and processes. The interest in RE empirical research is on the rise as whole. However, requirements validation and verification area, despite its recognized importance, lacks empirical research at present. Furthermore, requirements evolution and privacy requirements also have little empirical research. These RE sub-areas need the attention of researchers for more empirical research. At present, the focus of empirical RE research is more about proposing new interventions. In future, there is a need to replicate existing studies as well to evaluate the RE interventions in more real contexts and scenarios. The practitioners’ involvement in RE empirical research needs to be increased so that they share their experiences of using different RE interventions and also inform us about the current requirements-related challenges and issues that they face in their work.","2018-03-01","2023-05-07 17:23:32","2023-05-07 17:23:32","2023-05-07 17:23:32","63-95","","1","23","","Requirements Eng","Empirical research in requirements engineering","","","","","","","en","","","","","Springer Link","","","","","","","Systematic review; Requirements engineering; Mapping study; Evidence-based software engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"98X8QKSU","journalArticle","2010","Li, Chen; van den Akker, Marjan; Brinkkemper, Sjaak; Diepen, Guido","An integrated approach for requirement selection and scheduling in software release planning","Requirements Engineering","","1432-010X","10.1007/s00766-010-0104-x","https://doi.org/10.1007/s00766-010-0104-x","It is essential for product software companies to decide which requirements should be included in the next release and to make an appropriate time plan of the development project. Compared to the extensive research done on requirement selection, very little research has been performed on time scheduling. In this paper, we introduce two integer linear programming models that integrate time scheduling into software release planning. Given the resource and precedence constraints, our first model provides a schedule for developing the requirements such that the project duration is minimized. Our second model combines requirement selection and scheduling, so that it not only maximizes revenues but also simultaneously calculates an on-time-delivery project schedule. Since requirement dependencies are essential for scheduling the development process, we present a more detailed analysis of these dependencies. Furthermore, we present two mechanisms that facilitate dynamic adaptation for over-estimation or under-estimation of revenues or processing time, one of which includes the Scrum methodology. Finally, several simulations based on real-life data are performed. The results of these simulations indicate that requirement dependency can significantly influence the requirement selection and the corresponding project plan. Moreover, the model for combined requirement selection and scheduling outperforms the sequential selection and scheduling approach in terms of efficiency and on-time delivery.","2010-11-01","2023-05-07 17:23:43","2023-05-07 17:23:43","2023-05-07 17:23:43","375-396","","4","15","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\SZLY282E\Li et al. - 2010 - An integrated approach for requirement selection a.pdf","","","Scrum; Release planning; Requirement dependency; Integer linear programming (ILP); Requirement scheduling; Requirement selection; Simulation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MIETAQQ4","preprint","2010","Shrivastava, Suprika Vasudeva; Date, Hema","Distributed Agile Software Development: A Review","","","","10.48550/arXiv.1006.1955","http://arxiv.org/abs/1006.1955","Distribution of software development is becoming more and more common in order to save the production cost and reduce the time to market. Large geographical distance, different time zones and cultural differences in distributed software development (DSD) leads to weak communication which adversely affects the project. Using agile practices for distributed development is also gaining momentum in various organizations to increase the quality and performance of the project. This paper explores the intersection of these two significant trends for software development i.e. DSD and agile. We discuss the challenges faced by geographically distributed agile teams and proven practices to address these issues, which will help in building a successful distributed team.","2010-06-10","2023-05-07 17:23:48","2023-05-07 17:23:48","2023-05-07 17:23:48","","","","","","","Distributed Agile Software Development","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1006.1955 [cs]","","C:\Users\gabra\Zotero\storage\SB54HE3U\Shrivastava and Date - 2010 - Distributed Agile Software Development A Review.pdf; C:\Users\gabra\Zotero\storage\IZR9RPUL\1006.html","","","Computer Science - Software Engineering","","","","","","","","","","","","","","","","","","","arXiv:1006.1955","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7PPC5WWA","journalArticle","2015","Selleri Silva, Fernando; Soares, Felipe Santana Furtado; Peres, Angela Lima; Azevedo, Ivanildo Monteiro de; Vasconcelos, Ana Paula L. F.; Kamei, Fernando Kenji; Meira, Silvio Romero de Lemos","Using CMMI together with agile software development: A systematic review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.09.012","https://www.sciencedirect.com/science/article/pii/S0950584914002110","Background The search for adherence to maturity levels by using lightweight processes that require low levels of effort is regarded as a challenge for software development organizations. Objective This study seeks to evaluate, synthesize, and present results on the use of the Capability Maturity Model Integration (CMMI) in combination with agile software development, and thereafter to give an overview of the topics researched, which includes a discussion of their benefits and limitations, the strength of the findings, and the implications for research and practice. Methods The method applied was a Systematic Literature Review on studies published up to (and including) 2011. Results The search strategy identified 3193 results, of which 81 included studies on the use of CMMI together with agile methodologies. The benefits found were grouped into two main categories: those related to the organization in general and those related to the development process, and were organized into subcategories, according to the area to which they refer. The limitations were also grouped into these categories. Using the criteria defined, the strength of the evidence found was considered low. The implications of the results for research and practice are discussed. Conclusion Agile methodologies can be used by companies to reduce efforts in getting to levels 2 and 3 of CMMI, there even being reports of applying agile practices that led to achieving level 5. However, agile methodologies alone, according to the studies, were not sufficient to obtain a rating at a given level, it being necessary to resort to additional practices to do so.","2015-02-01","2023-05-07 17:23:51","2023-05-07 17:23:51","2023-05-07 17:23:51","20-43","","","58","","Information and Software Technology","Using CMMI together with agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\E9MK5UA4\S0950584914002110.html","","","Systematic review; Agile methodology; Software process improvement; Benefits; CMMI; Limitations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Y9WXFIS3","journalArticle","2022","Ansari, Md Tarique Jamal; Pandey, Dhirendra; Alenezi, Mamdouh","STORE: Security Threat Oriented Requirements Engineering Methodology","Journal of King Saud University - Computer and Information Sciences","","1319-1578","10.1016/j.jksuci.2018.12.005","https://www.sciencedirect.com/science/article/pii/S1319157818306876","As we are continuously depending on information technology applications by adopting electronic channels and software applications for our business, online transaction and communication, software security is increasingly becoming a necessity and more advanced concern. Both the functional and non-functional requirements are important and provide the necessary needs at the early phases of the software development process, specifically in the requirement phase. The aim of this research is to identify security threats early in the software development process to help the requirement engineer elicit appropriate security requirements in a more systematic manner throughout the requirement engineering process to ensure a secure and quality software development. This article proposes the STORE methodology for security requirement elicitation based on security threats analysis, which includes the identification of four points: PoA, PoB, PoC and PoD for effective security attack analysis. Further, the proposed STORE methodology is also validated by a case study of an ERP System. We also compare our STORE methodology with two existing techniques, namely, SQUARE and MOSRE. We have shown that more effective and efficient security requirements can be elicited by the STORE methodology and that it helps the security requirement engineer to elicit security requirements in a more organized manner.","2022-02-01","2023-05-07 17:24:15","2023-05-07 17:24:15","2023-05-07 17:24:15","191-203","","2","34","","Journal of King Saud University - Computer and Information Sciences","STORE","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\9GDYW36Y\Ansari et al. - 2022 - STORE Security Threat Oriented Requirements Engin.pdf; C:\Users\gabra\Zotero\storage\X649BMM6\S1319157818306876.html","","","Software security; Security requirements engineering; Security attack analysis; Security requirements elicitation; Threat modeling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FY54MZLV","journalArticle","2012","Misra, Subhas; Kumar, Vinod; Kumar, Uma; Fantazy, Kamel; Akhter, Mahmud","Agile software development practices: evolution, principles, and criticisms","International Journal of Quality & Reliability Management","","0265-671X","10.1108/02656711211272863","https://doi.org/10.1108/02656711211272863","Purpose – Agile software development is an emerging approach in software engineering, initially proposed and promoted by a group of 17 software professionals who practice a set of “lightweight” methods, and share a common set of values of software development. They consolidated their thoughts, and defined these methods as “agile”. The approaches are based on experiences and best practices from the past by the above‐mentioned group of 17 software professionals. The purpose of this article is to outline the history and evolution of agile software development practices, their principles, and the criticisms as reported by the software development community. Design/methodology/approach – A comprehensive literature review was undertaken to do this research. Findings – Based on the literature review, this paper provides a comprehensive document that helps the practitioners working in the area of the agile software development. Originality/value – This article will provide comprehensive material for the researchers in the area of agile software development. It will also be very useful for the practitioners practicing software development in the area of agile software development.","2012-01-01","2023-05-07 17:24:19","2023-05-07 17:24:19","2023-05-07 17:24:19","972-980","","9","29","","","Agile software development practices","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Group Publishing Limited","","C:\Users\gabra\Zotero\storage\KJDGJLG5\html.html","","","Software engineering; Software; Agile; Criticisms; Development; Evolution; Principles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"H52YTMBB","conferencePaper","2023","Alsharari, Abdullah Sabih; Wan Zainon, Wan Mohd Nazmee; Letchmunan, Sukumar; Mohammed, Badiea Abdulkarem; Alsharari, Mohammed Sabih","A Review of Agile Methods for Requirement Change Management in Web Engineering","2023 International Conference on Smart Computing and Application (ICSCA)","","","10.1109/ICSCA57840.2023.10087734","","Web-based systems are essential in many different applications, which makes web-based development different from traditional software development. The agile methodology has gained lots of popularity in the last 15 years and become very traditional and acceptable widely among software engineers; nevertheless, the use of agile methods has extended to cover other areas of software engineering field including Requirement Engineering (RE) that fit the need of web engineering. The pace of the current web's software development is fast and dynamic such that the changes of the requirements during software development and after turning to production phase are possible and recurrent. Therefore, agile software engineering conceptuality has evolved as an adequate approach to overcome changes in the web's software's requirements; due to frequent changes in requirements, web engineers call for help of agile software engineering methods, which strive to truly manage changes in requirements rather than preventing these changes. This paper provides a review on the available agile methodologies that used to assess requirement change management in web engineering.","2023-02","2023-05-07 17:24:24","2023-05-07 17:24:24","","1-9","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\4BU6HCHY\Alsharari et al. - 2023 - A Review of Agile Methods for Requirement Change M.pdf; C:\Users\gabra\Zotero\storage\WS676RW8\10087734.html","","","Software Engineering; Agile Methodologies; Engineering; Requirement Change Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2023 International Conference on Smart Computing and Application (ICSCA)","","","","","","","","","","","","","","",""
"CSZFXEZS","journalArticle","2008","Chow, Tsun; Cao, Dac-Buu","A survey study of critical success factors in agile software projects","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2007.08.020","https://www.sciencedirect.com/science/article/pii/S0164121207002208","While software is so important for all facets of the modern world, software development itself is not a perfect process. Agile software engineering methods have recently emerged as a new and different way of developing software as compared to the traditional methodologies. However, their success has mostly been anecdotal, and research in this subject is still scant in the academic circles. This research study was a survey study on the critical success factors of Agile software development projects using quantitative approach. Based on existing literature, a preliminary list of potential critical success factors of Agile projects were identified and compiled. Subsequently, reliability analysis and factor analysis were conducted to consolidate this preliminary list into a final set of 12 possible critical success factors for each of the four project success categories – Quality, Scope, Time, and Cost. A survey was conducted among Agile professionals, gathering survey data from 109 Agile projects from 25 countries across the world. Multiple regression techniques were used, both at the full regression model and at the optimized regression model via the stepwise screening procedure. The results revealed that only 10 out of 48 hypotheses were supported, identifying three critical success factors for Agile software development projects: (a) Delivery Strategy, (b) Agile Software Engineering Techniques, and (c) Team Capability. Limitations of the study are discussed together with interpretations for practitioners. To ensure success of their projects, managers are urged to focus on choosing a high-caliber team, practicing Agile engineering techniques and following Agile-style delivery strategy.","2008-06-01","2023-05-07 17:24:26","2023-05-07 17:24:26","2023-05-07 17:24:26","961-971","","6","81","","Journal of Systems and Software","","Agile Product Line Engineering","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\LLTBHVFD\S0164121207002208.html","","","Agile methods; Software development; Critical success factors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V8YBN3KZ","journalArticle","2014","Korkala, Mikko; Maurer, Frank","Waste identification as the means for improving communication in globally distributed agile software development","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2014.03.080","https://www.sciencedirect.com/science/article/pii/S0164121214001009","Agile approaches highly values communication between team members to improve software development processes, even though, communication in globally distributed agile teams can be difficult. Literature proposes solutions for mitigating the challenges encountered in these environments. These solutions range from general-level recommendations and practices to the use of communication tools. However, an approach covering the whole development process for identifying challenges, and improving communication in globally distributed agile development projects, is missing. In order to address this, we conducted a case study within a globally distributed agile software development project focused on using the concept of waste as a lens for identifying non-value producing communication elements. In order to achieve this, we constructed a waste identification approach through which we identified five communication wastes, and solutions to mitigate them. These wastes can help companies identify communication issues that are present in their development efforts, while the presented waste identification technique gives them a mechanism for waste identification and mitigation. This work contributes to the scientific community by increasing the knowledge about communication in globally distributed agile development efforts.","2014-09-01","2023-05-07 17:24:31","2023-05-07 17:24:31","2023-05-07 17:24:31","122-140","","","95","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\968KQ82J\S0164121214001009.html","","","Communication; Distributed agile software development; Lean software development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SJZ7ANHQ","conferencePaper","2014","Fitzgerald, Brian; Stol, Klaas-Jan","Continuous software engineering and beyond: trends and challenges","Proceedings of the 1st International Workshop on Rapid Continuous Software Engineering","978-1-4503-2856-2","","10.1145/2593812.2593813","https://doi.org/10.1145/2593812.2593813","Throughout its short history, software development has been characterized by harmful disconnects between important activities e.g., planning, development and implementation. The problem is further exacerbated by the episodic and infrequent performance of activities such as planning, testing, integration and releases. Several emerging phenomena reflect attempts to address these problems. For example, the Enterprise Agile concept has emerged as a recognition that the benefits of agile software development will be sub- optimal if not complemented by an agile approach in related organizational function such as finance and HR. Continuous integration is a practice which has emerged to eliminate discontinuities between development and deployment. In a similar vein, the recent emphasis on DevOps recognizes that the integration between software development and its operational deployment needs to be a continuous one. We argue a similar continuity is required between business strategy and development, BizDev being the term we coin for this. These disconnects are even more problematic given the need for reliability and resilience in the complex and data-intensive systems being developed today. Drawing on the lean concept of flow, we identify a number of continuous activities which are important for software development in today’s context. These activities include continuous planning, continuous integration, continuous deployment, continuous delivery, continuous verification, continuous testing, continuous compliance,continuous security, continuous use, continuous trust, continuous run-time monitoring, continuous improvement (both process and product), all underpinned by continuous innovation. We use the umbrella term, ``Continuous *'' (continuous star) to identify this family of continuous activities.","2014-06-03","2023-05-07 17:27:16","2023-05-07 17:27:16","2023-05-07","1–9","","","","","","Continuous software engineering and beyond","RCoSE 2014","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\INIGS6WV\Fitzgerald and Stol - 2014 - Continuous software engineering and beyond trends.pdf","","","BizDev; continuous software engineering; Continuous Star; DevOps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JVGVZ7QI","conferencePaper","2004","Huo, Ming; Verner, J.; Zhu, Liming; Babar, M.A.","Software quality and agile methods","Proceedings of the 28th Annual International Computer Software and Applications Conference, 2004. COMPSAC 2004.","","","10.1109/CMPSAC.2004.1342889","","Agile methods may produce software faster but we also need to know how they meet our quality requirements. In this paper we compare the waterfall model with agile processes to show how agile methods achieve software quality under time pressure and in an unstable requirements environment, i.e. we analyze agile software quality assurance. We present a detailed waterfall model showing its software quality support processes. We then show the quality practices that agile methods have integrated into their processes. This allows us to answer the question ""can agile methods ensure quality even though they develop software faster and can handle unstable requirements?"".","2004-09","2023-05-07 17:27:33","2023-05-07 17:27:33","","520-525 vol.1","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 0730-3157","","C:\Users\gabra\Zotero\storage\3VVQLY9Q\Huo et al. - 2004 - Software quality and agile methods.pdf; C:\Users\gabra\Zotero\storage\TKNGS4VL\1342889.html","","","Programming; Software quality; Collaboration; Software engineering; Application software; Computer applications; Australia; Quality assurance; Continuous improvement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the 28th Annual International Computer Software and Applications Conference, 2004. COMPSAC 2004.","","","","","","","","","","","","","","",""
"4JVJPGKJ","journalArticle","2016","Yaseen, Muhammad; Ali, Sikandar; ., Abullah; Ullah, Naeem","An Improved Framework for Requirement Implementation in the context of Global Software Development: A Systematic Literature Review Protocol","International Journal of Database Theory and Application","","20054270, 20054270","10.14257/ijdta.2016.9.6.16","http://article.nadiapub.com/IJDTA/vol9_no6/16.pdf","Context: Global Software Development (GSD) is the software development across the globe in which stakeholders are related to different countries and cultures, and they communicate each other by emails, fax, mobile, videoconferencing or any other communicating media. There are a lot of problems in implementing requirement engineering process for global software development. There is a need of requirement implementation model which guides us how to implement successfully requirement engineering in the context of GSD.","2016-06-30","2023-05-07 17:27:33","2023-05-07 17:27:35","2023-05-07 17:27:33","161-170","","6","9","","IJDTA","An Improved Framework for Requirement Implementation in the context of Global Software Development","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\AWQUYH6B\Yaseen et al. - 2016 - An Improved Framework for Requirement Implementati.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4VYJLFWN","conferencePaper","2005","Coram, M.; Bohner, S.","The impact of agile methods on software project management","12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems (ECBS'05)","","","10.1109/ECBS.2005.68","","As more and more software projects engage agile methods, there are emerging patterns of success and failure. With growing adoption of agile methods, project managers increasingly need to understand the applicability to their projects and factors that drive key project performance characteristics. While some organizations affirm that agile methods solve all their problems, few have shown consistent success over a range of typical software projects. Agile methods have advantages, especially in accommodating change due to volatile requirements. However, they also present concomitant risks with managing the many dependent pieces of work distributed across a large project. Use of agile methods therefore presents a set of tradeoffs. This paper examines the impact of agile methods on the people involved in a project, the process under which a project is developed, and on the project itself in an attempt to allow project managers to evaluate the applicability using an agile method.","2005-04","2023-05-07 17:27:40","2023-05-07 17:27:40","","363-370","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Project management; Software engineering; Costs; Computer science; Dynamic programming; Risk management; Circuit testing; Disaster management; Integrated circuit measurements; Steel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems (ECBS'05)","","","","","","","","","","","","","","",""
"293PT5GG","journalArticle","2010","Winkler, Stefan; von Pilgrim, Jens","A survey of traceability in requirements engineering and model-driven development","Software & Systems Modeling","","1619-1374","10.1007/s10270-009-0145-0","https://doi.org/10.1007/s10270-009-0145-0","Traceability—the ability to follow the life of software artifacts—is a topic of great interest to software developers in general, and to requirements engineers and model-driven developers in particular. This article aims to bring those stakeholders together by providing an overview of the current state of traceability research and practice in both areas. As part of an extensive literature survey, we identify commonalities and differences in these areas and uncover several unresolved challenges which affect both domains. A good common foundation for further advances regarding these challenges appears to be a combination of the formal basis and the automated recording opportunities of MDD on the one hand, and the more holistic view of traceability in the requirements engineering domain on the other hand.","2010-09-01","2023-05-07 17:27:41","2023-05-07 17:27:41","2023-05-07 17:27:41","529-565","","4","9","","Softw Syst Model","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Traceability; Model-driven development; Model-driven engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AXFVLAGU","webpage","","","Home:YASHADA","","","","","https://www.yashada.org/yashada_2019/","","","2023-05-07 17:27:46","2023-05-07 17:27:46","2023-05-07 17:27:46","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\MXMLDTQV\yashada_2019.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TTVU6F7F","conferencePaper","2010","Jalali, Samireh; Wohlin, Claes","Agile Practices in Global Software Engineering - A Systematic Map","2010 5th IEEE International Conference on Global Software Engineering","","","10.1109/ICGSE.2010.14","","This paper presents the results of systematically reviewing the current research literature on the use of agile practices and lean software development in global software engineering (GSE). The primary purpose is to highlight under which circumstances they have been applied efficiently. Some common terms related to agile practices (e.g. scrum, extreme programming) were considered in formulating the search strings, along with a number of alternatives for GSE such as offshoring, outsourcing, and virtual teams. The results were limited to peer-reviewed conference papers/journal articles, published between 1999 and 2009. The synthesis was made through classifying the papers into different categories (e.g. research type, distribution). The analysis revealed that in most cases agile practices were modified with respect to the context and situational requirements. This indicates the need for future research on how to integrate all experiences and practices in a way to assist practitioners when setting up non-collocated agile projects.","2010-08","2023-05-07 17:27:51","2023-05-07 17:27:51","","45-54","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2329-6313","","C:\Users\gabra\Zotero\storage\QJZB9LXR\Jalali and Wohlin - 2010 - Agile Practices in Global Software Engineering - A.pdf","","","Programming; Software engineering; scrum; agile; Systematics; Context; global software development; Guidelines; Data mining; extreme programming; lean software development; Book reviews; distributed team; global software engineering; offshore; open source; outsource; pair programming; systematic map; virtual team","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 5th IEEE International Conference on Global Software Engineering","","","","","","","","","","","","","","",""
"MCPMLA6G","journalArticle","2003","Theunissen, W H Morkel; Kourie, Derrick G; Watson, Bruce W","Standards and Agile Software Development","","","","","","","2003","2023-05-07 17:27:52","2023-05-07 17:27:52","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\DF86CNVT\Theunissen et al. - 2003 - Standards and Agile Software Development.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UDU6FW8L","conferencePaper","2014","Scheerer, Alexander; Hildenbrand, Tobias; Kude, Thomas","Coordination in Large-Scale Agile Software Development: A Multiteam Systems Perspective","2014 47th Hawaii International Conference on System Sciences","","","10.1109/HICSS.2014.587","","The widespread use of lean and agile development methods shows a fundamental shift in how organizations try to cope with complexity and volatility issues. In large-scale settings, the coordination of many people often results in a team of teams setup. We introduce the multiteam systems perspective to describe different conceptual strategy types for inter-team coordination. These types are illustrated with examples from a large enterprise software development organization.","2014-01","2023-05-07 17:29:27","2023-05-07 17:29:27","","4780-4788","","","","","","Coordination in Large-Scale Agile Software Development","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1605","","C:\Users\gabra\Zotero\storage\WXADRSTA\Scheerer et al. - 2014 - Coordination in Large-Scale Agile Software Develop.pdf; C:\Users\gabra\Zotero\storage\W3ZHI3HC\6759189.html","","","Software; Planning; Cognition; Context; Organizations; Complexity theory; Standards organizations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 47th Hawaii International Conference on System Sciences","","","","","","","","","","","","","","",""
"5PL8J6R2","journalArticle","2013","Gandomani","OBSTACLES IN MOVING TO AGILE SOFTWARE DEVELOPMENT METHODS; AT A GLANCE","Journal of Computer Science","","1549-3636","10.3844/jcssp.2013.620.625","http://thescipub.com/abstract/10.3844/jcssp.2013.620.625","It is only less than a decade that agile SD methods were introduced and got popular steadily. The defined values in these methods and their outcomes have motivated many software producers to use these methods. Since migration from traditional software development methods to agile methods is growing highly, managers of the companies should be aware of problems, hindrances and challenges they may face with during the agile transformation process. This study focused on challenges which companies may face with and it is necessary that managers think about solving them. Classifying them into four main categories; organization and management, people, process and tools are the areas that challenges have been seen in recent studies.","2013-05-01","2023-05-07 17:29:28","2023-05-07 17:29:28","2023-05-07 17:29:28","620-625","","5","9","","Journal of Computer Science","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\JG4EZ2EI\Gandomani - 2013 - OBSTACLES IN MOVING TO AGILE SOFTWARE DEVELOPMENT .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"29FUSX7M","conferencePaper","2012","Collins, Eliane; Dias-Neto, Arilo; Lucena Jr., Vicente F. de","Strategies for Agile Software Testing Automation: An Industrial Experience","2012 IEEE 36th Annual Computer Software and Applications Conference Workshops","","","10.1109/COMPSACW.2012.84","","Testing Automation has been growing in software engineering. Many organizations are investing in automated testing in order to prevent defects and increase testing effectiveness during software development. In agile methodologies, this task is considered an important activity, considered the key of the agile testing. This paper presents three testing automation strategies applied to three different software projects adopting Scrum agile methodology. The results indicated positive agile practices to be considered when adopting testing automation strategy, such as: team collaboration, task distribution, testing tools, knowledge managements. The challenges, results, and lessons learned from this experience are also discussed.","2012-07","2023-05-07 17:29:33","2023-05-07 17:29:33","","440-445","","","","","","Strategies for Agile Software Testing Automation","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\DPC96TBG\6341616.html","","","Collaboration; Software; Testing; Automation; Business; Graphical user interfaces; software testing; agile testing; Manuals; open source testing tools; testing automation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 IEEE 36th Annual Computer Software and Applications Conference Workshops","","","","","","","","","","","","","","",""
"CQCY98R9","book","2016","Braude, Eric J.; Bernstein, Michael E.","Software Engineering: Modern Approaches, Second Edition","","978-1-4786-3303-7","","","","Today’s software engineer must be able to employ more than one kind of  software process, ranging from agile methodologies to the waterfall  process, from highly integrated tool suites to refactoring and loosely  coupled tool sets. Braude and Bernstein’s thorough coverage of software  engineering perfects the reader’s ability to efficiently create reliable  software systems, designed to meet the needs of a variety of customers.  Topical highlights . . . • Process: concentrates on how applications are planned and developed • Design: teaches software engineering primarily as a requirements-to-design activity • Programming and agile methods: encourages software engineering as a code-oriented activity • Theory and principles: focuses on foundations • Hands-on projects and case studies: utilizes active team or individual  project examples to	facilitate understanding theory,  principles, and  practice  In addition to knowledge of the tools and techniques available to  software engineers, readers will grasp the ability to interact with  customers, participate in multiple software processes, and express  requirements clearly in a variety of ways. They will have the ability to  create designs flexible enough for complex, changing environments, and  deliver the proper products.","2016-03-09","2023-05-07 17:29:38","2023-05-07 17:29:38","","","800","","","","","Software Engineering","","","","","Waveland Press","","en","","","","","Google Books","","Google-Books-ID: kILlCwAAQBAJ","","","https://books.google.co.in/books?id=kILlCwAAQBAJ","","Computers / Software Development & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EICG3CF2","conferencePaper","2012","McHugh, Martin; McCaffery, Fergal; Casey, Valentine","Barriers to Adopting Agile Practices When Developing Medical Device Software","Software Process Improvement and Capability Determination","978-3-642-30439-2","","10.1007/978-3-642-30439-2_13","","Agile methodologies such as XP and Scrum are founded upon the four values and twelve principles of agile software development. A software development project is only considered to be truly agile if these values and principles are followed. However, software developed for use in medical devices must be regulatory compliant and this can make the process of following a single agile methodology such as XP difficult to achieve. This paper outlines how we identified the barriers to agile adoption in the medical device software domain through performing a survey. These barriers include: lack of documentation; maintaining traceability; regulatory compliance; lack of up front planning and the process of managing multiple releases. Based on this research recommendations are also made as to how these barriers can be overcome.","2012","2023-05-07 17:29:42","2023-05-07 17:29:42","","141-147","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\5AQDYYBJ\McHugh et al. - 2012 - Barriers to Adopting Agile Practices When Developi.pdf","","","Agile; Scrum; Barriers; Medical; Plan Driven; Safety Critical; XP","Mas, Antonia; Mesquida, Antoni; Rout, Terry; O’Connor, Rory V.; Dorling, Alec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LCM2GERN","journalArticle","2003","Turner, Richard; Boehm, Barry","People Factors in Software Management: Lessons From Comparing Agile and Plan-Driven Methods","","","","","","","2003","2023-05-07 17:29:54","2023-05-07 17:29:54","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\Y3XDBVCS\Turner and Boehm - 2003 - People Factors in Software Management Lessons Fro.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UXQVJCUT","conferencePaper","2007","Aurum, Aybüke; Wohlin, Claes","A Value-Based Approach in Requirements Engineering: Explaining Some of the Fundamental Concepts","Requirements Engineering: Foundation for Software Quality","978-3-540-73031-6","","10.1007/978-3-540-73031-6_8","","Today’s rapid changes and global competition forces software companies to become increasingly competitive and responsive to consumers and market developments. The purpose of requirements engineering activities is to add business value that is accounted for in terms of return-on-investment of a software product. This article introduces some of the fundamental aspects of value by borrowing theories from economic theory, discusses a number of the challenges that face requirements engineers and finally provides a model that illustrates value from business, product and project perspectives.","2007","2023-05-07 17:32:01","2023-05-07 17:32:01","","109-115","","","","","","A Value-Based Approach in Requirements Engineering","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","requirements engineering; alignment; business strategy; technical decisions; value based approach","Sawyer, Pete; Paech, Barbara; Heymans, Patrick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9MLACRII","journalArticle","2011","Devedžić, Vladan; Milenkovic, Sas˘a R.","Teaching Agile Software Development: A Case Study","IEEE Transactions on Education","","1557-9638","10.1109/TE.2010.2052104","","This paper describes the authors' experience of teaching agile software development to students of computer science, software engineering, and other related disciplines, and comments on the implications of this and the lessons learned. It is based on the authors' eight years of experience in teaching agile software methodologies to various groups of students at different universities, in different cultural settings, and in a number of courses and seminars. It specifically discusses three different courses on agile software development, given in different teaching settings and at different levels, and briefly surveys variations to these courses given elsewhere. Based on the experience acquired, analyses and evaluations conducted, and current pedagogical trends at relevant university departments, the authors provide recommendations on how to overcome potential problems in teaching agile software development and make their adoption more effective.","2011-05","2023-05-07 17:32:12","2023-05-07 17:32:12","","273-278","","2","54","","","Teaching Agile Software Development","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Education","","C:\Users\gabra\Zotero\storage\5BMPNYV3\5487434.html","","","Programming; Software; Educational institutions; Variable speed drives; Industries; Scrum; Testing; Extreme Programming (XP); computer science education; Agile software development (ASD)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XQFUXX6M","book","2007","G, Stamelos, Ioannis; Panagiotis, Sfetsos","Agile Software Development Quality Assurance","","978-1-59904-218-3","","","","Agile methods are a collection of different techniques and practices that share the same values and basic principles. Agile Software Development Quality Assurance provides in-depth coverage of the most important concepts, issues, trends, and technologies in agile software. This Premier Reference Source presents the research and instruction used to develop and implement software quickly, in small iteration cycles, and in close cooperation with the customer in an adaptive way. It is a comprehensive guide that helps researchers and practitioners in the agile software development process avoid risks and project failures that are frequently encountered in traditional software projects.","2007-02-28","2023-05-07 17:32:25","2023-05-07 17:32:25","","","266","","","","","","","","","","Idea Group Inc (IGI)","","en","","","","","Google Books","","Google-Books-ID: TWscMx09ENkC","","","https://books.google.co.in/books?id=TWscMx09ENkC","","Computers / Software Development & Engineering / General; Technology & Engineering / General; Computers / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I8A572ZA","journalArticle","2010","Chandra Misra, Subhas; Kumar, Vinod; Kumar, Uma","Identifying some critical changes required in adopting agile practices in traditional software development projects","International Journal of Quality & Reliability Management","","0265-671X","10.1108/02656711011035147","https://doi.org/10.1108/02656711011035147","Purpose – Agile software development (ASD) is currently an emerging approach in software engineering for improving quality, initially advocated by a group of 17 software professionals who practice a set of “lightweight” methods, and share a common set of values of software development. Owing to the attractive claims of successes of the ASD approach, many traditional projects, which used to practice plan‐driven software development, are gradually transitioning into ASD‐based development. This paper seeks to report the results from a survey‐based ex‐post‐facto study aimed at determining the relative importance, if any, of the changes traditional plan‐driven software development projects have to undergo to adopt ASD practices. Design/methodology/approach – The study was conducted using a web‐based survey with ASD practitioners who had experience of practicing plan‐driven software development in the past. ASD practitioners from a wide range of industrial sectors participated in the study. Similarly, the study is not restricted to any specific organisation/project size, culture, or nationality – the respondents were widely geographically distributed across continents. Findings – The study received 241 responses, of which 165 were usable. The study did not reveal any substantial difference in importance of the four classes of changes hypothesised – changes in culture, changes in management style, changes in knowledge management strategy and changes in development processes. The authors believe that this is an important finding because it is indicative of not isolating one class of changes from another in practical transition exercises. However, another noteworthy observation was that transitioning from heavily process‐centric to short, iterative, test‐driven, and people‐centric development was considered by the largest percentage (roughly 77 per cent) of respondents to be very important. The open‐ended questions in the study also revealed three additional classes of changes: changes in personal characteristics, changes in customer attitude, and changes in knowledge and education of stakeholders. Originality/value – In this work an attempt was made to gain an understanding of the relative importance of the different critical changes that would be helpful to a project manager who is involved in the transition from traditional plan‐driven software development practices to agile software development practices.","2010-01-01","2023-05-07 17:32:28","2023-05-07 17:32:28","2023-05-07 17:32:27","451-474","","4","27","","","","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Group Publishing Limited","","C:\Users\gabra\Zotero\storage\Q9NVYHMM\html.html","","","Software engineering; Change management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NKTNHISI","journalArticle","2001","Highsmith, J.; Cockburn, A.","Agile software development: the business of innovation","Computer","","1558-0814","10.1109/2.947100","","The rise and fall of the dotcom-driven Internet economy shouldn't distract us from seeing that the business environment continues to change at a dramatically increasing pace. To thrive in this turbulent environment, we must confront the business need for relentless innovation and forge the future workforce culture. Agile software development approaches, such as extreme programming, Crystal methods, lean development, Scrum, adaptive software development (ASD) and others, view change from a perspective that mirrors today's turbulent business and technology environment.","2001-09","2023-05-07 17:32:34","2023-05-07 17:32:34","","120-127","","9","34","","","Agile software development","","","","","","","","","","","","IEEE Xplore","","Conference Name: Computer","","C:\Users\gabra\Zotero\storage\ZUWIQ5GQ\947100.html","","","Programming; Software development management; Collaborative software; Collaborative work; Documentation; Variable speed drives; Contracts; Technological innovation; Adaptive systems; Humans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S3T7MFIV","journalArticle","2015","Glinz, Martin; Fricker, Samuel A.","On shared understanding in software engineering: an essay","Computer Science - Research and Development","","1865-2042","10.1007/s00450-014-0256-x","https://doi.org/10.1007/s00450-014-0256-x","Shared understanding is essential for efficient software engineering when the risk of unsatisfactory out-come and rework of project results shall be low. Today, however, shared understanding is used mostly in an unreflected, ad-hoc way. This affects the quality of the engineered software solutions and generates re-work once the quality problems are discovered. In this article, we investigate the role, value, and usage of shared understanding in software engineering. We contribute a reflected analysis of the problem, in particular of how to rely on shared understanding that is implicit, rather than explicit. After an overview of the state of the art we discuss forms and value of shared understanding in software engineering, survey enablers and obstacles, compile existing practices for dealing with shared understanding, and present a roadmap for improving knowledge and practice in this area.","2015-08-01","2023-05-07 17:32:37","2023-05-07 17:32:37","2023-05-07 17:32:37","363-376","","3","30","","Comput Sci Res Dev","On shared understanding in software engineering","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\55N75Y76\Glinz and Fricker - 2015 - On shared understanding in software engineering a.pdf","","","Software engineering; Implicit shared understanding; Shared understanding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GJ3TNIQD","journalArticle","2007","Dittrich, Yvonne; John, Michael; Singer, Janice; Tessem, Bjørnar","Editorial for the Special Issue on Qualitative Software Engineering Research.","Information and Software Technology.","","","","","","2007","2023-05-07 17:32:46","2023-05-07 17:32:46","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\83A4RRH7\Dittrich et al. - 2007 - Editorial for the Special Issue on Qualitative Sof.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TT2G5CS8","bookSection","2015","Fricker, Samuel A.; Grau, Rainer; Zwingli, Adrian","Requirements Engineering: Best Practice","Requirements Engineering for Digital Health","978-3-319-09798-5","","","https://doi.org/10.1007/978-3-319-09798-5_2","Many software solutions have failed because they did not meet stakeholder needs. In response to this problem a massive amount of techniques were developed to elicit stakeholder needs, to analyze the implications of these needs on the software, to specify proposed software products, and to check acceptance of these proposals. However, many of these techniques did not become industrial practice because they were not practicable or ineffective when used in real-world projects. To obtain an overview of what common practice is and to understand which techniques reflect best practice because they are particularly effective, we have surveyed a large number of industry projects. Based on 419 valid answers, this chapter gives an overview of commonly used requirements engineering techniques. It also shows which of the techniques, when used in a software project, correlate with requirements engineering success. The chapter concludes with recommendations for software projects and future research to improve requirements engineering practice.","2015","2023-05-07 17:32:51","2023-05-07 17:32:51","2023-05-07 17:32:51","25-46","","","","","","Requirements Engineering","","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","DOI: 10.1007/978-3-319-09798-5_2","","C:\Users\gabra\Zotero\storage\3E77ILDL\Fricker et al. - 2015 - Requirements Engineering Best Practice.pdf","","","Requirement Engineer; Requirement Engineering; Software Project; Business Case; Quality Function Deployment","Fricker, Samuel A.; Thümmler, Christoph; Gavras, Anastasius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U53IZHB6","journalArticle","2010","Ampatzoglou, Apostolos; Stamelos, Ioannis","Software engineering research for computer games: A systematic review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.05.004","https://www.sciencedirect.com/science/article/pii/S0950584910000820","Context Currently, computer game development is one of the fastest growing industries in the worldwide economy. In addition to that, computer games are rapidly evolving in the sense that newer game versions arrive in a very short interval. Thus, software engineering techniques are needed for game development in order to achieve greater flexibility and maintainability, less cost and effort, better design, etc. In addition, games present several characteristics that differentiate their development from classical software development. Objective This study aims to assess the state of the art on research concerning software engineering for computer games and discuss possible important areas for future research. Method We employed a standard methodology for systematic literature reviews using four well known digital libraries. Results Software engineering for computer games is a research domain that has doubled its research activity during the last 5years. The dominant research topic has proven to be requirements engineering, while topics such as software verification and maintenance have been neglected up to now. Conclusion The results of the study suggest that software engineering for computer games is a field that embraces many techniques and methods from conventional software engineering and adapts them so as to fit the specific requirements of game development. In addition to that, the study proposes the employment of more elaborate empirical methods, i.e. controlled experiments and case studies, in game software engineering research, which, have not been extensively used up to now.","2010-09-01","2023-05-07 17:32:58","2023-05-07 17:32:58","2023-05-07 17:32:58","888-901","","9","52","","Information and Software Technology","Software engineering research for computer games","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\TXA5D3BV\S0950584910000820.html","","","Software engineering; Systematic review; Computer games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ITKFSA2U","book","2009","Rico, David F.; Sayani, Hasan H.; Sone, Saya","The Business Value of Agile Software Methods: Maximizing ROI with Just-in-time Processes and Documentation","","978-1-60427-031-0","","","","“This reference shows that Agile methods are based on systematic values, principles, and discipline; and, more importantly, it demonstrates that Agile methods are right-sized, just-enough, just-in-time approaches for maximizing the business value of new product development.” —Dr. Jeffrey V. Sutherland, Co-Creator of Scrum, CEO, Scrum, Inc. Whether to continue using traditional cost and benefit analysis methods such as systems and software engineering standards or to use a relatively new family of software development processes known as Agile methods is one of most prevalent questions within the information technology field today. Since each family of methods has its strengths and weaknesses, the question being raised by a growing number of executives and practitioners is: Which family of methods provides the greater business value and return on investment (ROI)? Whereas traditional methods have been in use for many decades, Agile methods are still a new phenomenon and, until now, very little literature has existed on how to quantify the business value of Agile methods in economic terms, such as ROI and net present value (NPV). Using cost of quality, total cost of ownership, and total life cycle cost parameters, The Business Value of Agile Software Methods offers a comprehensive methodology and introduces the industry’s initial top-down parametric models for quantifying the costs and benefits of using Agile methods to create innovative software products. Based on real-world data, it illustrates the first simple-to-use parametric models of Real Options for estimating the business value of Agile methods since the inception of the Nobel prize-winning Black-Scholes formula. Numerous examples on how to estimate the costs, benefits, ROI, NPV, and real options of the major types of Agile methods such as Scrum, Extreme Programming and Crystal Methods are also included. In addition, this reference provides the first comprehensive compilation of cost and benefit data on Agile methods from an analysis of hundreds of research studies. The Business Value of Agile Software Methods shatters key myths and misconceptions surrounding the modern-day phenomenon of Agile methods for creating software products. It provides a complete business value comparison between traditional and Agile methods. The keys to maximizing the business value of any method are low costs and high benefits and the business value of Agile methods, when compared to traditional methods, proves to be very impressive. Agile methods are a new model of project management that can be used to improve the success, business value, and ROI of high-risk and highly complex IT projects in today’s dynamic, turbulent, and highly uncertain marketplace. If you are an executive, manager, scholar, student, consultant or practitioner currently on the fence, you need to read this book!","2009-10-15","2023-05-07 17:35:18","2023-05-07 17:35:18","","","241","","","","","The Business Value of Agile Software Methods","","","","","J. Ross Publishing","","en","","","","","Google Books","","Google-Books-ID: anLeaMMgmo0C","","","https://books.google.co.in/books?id=anLeaMMgmo0C","","Computers / Software Development & Engineering / General; Computers / Programming / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GWFYCYRC","conferencePaper","2019","Hayat, Faisal; Rehman, Ammar Ur; Arif, Khawaja Sarmad; Wahab, Kanwal; Abbas, Muhammad","The Influence of Agile Methodology (Scrum) on Software Project Management","2019 20th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","","","10.1109/SNPD.2019.8935813","","Software project management has main role in the Software industry. It includes different processes and knowledge areas. The triple constraint of the software project like time, cost and scope is directly dependent on the requirement of the project. Agile methodology is the iterative way for developing the software project for frequent changes, fast delivery and reduce risk. Software project management also plays important role in agile based software project. Agile methodology influence software project management at 10 knowledge areas. In this study we carried out survey from different software companies and it shows that almost every software company uses agile development (Scrum) and has a positive impact on the software project management.","2019-07","2023-05-07 17:36:00","2023-05-07 17:36:00","","145-149","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\BYUPLFQK\8935813.html","","","Project management; Software engineering; Bibliographies; Software; Companies; Scrum; Scrum (Software development); Agile Methodology; Project Knowledge Areas; Software Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 20th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","","","","","","","","","","","","","","",""
"L6F4T46E","conferencePaper","2007","Abrahamsson, Pekka","Agile Software Development of Mobile Information Systems","Advanced Information Systems Engineering","978-3-540-72988-4","","10.1007/978-3-540-72988-4_1","","Agile software development methods are quickly being adopted by the software industry. Concerns have been raised whether agile methods are suitable for any given information systems development domain. Indeed, quite little is known empirically about the validity of agile methods in most of the industrial domains. Mobile information systems present no exception in this sense. Yet, they are subject to frequent requirements changes in terms of changing business needs and technology, and their market is highly competitive. Moreover, most of these systems are far away from so called agile home ground. This talk presents the need for agile methods in the focal domain, identifies their shortcomings on the basis of three large-scale case studies from industry. All of the cases deal with the development of mobile information system and come from Nokia, F-Secure and Philips. The talk also discusses the possible strategies for deploying agile solutions in practice.","2007","2023-05-07 17:36:12","2023-05-07 19:22:13","","1-4","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\4SQTKUPD\Abrahamsson - 2007 - Agile Software Development of Mobile Information S.pdf","","","Agile software development; case study; mobile information systems","Krogstie, John; Opdahl, Andreas; Sindre, Guttorm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KK8PJGP6","journalArticle","2013","Losada, Begoña; Urretavizcaya, Maite; Fernández-Castro, Isabel","A guide to agile development of interactive software with a “User Objectives”-driven methodology","Science of Computer Programming","","0167-6423","10.1016/j.scico.2012.07.022","https://www.sciencedirect.com/science/article/pii/S0167642312001657","This paper presents the InterMod methodology. By combining the widely accepted Agile Methods, Model-Driven Developments and User-Centred Design it allows us to develop high-quality interactive applications. As a main characteristic, it plans and organises the software project as a series of iterations that are guided by the User Objectives in an agile and user-centred manner. At each iteration, the software development work can be distributed to different teams according to some developmental and integration activities. Each activity is driven by models that are validated by a multidisciplinary team composed of developers and users. The requirements are incrementally collected and formalised by means of models based on user-centred design. Besides, the Semantically Enriched Human–Computer Interaction model is proposed to speed up project validation. This model enriches a human–computer interaction model with some visual characteristics and the application semantic. Thus, the enriched model provides enough information to generate prototypes so users and developers can easily validate this model. Diagram project is a real case study that is used to illustrate the application of the InterMod methodology through the whole paper.","2013-11-01","2023-05-07 17:36:37","2023-05-07 17:36:37","2023-05-07 17:36:37","2268-2281","","11","78","","Science of Computer Programming","","Special section on Mathematics of Program Construction (MPC 2010) and Special section on methodological development of interactive systems from Interaccion 2011","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\Q2UMDSNN\Losada et al. - 2013 - A guide to agile development of interactive softwa.pdf; C:\Users\gabra\Zotero\storage\JGHZEP7Y\S0167642312001657.html","","","Software engineering; Agile methods; Model-driven development; User-centred design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SK4FQKY4","journalArticle","2014","Sundararajan, Srikrishnan; Bhasi, Marath; Vijayaraghavan, Pramod K.","Case study on risk management practice in large offshore-outsourced Agile software projects","IET Software","","1751-8814","10.1049/iet-sen.2013.0190","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2013.0190","Information systems, offshoring and outsourcing have resulted in significant changes to software engineering practices. In this study, the authors explore industry practices in risk management in a large offshore-outsourced Agile Scrum software development project. The project consisted of distributed teams from two different IT vendors. Agile method is suitable for small and collocated teams, where the team members have high level of knowledge and commitment. In this study, the authors explore the challenges to Agile culture and practices posed by offshore-outsourced business model (where project ownership is shared, and business knowledge of the development team is limited), distributed project teams and large team size characteristic of offshore projects. In this study, it was further examined how these challenges were managed; and how the best practices can be used to improved performance in the context of offshore-outsourced Agile projects in general.","2014","2023-05-07 17:36:59","2023-05-07 17:36:59","2023-05-07 17:36:59","245-257","","6","8","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2013.0190","","C:\Users\gabra\Zotero\storage\2U8S4GZZ\Sundararajan et al. - 2014 - Case study on risk management practice in large of.pdf","","","risk management; Agile culture; business knowledge; business model; collocated teams; development team; distributed project teams; information systems; IT vendors; large offshore-outsourced Agile Scrum software development project; performance improvement; project ownership; risk management practice; small teams; software engineering practices; software prototyping; team members; team size characteristic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9HTLFI6R","webpage","","","Agile software testing in a large-scale project | IEEE Journals & Magazine | IEEE Xplore","","","","","https://ieeexplore.ieee.org/abstract/document/1657936","","","2023-05-07 17:42:04","2023-05-07 17:42:04","2023-05-07 17:42:04","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\TZTRITC9\1657936.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HJHSSMTM","journalArticle","2006","Talby, D.; Keren, A.; Hazzan, O.; Dubinsky, Y.","Agile software testing in a large-scale project","IEEE Software","","1937-4194","10.1109/MS.2006.93","","Agile software development in general and Extreme Programming (XP) in particular, promote radical changes in how software development organizations traditionally work. We present and analyze new data from a real, large-scale agile project to develop a business-critical enterprise information system for the Israeli Air Force (IAF). Our results offer new evidence that agile testing practices actually work, dramatically improving development quality and productivity. We describe the organization's successful practices and guidelines in four key areas: test design and activity execution, working with professional testers, planning, and defect management","2006-07","2023-05-07 17:42:45","2023-05-07 17:42:45","","30-37","","4","23","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\54VXQ9UG\1657936.html","","","Programming; Project management; Large-scale systems; Software testing; System testing; project management; software testing; Quality assurance; debugging; Game theory; measurement; Meeting planning; process metrics; project planning; Reflection; Spine; test design; test management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IIQG79SR","webpage","","","A feasible user story tool for agile software development? | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/1182972","","","2023-05-07 17:42:59","2023-05-07 17:42:59","2023-05-07 17:42:59","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\CURY4Y96\1182972.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7SX9ASM6","webpage","","","A Capstone Course on Agile Software Development Using Scrum | IEEE Journals & Magazine | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/5765710","","","2023-05-07 17:43:23","2023-05-07 17:43:23","2023-05-07 17:43:23","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HBMXEKLK","webpage","","","More About Software Requirements: Thorny Issues and Practical Advice - Karl Wiegers - Google Books","","","","","https://books.google.co.in/books?hl=en&lr=&id=eJVCAwAAQBAJ&oi=fnd&pg=PT15&dq=Requirement+engineering+agile+software+&ots=L0dkfZeLQN&sig=IAZb69FWGq_R53yWFRuE4TCtjEA&redir_esc=y#v=onepage&q=Requirement%20engineering%20agile%20software&f=false","","","2023-05-07 17:43:43","2023-05-07 17:43:43","2023-05-07 17:43:43","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\RBG3BR4N\books.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"D8983GY2","webpage","","","REfine: A gamified platform for participatory requirements engineering | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/7367581","","","2023-05-07 17:43:55","2023-05-07 17:43:55","2023-05-07 17:43:55","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\NVJ72F8H\7367581.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4XBQK45X","webpage","","","Managing the requirements flow from strategy to release in large-scale agile development: a case study at Ericsson | SpringerLink","","","","","https://link.springer.com/article/10.1007/s10664-016-9491-z","","","2023-05-07 17:43:59","2023-05-07 17:43:59","2023-05-07 17:43:59","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\ZL8KZWLP\s10664-016-9491-z.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VVGG5FLI","webpage","","","Agile Software Development of Mobile Information Systems | SpringerLink","","","","","https://link.springer.com/chapter/10.1007/978-3-540-72988-4_1","","","2023-05-07 17:44:03","2023-05-07 17:44:03","2023-05-07 17:44:03","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\57MBBENK\978-3-540-72988-4_1.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AFUYZPUM","journalArticle","2017","Heikkilä, Ville T.; Paasivaara, Maria; Lasssenius, Casper; Damian, Daniela; Engblom, Christian","Managing the requirements flow from strategy to release in large-scale agile development: a case study at Ericsson","Empirical Software Engineering","","1573-7616","10.1007/s10664-016-9491-z","https://doi.org/10.1007/s10664-016-9491-z","In a large organization, informal communication and simple backlogs are not sufficient for the management of requirements and development work. Many large organizations are struggling to successfully adopt agile methods, but there is still little scientific knowledge on requirements management in large-scale agile development organizations. We present an in-depth study of an Ericsson telecommunications node development organization which employs a large scale agile method to develop telecommunications system software. We describe how the requirements flow from strategy to release, and related benefits and problems. Data was collected by 43 interviews, which were analyzed qualitatively. The requirements management was done in three different processes, each of which had a different process model, purpose and planning horizon. The release project management process was plan-driven, feature development process was continuous and implementation management process was agile. The perceived benefits included reduced development lead time, increased flexibility, increased planning efficiency, increased developer motivation and improved communication effectiveness. The recognized problems included difficulties in balancing planning effort, overcommitment, insufficient understanding of the development team autonomy, defining the product owner role, balancing team specialization, organizing system-level work and growing technical debt. The study indicates that agile development methods can be successfully employed in organizations where the higher level planning processes are not agile. Combining agile methods with a flexible feature development process can bring many benefits, but large-scale software development seems to require specialist roles and significant coordination effort.","2017-12-01","2023-05-07 17:44:31","2023-05-07 17:44:31","2023-05-07 17:44:31","2892-2936","","6","22","","Empir Software Eng","Managing the requirements flow from strategy to release in large-scale agile development","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\ZRTRN5UT\Heikkilä et al. - 2017 - Managing the requirements flow from strategy to re.pdf","","","Requirements management; Scrum; Large projects; Scaling agile software development; Telecommunications software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VUIGHE9E","webpage","","","The Influence of Agile Methodology (Scrum) on Software Project Management | IEEE Conference Publication | IEEE Xplore","","","","","https://ieeexplore.ieee.org/abstract/document/8935813","","","2023-05-07 17:45:56","2023-05-07 17:45:56","2023-05-07 17:45:56","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\WMTJ6N88\8935813.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8PAAAZV7","webpage","","","Moving from Traditional to Agile Software Development Methodologies Also on Large, Distributed Projects. - ScienceDirect⁤","","","","","https://www.sciencedirect.com/science/article/pii/S1877042815012835","","","2023-05-07 17:46:45","2023-05-07 17:46:45","2023-05-07 17:46:45","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\52ZLXNE2\S1877042815012835.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3RXEUSHN","webpage","","","Knowledge Management Strategies and Processes in Agile Software Development: A Systematic Literature Review | International Journal of Software Engineering and Knowledge Engineering","","","","","https://www.worldscientific.com/doi/abs/10.1142/S0218194019500153","","","2023-05-07 17:46:53","2023-05-07 17:46:53","2023-05-07 17:46:53","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\Q6I39LLW\S0218194019500153.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R8RN5TCD","webpage","","","Knowledge Management Strategies and Processes in Agile Software Development: A Systematic Literature Review | International Journal of Software Engineering and Knowledge Engineering⁤","","","","","https://www.worldscientific.com/doi/abs/10.1142/S0218194019500153","","","2023-05-07 17:46:55","2023-05-07 17:46:55","2023-05-07 17:46:55","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\CWPRZ2HL\S0218194019500153.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9L5RHSTK","webpage","","","Agile requirements prioritization in large-scale outsourced system projects: An empirical study - ScienceDirect","","","","","https://www.sciencedirect.com/science/article/abs/pii/S0164121212003536","","","2023-05-07 17:47:19","2023-05-07 17:47:19","2023-05-07 17:47:19","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\5ESAT4WB\S0164121212003536.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RNGLNQ74","webpage","","","Integrating Software Product Line Engineering and Agile Development | IEEE Journals & Magazine | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/5406496","","","2023-05-07 17:47:23","2023-05-07 17:47:23","2023-05-07 17:47:23","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\9J69AH6N\5406496.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5RXGTBLG","journalArticle","2012","Qureshi, M. Rizwan Jameel","Agile software development methodology for medium and large projects","IET Software","","1751-8814","10.1049/iet-sen.2011.0110","https://digital-library.theiet.org/content/journals/10.1049/iet-sen.2011.0110","Extreme programming (XP) is one of the most widely used agile methodologies for software development. It intends to improve software quality and responsiveness to changing customer requirements. Despite the facts that the use of XP offers a number of benefits and it has been a widely used agile methodology, XP does not offer the same benefits when it comes to medium and large software projects. Some of the reasons for this are weak documentation, lack of strong architecture and ignorance to risk awareness during the software development. Owing to the ever-increasing demand of agile approaches, this study addresses the problem of XP&apos;s ability to handle medium and large projects. Most of the companies that employ XP as a development methodology for medium and large projects face this problem, which echoes the importance of this problem. To address this problem, in this study XP model is extended in such a way that it equally offers its benefits for medium- and large-scale projects. As an evaluation of the extended XP, three independent industrial case studies are conducted. The case studies are described and results are presented in the study. The results provide evidence that the extended XP can be beneficial for medium and large software development projects.","2012-08-01","2023-05-07 17:51:39","2023-05-07 17:51:39","2023-05-07 17:51:39","358-363","","4","6","","","","","","","","","","en","","","","","digital-library.theiet.org","","Publisher: IET Digital Library","","C:\Users\gabra\Zotero\storage\IPUS9SFL\iet-sen.2011.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AN34SCV6","journalArticle","2007","Cao, Lan; Ramesh, Balasubramaniam","Agile Software Development: Ad Hoc Practices or Sound Principles?","IT Professional","","1941-045X","10.1109/MITP.2007.27","","Management and organization theories help explain why agility is needed in software development and how to achieve it. Even though the effectiveness of some specific agile practices is not yet fully established, the agile approach is consistent with the sound principles grounded in management and organization theories discussed here. Our analysis helps understand the validity and applicability of the agile approach. It also highlights some of the challenges faced by agile development. Also, this analysis highlights several opportunities to fine-tune and understand the applicability and relevance of agile methods in different project contexts. Finally, rather than focusing attention on whether there is anything new with agile methods, it's more useful to understand the conditions under which specific agile practices are likely to be effective","2007-03","2023-05-07 17:51:52","2023-05-07 17:51:52","","41-47","","2","9","","","Agile Software Development","","","","","","","","","","","","IEEE Xplore","","Conference Name: IT Professional","","C:\Users\gabra\Zotero\storage\BGDU8BZE\4140969.html","","","Programming; Collaborative software; software development; Product development; agile methods; Time to market; Scheduling; History; Appropriate technology; Best practices; organizational theory; Stress; World Wide Web","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LNP4V5A3","conferencePaper","2014","Popli, Rashmi; Chauhan, Naresh","Cost and effort estimation in agile software development","2014 International Conference on Reliability Optimization and Information Technology (ICROIT)","","","10.1109/ICROIT.2014.6798284","","Projects that are over-budget, delivered late, and fall short of user's expectations have been a common problem are a for software development efforts for years. Agile methods, which represent an emerging set of software development methodologies based on the concepts of adaptability and flexibility, are currently touted as a way to alleviate these reoccurring problems and pave the way for the future of development. The estimation in Agile Software Development methods depends on an expert opinion and historical data of project for estimation of cost, size, effort and duration. In absence of the historical data and experts the previous method like analogy and planning poker are not useful. This paper focuses on the research work in Agile Software development and estimation in Agile. It also focuses the problems in current Agile practices thereby proposed a method for accurate cost and effort estimation.","2014-02","2023-05-07 17:51:57","2023-05-07 17:51:57","","57-61","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\MX9ECR9U\6798284.html","","","Software; Planning; Agile Software Development; Estimation; Psychology; Cost; Effort per Person; Story-points; Traditional Estimation methods; User-Stories","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 International Conference on Reliability Optimization and Information Technology (ICROIT)","","","","","","","","","","","","","","",""
"XYAGFJFZ","journalArticle","2009","Napier, Nannette P.; Mathiassen, Lars; Johnson, Roy D.","Combining Perceptions and Prescriptions in Requirements Engineering Process Assessment: An Industrial Case Study","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2009.33","","Requirements engineering (RE) is a key discipline in software development and several methods are available to help assess and improve RE processes. However, these methods rely on prescriptive models of RE; they do not, like other disciplines within software engineering, draw directly on stakeholder perceptions and subjective judgments. Given this backdrop, we present an empirical study in RE process assessment. Our aim was to investigate how stakeholder perceptions and process prescriptions can be combined during assessments to effectively inform RE process improvement. We first describe existing methods for RE process assessment and the role played by stakeholder perceptions and subjective judgments in the software engineering and management literature. We then present a method that combines perceptions and prescriptions in RE assessments together with an industrial case study in which the method was applied and evaluated over a three-year period at TelSoft. The data suggest that the combined method led to a comprehensive and rich assessment and it helped TelSoft consider RE as an important and integral part of the broader engineering context. This, in turn, led to improvements that combined plan-driven and adaptive principles for RE. Overall, the combined method helped TelSoft move from Level 1 to Level 2 in RE maturity, and the employees perceived the resulting engineering practices to be improved. Based on these results, we suggest that software managers and researchers combine stakeholder perceptions and process prescriptions as one way to effectively balance the specificity, comparability, and accuracy of software process assessments.","2009-09","2023-05-07 17:51:59","2023-05-07 17:51:59","","593-606","","5","35","","","Combining Perceptions and Prescriptions in Requirements Engineering Process Assessment","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\Z6QK53R3\4967614.html; C:\Users\gabra\Zotero\storage\ARCDQGSG\Napier et al. - 2009 - Combining Perceptions and Prescriptions in Require.pdf","","","Programming; Project management; Quality management; Software quality; Software engineering; Educational institutions; Computer industry; Data engineering; Risk management; Engineering management; Process implementation and change; qualitative process analysis; requirements engineering process; software management; software process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JVTZJ8ZU","journalArticle","2013","Kaisti, Matti; Rantala, Ville; Mujunen, Tapio; Hyrynsalmi, Sami; Könnölä, Kaisa; Mäkilä, Tuomas; Lehtonen, Teijo","Agile methods for embedded systems development - a literature review and a mapping study","EURASIP Journal on Embedded Systems","","1687-3963","10.1186/1687-3963-2013-15","https://doi.org/10.1186/1687-3963-2013-15","There is a wide area of applications that use embedded systems, and the number of such systems keeps growing. The required functionality and complexity of embedded systems are also constantly increasing, and development of such products is becoming increasingly harder. This requires new thinking on the product development processes, and one such emerging philosophy is the agile methods. These methods were created by the software engineering community where they are commonly used. Since then, they have been adopted in embedded systems development; however, whether they can improve the embedded systems product development processes remains an open question. This study aims to bring forth what is known about agile methods in embedded systems development and to find out if agile practices are suitable in this domain and what evidence is there to support the findings. We conducted a literature review and a mapping study to answer these questions. The scope of this study is not only limited to embedded software development, but also to embedded hardware and integrated circuits. We have found that agile methods can be used in the embedded domain, but the methods and practices need to be adapted to suit the more constrained field of embedded product development. Furthermore, the field of embedded product development has wide diversity of products with different needs and domain-specific problems so that no single method is applicable, but rather many methods and practices are needed for different situations.","2013-11-15","2023-05-07 17:52:02","2023-05-07 17:52:02","2023-05-07 17:52:01","15","","1","2013","","EURASIP Journal on Embedded Systems","","","","","","","","","","","","","BioMed Central","","","","C:\Users\gabra\Zotero\storage\YWHFRM9I\Kaisti et al. - 2013 - Agile methods for embedded systems development - a.pdf; C:\Users\gabra\Zotero\storage\A2JM5HNB\1687-3963-2013-15.html","","","Agile; Hardware; Lean; Embedded software; Embedded systems; Integrated circuits; Method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"B6X44TN8","bookSection","2010","Dingsøyr, Torgeir; Dybå, Tore; Moe, Nils Brede","Agile Software Development: An Introduction and Overview","Agile Software Development: Current Research and Future Directions","978-3-642-12575-1","","","https://doi.org/10.1007/978-3-642-12575-1_1","Agile software development is an important topic in software engineering and information systems. This chapter provides a characterization and definition of agile software development, an overview of research through a summary of existing overview studies, an analysis of the research literature so far, and an introduction to the main themes of this book. The first part of the book provides foundations and background of agile development. The second part describes findings from studies of agile methods in practice. The third part identifies principal challenges and discusses new frontiers that agile development methods will meet in the future.","2010","2023-05-07 17:52:14","2023-05-07 17:52:14","2023-05-07 17:52:14","1-13","","","","","","Agile Software Development","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/978-3-642-12575-1_1","","","","","Global Software Development; Agile Development; Agile Method; Pair Programming; Software Process Improvement","Dingsøyr, Torgeir; Dybå, Tore; Moe, Nils Brede","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7HYW7ZYC","journalArticle","2009","Kettunen, Petri","Adopting key lessons from agile manufacturing to agile software product development—A comparative study","Technovation","","0166-4972","10.1016/j.technovation.2008.10.003","https://www.sciencedirect.com/science/article/pii/S0166497208001302","Many industrial new product development (NPD) software projects apply nowadays agile methodologies. These methodologies, such as Scrum, eXtreme Programming (XP), and Feature-Driven Development (FDD) date back to 1990s, and the Agile Manifesto was declared in 2001. However, already before that the concept of agile manufacturing (AM) was discovered to describe a corporate ability for quick adaptation to changing requirements. There is surprising amount in common between these two fields. This raises a question of whether NPD software development companies could take even more overall advantage of those different agile approaches. This interdisciplinary paper explores the commonalities between the key concepts of AM and some of the most popular agile software methods, and consequently suggests potential new areas for software process improvement (SPI) in large-scale NPD organizations. An industrial case example illustrates how agility in embedded software product development can be enhanced by following typical NPD principles. We conclude that there is potential for further improvements in software product development industry in general by seeing agility as a wider, organization-oriented business concept following the AM/NPD learning. Current agile software process models cover only a subset of this space.","2009-06-01","2023-05-07 17:52:39","2023-05-07 17:52:39","2023-05-07 17:52:38","408-422","","6","29","","Technovation","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\KKXWPB66\S0166497208001302.html","","","Software process improvement; Agile enterprise; Agile manufacturing; Agile software process models; New product development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UBZWRRLM","conferencePaper","2009","Dullemond, Kevin; van Gameren, Ben; van Solingen, Rini","How Technological Support Can Enable Advantages of Agile Software Development in a GSE Setting","2009 Fourth IEEE International Conference on Global Software Engineering","","","10.1109/ICGSE.2009.22","","Because of the distance between the dispersed development locations, global software engineering (GSE) is confronted with challenges regarding communication, coordination and control of the development work. At the same time, agile software development is strongly built upon communication between engineers and has proven its benefits, although, mostly on one single site. As such, it might be advantageous to combine GSE with agile development. This blend however is not straightforward since the distributed and agile development approaches might have conflicting convictions. In this paper we will discuss the advantages and challenges of combining GSE with agile development based on a theoretical, literature-based research. The main results presented in this paper are: (i) aspects of agile software development, (ii) benefits and challenges associated with these in relation to GSE, (iii) categories of technological support for agile GSE and (iv) a framework depicting the mutual relations among them.","2009-07","2023-05-07 17:52:53","2023-05-07 17:52:53","","143-152","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2329-6313","","C:\Users\gabra\Zotero\storage\Q5LW8S69\5196928.html","","","Programming; Collaboration; Software engineering; Agile; Delay; Costs; Guidelines; Challenges; Benefits; Aspects; Clocks; Communication system control; Framework; Globalization; GSE; Requirement Categories; Technological Support; Technology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 Fourth IEEE International Conference on Global Software Engineering","","","","","","","","","","","","","","",""
"WZ4667B8","journalArticle","2014","Giardino, Carmine; Unterkalmsteiner, Michael; Paternoster, Nicolò; Gorschek, Tony; Abrahamsson, Pekka","What Do We Know about Software Development in Startups?","IEEE Software","","1937-4194","10.1109/MS.2014.129","","An impressive number of new startups are launched every day as a result of growing new markets, accessible technologies, and venture capital. New ventures such as Facebook, Supercell, Linkedin, Spotify, WhatsApp, and Dropbox, to name a few, are good examples of startups that evolved into successful businesses. However, despite many successful stories, the great majority of them fail prematurely. Operating in a chaotic and rapidly evolving domain conveys new uncharted challenges for startuppers. In this study, the authors characterize their context and identify common software development startup practices.","2014-09","2023-05-07 17:52:56","2023-05-07 17:52:56","","28-32","","5","31","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\86IVC79R\Giardino et al. - 2014 - What Do We Know about Software Development in Star.pdf; C:\Users\gabra\Zotero\storage\SP897BLU\6898758.html","","","Software engineering; Companies; Market research; software development; software engineering; Software development; startups; Commercialization; systematic mapping study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LSW9Y34W","conferencePaper","2005","Sillitti, A.; Ceschi, M.; Russo, B.; Succi, G.","Managing uncertainty in requirements: a survey in documentation-driven and agile companies","11th IEEE International Software Metrics Symposium (METRICS'05)","","","10.1109/METRICS.2005.29","","This paper investigates commonalities and differences between agile and documentation-driven approaches in managing uncertainty in requirement gathering. The research method is a survey collected interviewing sixteen project managers of Italian software companies, 8 using agile methods, and 8 using documentation-driven methods. The results show that agile and document-driven companies consider in a different way the problem of changing requirements and the related uncertainty; thus, they manage differently requirements gathering and the relationship with the customer","2005-09","2023-05-07 17:54:27","2023-05-07 17:54:27","","10 pp.-17","","","","","","Managing uncertainty in requirements","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1435","","C:\Users\gabra\Zotero\storage\TT7V5KQJ\1509295.html","","","Project management; Software development management; Software engineering; Computer industry; Costs; Uncertainty; Scheduling; Engineering management; Customer relationship management; Industrial relations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","11th IEEE International Software Metrics Symposium (METRICS'05)","","","","","","","","","","","","","","",""
"PATH5QUQ","journalArticle","2005","Erickson, John; Lyytinen, Kalle; Siau, Keng","Agile Modeling, Agile Software Development, and Extreme Programming: The State of Research","Journal of Database Management (JDM)","","1063-8016","10.4018/jdm.2005100105","https://www.igi-global.com/article/journal-database-management-jdm/www.igi-global.com/article/journal-database-management-jdm/3343","While there are many claims for the successful use of extreme programming (XP) and agile modeling (AM), and the proponents can often be vocal in the extreme regarding their supposed benefits, research evidence supporting proponents‘ claims is somewhat lacking. Currently, the only research appearing...","2005-10-01","2023-05-07 17:54:33","2023-05-07 17:54:33","2023-05-07 17:54:33","88-100","","4","16","","JDM","Agile Modeling, Agile Software Development, and Extreme Programming","","","","","","","en","Access limited to members","","","","www.igi-global.com","","Publisher: IGI Global","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KVDNG98X","conferencePaper","2017","Terpstra, Evenynke; Daneva, Maya; Wang, Chong","Agile Practitioners’ Understanding of Security Requirements: Insights from a Grounded Theory Analysis","2017 IEEE 25th International Requirements Engineering Conference Workshops (REW)","","","10.1109/REW.2017.54","","A 2017 systematic review on engineering non-functional requirements in agile projects revealed a number of published proposals for approaching security requirements in agile settings. While these proposals acknowledge the urgent need for methods to systematically engineer security requirements in agile projects, they were designed mostly in academic settings. Very little empirical evaluation of these proposals happened in real-life contexts. In turn, little is known about how agile developers understand security requirements and how they devise their coping strategies regarding these requirements. This position paper presents a qualitative analysis that sought to discover how agile practitioners reason about security requirements, what contextual factors they consider important for shaping the pro-cess of coping with security requirements in agile projects, and what these strategies are. We conclude with some implications for practice and research.","2017-09","2023-05-07 18:00:52","2023-05-07 18:00:52","","439-442","","","","","","Agile Practitioners’ Understanding of Security Requirements","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\8U7XW6DN\8054893.html","","","Requirements engineering; Proposals; Security; Security requirements engineering; agile project development; Agile project management; empirical research method; LinkedIn; qualitative study; US Department of Defense","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 IEEE 25th International Requirements Engineering Conference Workshops (REW)","","","","","","","","","","","","","","",""
"4K8K3XBU","journalArticle","2012","Lalsing, Vikash","People Factors in Agile Software Development and Project Management","International Journal of Software Engineering & Applications","","09762221","10.5121/ijsea.2012.3109","http://www.airccse.org/journal/ijsea/papers/3112ijsea09.pdf","With the increasing popularity of Agile Methods, many software organisations are moving away from traditional methods to adopt Agile development methodologies. Instead of being predictive, Agile is rather adaptive and people-focussed. It advocates a small and collaborative team that work closely together. But team size is a factor that is in turn constrained by people factors. When implementing Agile, these key factors are often overlooked. This study aims at identifying the underlying people factors to consider when adopting Agile for a team to be effective. The method used is the study of three different sized Agile teams developing products based on the same technologies and using Scrum. Both objective and subjective measures were used and the results are supported by a survey. The results clearly show that for agile methodologies to work well, it is crucial to select the right people for the right team.","2012-01-31","2023-05-07 18:01:06","2023-05-07 18:01:07","2023-05-07 18:01:05","117-137","","1","3","","IJSEA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\WSV4N9XB\Lalsing - 2012 - People Factors in Agile Software Development and P.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6R8K8LR3","conferencePaper","2012","Huang, Philip M.; Darrin, Ann G.; Knuth, Andrew A.","Agile hardware and software system engineering for innovation","2012 IEEE Aerospace Conference","","","10.1109/AERO.2012.6187425","","Agile system engineering practices have matured for software projects while hardware system engineering continues to embrace classical development techniques. High technology projects require innovative solutions to meet the restrictions of cost and schedule and still deliver high performance critical systems. This paper addresses the application of the flexible style of agile systems engineering for dynamic, complex hardware and software projects. These projects can benefit from applying the principles of agile systems engineering as has been demonstrated in the software realm. Fundamental to the rapid development is understanding the role of innovation and momentum in agile project management and systems engineering. For post industrial age projects that require non proven concepts, large degrees of uncertainty and ambiguity and extensive non-recurring engineering, agile systems engineering allows for project development with continuous change while addressing risk. Agile systems engineering exploits the role of momentum to allow innovation in the development process while allowing risk interactions to be managed in a disciplined manner. Examples of how these concepts were used on the design and development of two small satellites at The Johns Hopkins University Applied Physics Laboratory (JHU/APL) in the Multi-Mission Bus Demonstrator (MMBD) project. This challenging satellite build did not use existing key technology (heritage hardware) and created a large paradigm shift from traditional satellite development. Rapid design and development, a “momentum play”, was used to continuously allow change and assessment in a hardware adaptation of the SCRUM technique seen in Extreme Programming. The MMBD project demonstrates the adaptation of these agile concepts. By freezing late in the design cycle, the MMBD project was able to insert innovations throughout the program cycle. The ability to be innovative related to the speed with which the development progressed, including working quickly through all technology choices. This paper discusses agile systems engineering as applied to both software and hardware. Short of papers on embedded systems using agile systems engineering, there are too few projects demonstrating these adaptations of techniques to complex, innovative hardware projects. The Multi-Mission Bus Demonstrator is an excellent benchmark example of program management of rapid technology maturity in a high technology application. This paper demonstrates how agile systems engineering techniques can be adapted to a high technology development program and shows how project momentum was critical to separate the constant non-recurring technology challenges to be worked rapidly from the engineering risk liens requiring longer time frames to retire.","2012-03","2023-05-07 18:01:11","2023-05-07 18:01:11","","1-10","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1095-323X","","C:\Users\gabra\Zotero\storage\SPYNEY7S\6187425.html","","","Hardware; Educational institutions; Systems engineering and theory; NASA; Satellite broadcasting; Satellites; Space vehicles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 IEEE Aerospace Conference","","","","","","","","","","","","","","",""
"QYVNV4J2","conferencePaper","2014","Kumar, Gaurav; Bhatia, Pradeep Kumar","Comparative Analysis of Software Engineering Models from Traditional to Modern Methodologies","2014 Fourth International Conference on Advanced Computing & Communication Technologies","","","10.1109/ACCT.2014.73","","Software Engineering aims to produce a quality software product that is delivered on time, within the allocated budget, and with the requirements expected by the customer but unfortunately maximum of the times this goal is rarely achieved. A software life cycle is the series of identifiable stages that a software product undergoes during its lifetime. However, a properly managed project in a matured software engineering environment can consistently achieve this goal. This research is concerned with the methodologies that examine the life cycle of software through the development models, which are known as software development life cycle. Hereby, we are representing traditional i.e. waterfall, Iteration, Spiral models as well as modern development methodologies like Agile methodologies that includes Extreme programming, Scrum, Feature Driven Development, Component based software development methodologies etc. All of these models have advantages and disadvantages as well. Therefore, the main objective of this research is to represent different models of software development by showing the good and bad practices of each model. A comparative analysis of traditional as well as modern methodologies is made.","2014-02","2023-05-07 18:01:22","2023-05-07 18:01:22","","189-196","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2327-0659","","C:\Users\gabra\Zotero\storage\FLVC889N\6783451.html","","","Software engineering; Software; Software Engineering; Testing; Object oriented modeling; Adaptation models; Computational modeling; Spirals; Modern models; Software Engineering Models; Traditional models","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 Fourth International Conference on Advanced Computing & Communication Technologies","","","","","","","","","","","","","","",""
"M6RYTMZN","journalArticle","2008","Pikkarainen, M.; Haikara, J.; Salo, O.; Abrahamsson, P.; Still, J.","The impact of agile practices on communication in software development","Empirical Software Engineering","","1573-7616","10.1007/s10664-008-9065-9","https://doi.org/10.1007/s10664-008-9065-9","Agile software development practices such as eXtreme Programming (XP) and SCRUM have increasingly been adopted to respond to the challenges of volatile business environments, where the markets and technologies evolve rapidly and present the unexpected. In spite of the encouraging results so far, little is known about how agile practices affect communication. This article presents the results from a study which examined the impact of XP and SCRUM practices on communication within software development teams and within the focal organization. The research was carried out as a case study in F-Secure where two agile software development projects were compared from the communication perspective. The goal of the study is to increase the understanding of communication in the context of agile software development: internally among the developers and project leaders and in the interface between the development team and stakeholders (i.e. customers, testers, other development teams). The study shows that agile practices improve both informal and formal communication. However, it further indicates that, in larger development situations involving multiple external stakeholders, a mismatch of adequate communication mechanisms can sometimes even hinder the communication. The study highlights the fact that hurdles and improvements in the communication process can both affect the feature requirements and task subtask dependencies as described in coordination theory. While the use of SCRUM and some XP practices facilitate team and organizational communication of the dependencies between product features and working tasks, the use of agile practices requires that the team and organization use also additional plan-driven practices to ensure the efficiency of external communication between all the actors of software development.","2008-06-01","2023-05-07 18:02:08","2023-05-07 18:02:08","2023-05-07 18:02:08","303-337","","3","13","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Communication; Agile software development practices; Coordination theory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MJP3T3QN","conferencePaper","2007","Tsai, W. T.; Jin, Z.; Wang, P.; Wu, B.","Requirement Engineering in Service-Oriented System Engineering","IEEE International Conference on e-Business Engineering (ICEBE'07)","","","10.1109/ICEBE.2007.116","","Service-oriented computing has received significant attentions recently, and many applications are being developed using this approach. Thus there is a need to analyze system requirements. This paper examines issues related to service-oriented requirement engineering (SORE). SORE focuses on modeling, specifying, and analyzing application requirements for software that will be developed in a service-oriented manner running in an SOA infrastructure. This paper also presents key features of SORE and some technical challenges.","2007-10","2023-05-07 18:02:21","2023-05-07 18:02:21","","661-668","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\HKNUR97T\4402164.html","","","Collaborative work; Testing; Application software; Systems engineering and theory; Computer science; Spine; Communication system control; Mathematics; Runtime; Service oriented architecture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IEEE International Conference on e-Business Engineering (ICEBE'07)","","","","","","","","","","","","","","",""
"X9G9C2KV","bookSection","2023","Kaur, Gagandeep; Kaur, Inderpreet; Harnal, Shilpi; Malik, Swati","Factors and Techniques for Software Quality Assurance in Agile Software Development","Agile Software Development","978-1-119-89683-8","","","https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119896838.ch13","Technology advances faster than ever in the current era, requiring global software companies to work in an environment of fast-paced change. In today's booming software industry, there are changing demands daily. To meet these gradually demanding requirements, many organizations are seeking new software development methodologies. Software development has been significantly changed by agile practices. The umbrella term Agile refers to the ability to make changes quickly and swiftly. Quality Assurance refers to a systematic process that ensures the excellence of products and services. It should be involved throughout the entire agile process, in line with the new agile paradigm. In agile, every step is analyzed to minimize the number of activities at any given time. Agile software development quality assurance provides a firm grasp of the key concepts, trends, and technologies. This chapter provides a detailed introduction to agile software development, addresses their importance in the information technology sector, and presents a comprehensive overview of the factors and techniques followed by challenges and limitations of agile technology. The overview of this research can serve as an important resource for the software industry to improve development processes as well as for researchers interested in exploring the topic further.","2023","2023-05-07 18:02:28","2023-05-07 18:02:28","2023-05-07 18:02:28","257-272","","","","","","","","","","","John Wiley & Sons, Ltd","","en","","","","","Wiley Online Library","","Section: 13 _eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119896838.ch13 DOI: 10.1002/9781119896838.ch13","","C:\Users\gabra\Zotero\storage\UI6G38I8\9781119896838.html","","","software development; Agile methodologies; software quality; agile quality assurance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HSV583QQ","journalArticle","2019","Curumsing, Maheswaree Kissoon; Fernando, Niroshinie; Abdelrazek, Mohamed; Vasa, Rajesh; Mouzakis, Kon; Grundy, John","Emotion-oriented requirements engineering: A case study in developing a smart home system for the elderly","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2018.06.077","https://www.sciencedirect.com/science/article/pii/S0164121218301341","Smart home technology has received growing interest in recent years with a focus on automation and assistance, for example, Alexa, Google Home, Apple HomePod, and many cheap IoT devices. Better supporting elderly people to continue live in their home using smart home technology is a key target application. However, most of the existing smart home solutions for the elderly are not designed with people’s emotional goals in mind, leading to lack of adoption, lack of engagement, and failure of the technology. In this paper, we introduce an emotion-oriented requirements engineering approach to help identifying, modeling and evaluating emotional goals. We also explain how we used this technique to help us develop SofiHub - a new smart home platform for elderly people. SofiHub comprises a range of devices and software for sensing, interaction, passive monitoring, and emergency assistance. We have conducted multiple trials including initial field trials for elderly people in real houses. We have used our emotion-oriented requirements techniques to evaluate the participants’ emotional reactions before, during, and after trials to understand the impact of such technology on elderly people’s emotions to the SofiHub solution. Our analysis shows that SofiHub successfully alleviates their loneliness, makes them feel safer and cared about. We also found that the trial participants developed a strong relation with the system and hence, felt frustrated when SofiHub did not respond in ways expected or desired. We reflect on the lessons learned from the trials related to our emotion-oriented design and evaluation experimental approach, including refining our set of evaluation tools.","2019-01-01","2023-05-07 18:02:38","2023-05-07 18:02:38","2023-05-07 18:02:38","215-229","","","147","","Journal of Systems and Software","Emotion-oriented requirements engineering","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\UKL9XJN7\S0164121218301341.html","","","Elderly; Emotion-oriented development approach; Emotions; Independent living; Loneliness; Smart home","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IUA8FYCF","journalArticle","2014","Daneva, Maya; Damian, Daniela; Marchetto, Alessandro; Pastor, Oscar","Empirical research methodologies and studies in Requirements Engineering: How far did we come?","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2014.06.035","https://www.sciencedirect.com/science/article/pii/S0164121214001460","Since the inception of the RE conference series (1992), both researchers and practitioners in the RE community have acknowledged the significance of empirical evaluation as an instrument to gain knowledge about various aspects of RE phenomena and the validity of our research results. A significant number of empirical studies have been conducted in the search for knowledge about RE problems as well as evidence of successful and less successful application of proposed solutions. This editorial presents the progress empirical RE research has made since 1992. Based on a search in the Scopus digital library, we report from an analysis of peer-reviewed systematic literature reviews and mapping studies to showcase major areas of RE research that use methods from the Empirical Software Engineering paradigm. We summarize prior empirical research in RE and introduce the contributors to this special issue on empirical research methodologies and studies in RE.","2014-09-01","2023-05-07 18:03:10","2023-05-07 18:03:10","2023-05-07 18:03:10","1-9","","","95","","Journal of Systems and Software","Empirical research methodologies and studies in Requirements Engineering","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\TSIACEJS\S0164121214001460.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FYEGCMUZ","conferencePaper","2012","Yilmaz, Murat; O’Connor, Rory V.; Clarke, Paul","A Systematic Approach to the Comparison of Roles in the Software Development Processes","Software Process Improvement and Capability Determination","978-3-642-30439-2","","10.1007/978-3-642-30439-2_18","","The vision of building a successful software product requires teams of individuals equipped with a wide range of social and technical skills. Furthermore, by combining these skills with appropriate job roles, we should be able to improve the productivity of a software organization. In order to identify and compare different roles in software development activities, we conduct a systematic comparison of software development models, covering traditional approaches through to agile techniques. To compare the roles in the literature with industrial software landscapes, we use data from a survey conducted on 266 software practitioners to ascertain job roles in two middle size software companies, one of which uses traditional methods and in particular ISO/IEC 12207 for managing their software development activities while other uses a tailored agile methodology. In light of our interviews, we found that based on project specific needs, the roles used in industry vary significantly from the roles defined in literature.","2012","2023-05-07 18:03:26","2023-05-07 18:03:26","","198-209","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\3QE759SW\Yilmaz et al. - 2012 - A Systematic Approach to the Comparison of Roles i.pdf","","","Agile Software Development; Software Development Process; Agile Method; Software Development; Software Practitioner","Mas, Antonia; Mesquida, Antoni; Rout, Terry; O’Connor, Rory V.; Dorling, Alec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9ENEWU4K","journalArticle","2006","Karlström, Daniel; Runeson, Per","Integrating agile software development into stage-gate managed product development","Empirical Software Engineering","","1573-7616","10.1007/s10664-006-6402-8","https://doi.org/10.1007/s10664-006-6402-8","Agile methods have evolved as a bottom-up approach to software development. However, as the software in embedded products is only one part of development projects, agile methods must coexist with project management models typically of the stage-gate type. This paper presents a qualitative case study of two large independent software system projects that have used eXtreme Programming (XP) for software development within contexts of stage-gate project management models. The study is comprised of open ended interviews with managers as well as practitioners, followed by a structured, fully traceable, qualitative analysis. We conclude that it is possible to integrate XP in a gate model context. Key issues for success are the interfaces towards the agile subproject and management attitudes towards the agile approach.","2006-06-01","2023-05-07 18:04:47","2023-05-07 18:04:47","2023-05-07 18:04:47","203-225","","2","11","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\F5ELNJKD\Karlström and Runeson - 2006 - Integrating agile software development into stage-.pdf","","","Agile methods; Extreme programming; Case studies; Qualitative study; Stage-gate project management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4IRZL3VY","journalArticle","2012","Coelho, Evita; Basu, Anirban","Effort Estimation in Agile Software Development using Story Points","International Journal of Applied Information Systems","","22490868","10.5120/ijais12-450574","http://research.ijais.org/volume3/number7/ijais12-450574.pdf","Agile software development has been gaining popularity and replacing the traditional methods of developing software. However, estimating the size and effort in Agile Software development still remains a challenge. This paper gives an overview of the different size estimation methods traditionally used and discusses in details the method based on Story Points, which is at present the most widely used estimation technique in Agile Software Development. The paper describes the steps followed in Story Point based method and highlights the area which needs to be looked into further.","2012-08-13","2023-05-07 18:05:01","2023-05-07 18:05:01","2023-05-07 18:05:01","7-10","","7","3","","IJAIS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\V7UGZZ2T\Coelho and Basu - 2012 - Effort Estimation in Agile Software Development us.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QAJUPVDW","bookSection","2010","Abrahamsson, Pekka; Oza, Nilay; Siponen, Mikko T.","Agile Software Development Methods: A Comparative Review1","Agile Software Development: Current Research and Future Directions","978-3-642-12575-1","","","https://doi.org/10.1007/978-3-642-12575-1_3","Although agile software development methods have caught the attention of software engineers and researchers worldwide, scientific research still remains quite scarce. The aim of this study is to order and make sense of the different agile approaches that have been proposed. This comparative review is performed from the standpoint of using the following features as the analytical perspectives: project management support, life-cycle coverage, type of practical guidance, adaptability in actual use, type of research objectives and existence of empirical evidence. The results show that agile software development methods cover, without offering any rationale, different phases of the software development life-cycle and that most of these methods fail to provide adequate project management support. Moreover, quite a few methods continue to offer little concrete guidance on how to use their solutions or how to adapt them in different development situations. Empirical evidence after ten years of application remains quite limited. Based on the results, new directions on agile methods are outlined.","2010","2023-05-07 18:16:57","2023-05-07 18:16:57","2023-05-07 18:16:57","31-59","","","","","","Agile Software Development Methods","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/978-3-642-12575-1_3","","C:\Users\gabra\Zotero\storage\PFNWNMHS\Abrahamsson et al. - 2010 - Agile Software Development Methods A Comparative .pdf","","","Agile Development; Agile Method; Pair Programming; Software Development; Information System Development","Dingsøyr, Torgeir; Dybå, Tore; Moe, Nils Brede","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8CN36D6N","journalArticle","2009","Dyba, Tore; Dingsoyr, Torgeir","What Do We Know about Agile Software Development?","IEEE Software","","1937-4194","10.1109/MS.2009.145","","Agile software development has had a huge impact on how software is developed worldwide. We can view agile methods such as Extreme Programming (XP) and Scrum as a reaction to plan-based or traditional methods, which emphasize a ""rationalized, engineering-based approach, incorporating extensive planning, codified processes, and rigorous reuse. In contrast, agile methods address the challenge of an unpredictable world, emphasizing the value competent people and their relationships bring to software development. To clarify the effectiveness of agile methods, we reviewed the agile development literature and conducted a systematic study of what we know empirically about its benefits and limitations.","2009-09","2023-05-07 18:17:04","2023-05-07 18:17:04","","6-9","","5","26","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\4UIF6UIH\5222784.html","","","agile software development; Programming; Software development management; Collaborative software; scrum; Application software; empirical software engineering; extreme programming; lean software development; XP; Humans; Communication system control; Environmental management; evidence-based software engineering; Innovation management; ISO standards; research synthesis; Social factors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"E9QN59SR","journalArticle","2019","Alsaqaf, Wasim; Daneva, Maya; Wieringa, Roel","Quality requirements challenges in the context of large-scale distributed agile: An empirical study","Information and Software Technology","","0950-5849","10.1016/j.infsof.2019.01.009","https://www.sciencedirect.com/science/article/pii/S0950584918300739","Context Engineering quality requirements in agile projects does not fit organically with agile methods. Despite the agile community acknowledges this, little empirical evidence has been published on this topic. Objective This exploratory qualitative interview-based study explicates the challenging situations experienced by practitioners in engineering the quality requirements in the context of large-scale distributed agile projects. Moreover, this study describes the practices that agile distributed teams currently use which could contribute by dealing with the identified challenges. Method The challenging situations and possible mitigation practices were studied from the perspective of 17 practitioners from large distributed agile project teams in six organizations in The Netherlands. Qualitative data were collected using semi-structured, open-ended interviews. Qualitative coding techniques were used for data analysis, to identify the challenges of engineering quality requirements, the mechanisms behind the challenges and the practices used that could mitigate the impact of those challenges. Further, by using dialog mapping technique for qualitative data structuring, we have mapped the identified mechanisms and practices to the challenges. Results From the perspective of the participating practitioners, our exploratory study revealed 15 challenges classified in five categories: (1) team coordination and communication, (2) quality assurance, (3) quality requirements elicitation, (4) conceptual challenges, and (5) software architecture. The study has also disclosed 13 mechanisms behind the challenges and 9 practices that could mitigate the impact of those challenges. Conclusions The main contributions of the paper are: (1) the explication of the challenges from practitioners’ perspective and the comparison of our findings with previously published results, (2) the description of the mechanisms behind the challenges, and (3) the identification of the practices currently used by agile teams that could mitigate the impact of the challenges. The findings of this study provide useful input into the process of designing possible solution approaches to overcome the challenges.","2019-06-01","2023-05-07 18:17:06","2023-05-07 18:17:06","2023-05-07 18:17:05","39-55","","","110","","Information and Software Technology","Quality requirements challenges in the context of large-scale distributed agile","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\6RWAMQ55\Alsaqaf et al. - 2019 - Quality requirements challenges in the context of .pdf; C:\Users\gabra\Zotero\storage\N8FRDFUC\S0950584918300739.html","","","Requirements engineering; Interviews; Quality requirements; Agile large-scale distributed projects; Exploratory empirical research method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"24HQKU6V","journalArticle","2006","Lindgaard, Gitte; Dillon, Richard; Trbovich, Patricia; White, Rachel; Fernandes, Gary; Lundahl, Sonny; Pinnamaneni, Anu","User Needs Analysis and requirements engineering: Theory and practice","Interacting with Computers","","1873-7951","10.1016/j.intcom.2005.06.003","","Several comprehensive User Centred Design methodologies have been published in the last decade, but while they all focus on users, they disagree on exactly what activities should take place during the User Needs Analysis, what the end products of a User Needs Analysis should cover, how User Needs Analysis findings should be presented, and how these should be documented and communicated. This paper highlights issues in different stages of the User Needs Analysis that appear to cause considerable confusion among researchers and practitioners. It is our hope that the User-Centred Design community may begin to address these issues systematically. A case study is presented reporting a User Needs Analysis methodology and process as well as the user interface design of an application supporting communication among first responders in a major disaster. It illustrates some of the differences between the User-Centred Design and the Requirements Engineering communities and shows how and where User-Centred Design and Requirements Engineering methodologies should be integrated, or at least aligned, to avoid some of the problems practitioners face during the User Needs Analysis.","2006-01","2023-05-07 18:17:11","2023-05-07 18:17:11","","47-70","","1","18","","","User Needs Analysis and requirements engineering","","","","","","","","","","","","IEEE Xplore","","Conference Name: Interacting with Computers","","C:\Users\gabra\Zotero\storage\8BXYEC6S\8156001.html","","","Requirements engineering; User centered design; Integration; User Needs analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NSBJVCU2","conferencePaper","2015","Usman, Muhammad; Mendes, Emilia; Börstler, Jürgen","Effort estimation in agile software development: a survey on the state of the practice","Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering","978-1-4503-3350-4","","10.1145/2745802.2745813","https://doi.org/10.1145/2745802.2745813","Context: There are numerous studies on effort estimation in Agile Software Development (ASD) and the state of the art in this area has been recently documented in a Systematic Literature Review (SLR). However, to date there are no studies on the state of the practice in this area, focusing on similar issues to those investigated in the above-mentioned SLR. Objectives: The aim of this paper is to report on the state of the practice on effort estimation in ASD, focusing on a wide range of aspects such as the estimation techniques and effort predictors used, to name a few. Method: A survey was carried out using as instrument an on-line questionnaire answered by agile practitioners who have experience in effort estimation. Results: Data was collected from 60 agile practitioners from 16 different countries, and the main findings are: 1) Planning poker (63%), analogy (47%) and expert judgment (38%) are frequently practiced estimation techniques in ASD; 2) Story points is the most frequently (62%) employed size metric, used solo or in combination with other metrics (e.g., function points); 3) Team's expertise level and prior experience are most commonly used cost drivers; 4) 52% of the respondents believe that their effort estimates on average are under/over estimated by an error of 25% or more; 5) Most agile teams take into account implementation and testing activities during effort estimation; and 6) Estimation is mostly performed at sprint and release planning levels in ASD. Conclusions: Estimation techniques that rely on experts' subjective assessment are the ones used the most in ASD, with effort underestimation being the dominant trend. Further, the use of multiple techniques in combination and story points seem to present a positive association with estimation accuracy, and team-related cost drivers are the ones used by most agile teams. Finally, requirements and management related issues are perceived as the main reasons for inaccurate estimates.","2015-04-27","2023-05-07 18:17:18","2023-05-07 18:17:18","2023-05-07","1–10","","","","","","Effort estimation in agile software development","EASE '15","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","agile software development; empirical study; effort estimation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V3GK9NRI","bookSection","2008","Ambler, Scott W.","Tailoring Usability into Agile Software Development Projects","Maturing Usability: Quality in Software, Interaction and Value","978-1-84628-941-5","","","https://doi.org/10.1007/978-1-84628-941-5_4","Usability, user interface, and interaction design are among the group of vital, yet mostly overlooked, skills that all software developers require, yet few seem to have. This is just as true of agile developers as it is of traditional developers. This chapter examines both user experience (UEX) and agile software development (ASD) approaches, comparing and contrasting the underlying philosophies and practices of each. Using agile model-driven development (AMDD) as the foundation, it then describes strategies for tailoring UEX into agile methods. It is possible to address UEX concerns on agile projects, but it requires flexibility and a willingness to work together on the part of both UEX and ASD practitioners.","2008","2023-05-07 18:17:21","2023-05-07 18:17:21","2023-05-07 18:17:21","75-95","","","","","","","Human-Computer Interaction Series","","","","Springer","London","en","","","","","Springer Link","","DOI: 10.1007/978-1-84628-941-5_4","","","","","Agile Software Development; User Story; Agile Method; Capability Maturity Model; Interaction Design","Law, Effie Lai-Chong; Hvannberg, Ebba Thora; Cockton, Gilbert","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U5HZVC69","conferencePaper","2007","Auer, Sören; Herre, Heinrich","RapidOWL — An Agile Knowledge Engineering Methodology","Perspectives of Systems Informatics","978-3-540-70881-0","","10.1007/978-3-540-70881-0_36","","The analysis of the application of the existing knowledge engineering methodologies and tools shows that they are up to now virtually not used in practice (see [13, page 16]). This stands in contrast to the often proclaimed necessity for knowledge engineering. What can be the reason for this discrepancy? Most of the existing knowledge engineering methodologies adopt techniques and apply process models from software engineering. However, in many scenarios required knowledge engineering tasks reveal specific characteristics, which an knowledge engineering methodology should be aware of. In the following, we describe briefly some specific characteristics of Knowledge Engineering important for Rapid- OWL.","2007","2023-05-07 18:17:50","2023-05-07 18:17:50","","424-430","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Agile Software Development; Domain Expert; Knowledge Engineer; Knowledge Engineering; Open Source Software Project","Virbitskaite, Irina; Voronkov, Andrei","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RXBBEZ9S","journalArticle","2008","Qumer, A.; Henderson-Sellers, B.","A framework to support the evaluation, adoption and improvement of agile methods in practice","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2007.12.806","https://www.sciencedirect.com/science/article/pii/S0164121208000113","Agile methods are often seen as providing ways to avoid overheads typically perceived as being imposed by traditional software development environments. However, few organizations are psychologically or technically able to take on an agile approach rapidly and effectively. Here, we describe a number of approaches to assist in such a transition. The Agile Software Solution Framework (ASSF) provides an overall context for the exploration of agile methods, knowledge and governance and contains an Agile Toolkit for quantifying part of the agile process. These link to the business aspects of software development so that the business value and agile process are well aligned. Finally, we describe how these theories are applied in practice with two industry case studies using the Agile Adoption and Improvement Model (AAIM).","2008-11-01","2023-05-07 18:17:55","2023-05-07 18:17:55","2023-05-07 18:17:55","1899-1919","","11","81","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\XXGZX9KD\S0164121208000113.html","","","Agile methodologies; Framework; Industry case studies; Transition to agile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S29G47Q6","journalArticle","2006","Ebert, C.","Understanding the product life cycle: four key requirements engineering techniques","IEEE Software","","1937-4194","10.1109/MS.2006.88","","Many enterprises frequently commit to requirements and contracts to boost short- term revenues without properly aligning sales, product management, project management, and marketing. Such misalignment results in insufficient capacity planning or product-development resource allocation, thus delaying projects. For this field study, Alcatel's R&D effectiveness team investigated products and solutions within Alcatel's different business groups. We extracted in the first part of the study four seemingly successful product life-cycle management techniques. Then we quantitatively evaluated the impacts of these techniques on those projects. Results verified that when used in parallel, the four techniques can indeed significantly reduce delays","2006-05","2023-05-07 18:18:05","2023-05-07 18:18:05","","19-25","","3","23","","","Understanding the product life cycle","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\FPQ5WW66\1628935.html","","","Project management; requirements engineering; Companies; project management; Job shop scheduling; Risk analysis; process improvement; Engineering management; Cost benefit analysis; Delay effects; Delay estimation; Maintenance engineering; PLM; portfolio management; product life cycle; product management; Reliability engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4A53PC22","conferencePaper","2004","Manhart, P.; Schneider, K.","Breaking the ice for agile development of embedded software: an industry experience report","Proceedings. 26th International Conference on Software Engineering","","","10.1109/ICSE.2004.1317460","","A software engineering department in a Daimler-Chrysler business unit was highly professional at developing embedded software for busses and coaches. However, customer specific add-ons were a regular source of hassle. Simple as they are, those individual requirements have to be implemented in hours or days rather than weeks or months. Poor quality or late upload into the bus hardware would cause serious cost and overhead. Established software engineering methods were considered inadequate and needed to be cut short. Agile methods offer guidance when quality, flexibility and high speed need to be reconciled. However, we did not adopt any full agile method, but added single agile practices to our process improvement toolbox. We suggested a number of classical process improvement activities (such as more systematic documentation and measurement) and combined them with agile elements (e.g. Test First Process). This combination seemed to foster acceptance of agile ideas and may help us to break the ice for a cautious extension of agile process improvement.","2004-05","2023-05-07 18:18:17","2023-05-07 18:18:17","","378-386","","","","","","Breaking the ice for agile development of embedded software","","","","","","","","","","","","IEEE Xplore","","ISSN: 0270-5257","","C:\Users\gabra\Zotero\storage\FDJB9UE5\1317460.html","","","Documentation; Software engineering; Hardware; Computer industry; Testing; Costs; Software measurement; Embedded software; Coordinate measuring machines; Ice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings. 26th International Conference on Software Engineering","","","","","","","","","","","","","","",""
"BS2U3Q5F","journalArticle","2016","Bass, Julian M.","Artefacts and agile method tailoring in large-scale offshore software development programmes","Information and Software Technology","","0950-5849","10.1016/j.infsof.2016.03.001","https://www.sciencedirect.com/science/article/pii/S0950584916300350","Context: Large-scale offshore software development programmes are complex, with challenging deadlines and a high risk of failure. Agile methods are being adopted, despite the challenges of coordinating multiple development teams. Agile processes are tailored to support team coordination. Artefacts are tangible products of the software development process, intended to ensure consistency in the approach of teams on the same development programme. Objective: This study aims to increase understanding of how development processes are tailored to meet the needs of large-scale offshore software development programmes, by focusing on artefact inventories used in the development process. Method: A grounded theory approach using 46 practitioner interviews, supplemented with documentary sources and observations, in nine international companies was adopted. The grounded theory concepts of open coding, memoing, constant comparison and saturation were used in data analysis. Results: The study has identified 25 artefacts, organised into five categories: feature, sprint, release, product and corporate governance. It was discovered that conventional agile artefacts are enriched with artefacts associated with plan-based methods in order to provide governance. The empirical evidence collected in the study has been used to identify a primary owner of each artefact and map each artefact to specific activities within each of the agile roles. Conclusion: The development programmes in this study create agile and plan-based artefacts to improve compliance with enterprise quality standards and technology strategies, whilst also mitigating risk of failure. Management of these additional artefacts is currently improvised because agile development processes lack corresponding ceremonies.","2016-07-01","2023-05-07 18:18:21","2023-05-07 18:18:21","2023-05-07 18:18:21","1-16","","","75","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\SUHPU57S\S0950584916300350.html; C:\Users\gabra\Zotero\storage\IZCPDRC3\Bass - 2016 - Artefacts and agile method tailoring in large-scal.pdf","","","Agile software development; Scrum; Enterprise; Grounded theory; Large-scale; Offshore; Outsourced; Process tailoring; Software development artefacts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N3CTZ98Z","journalArticle","2007","Turner, Dr Richard","Toward Agile Systems Engineering Processes","","","","","","","2007","2023-05-07 18:19:15","2023-05-07 18:19:15","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\EV65HN2A\Turner - 2007 - Toward Agile Systems Engineering Processes.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GWCIP3DY","conferencePaper","2010","Cruzes, Daniela S.; Dybå, Tore","Synthesizing evidence in software engineering research","Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement","978-1-4503-0039-1","","10.1145/1852786.1852788","https://doi.org/10.1145/1852786.1852788","Synthesizing the evidence from a set of studies that spans many countries and years, and that incorporates a wide variety of research methods and theoretical perspectives, is probably the single most challenging task of performing a systematic review. In this paper, we perform a tertiary review to assess the types and methods of research synthesis in systematic reviews in software engineering. Almost half of the 31 studies included in our review did not contain any synthesis; of the ones that did, two thirds performed a narrative or a thematic synthesis. The results show that, despite the focus on systematic reviews, there is, currently, limited attention to research synthesis in software engineering. This needs to change and a repertoire of synthesis methods needs to be an integral part of systematic reviews to increase their significance and utility for research and practice.","2010-09-16","2023-05-07 18:19:16","2023-05-07 18:19:16","2023-05-07","1–10","","","","","","","ESEM '10","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","evidence-based software engineering; research synthesis; mixed methods; qualitative; quantitative; systematic reviews","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S88A3B68","journalArticle","2012","Strode, Diane E.; Huff, Sid L.; Hope, Beverley; Link, Sebastian","Coordination in co-located agile software development projects","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2012.02.017","https://www.sciencedirect.com/science/article/pii/S0164121212000465","Agile software development provides a way to organise the complex task of multi-participant software development while accommodating constant project change. Agile software development is well accepted in the practitioner community but there is little understanding of how such projects achieve effective coordination, which is known to be critical in successful software projects. A theoretical model of coordination in the agile software development context is presented based on empirical data from three cases of co-located agile software development. Many practices in these projects act as coordination mechanisms, which together form a coordination strategy. Coordination strategy in this context has three components: synchronisation, structure, and boundary spanning. Coordination effectiveness has two components: implicit and explicit. The theoretical model of coordination in agile software development projects proposes that an agile coordination strategy increases coordination effectiveness. This model has application for practitioners who want to select appropriate practices from agile methods to ensure they achieve coordination coverage in their project. For the field of information systems development, this theory contributes to knowledge of coordination and coordination effectiveness in the context of agile software development.","2012-06-01","2023-05-07 18:19:21","2023-05-07 18:19:21","2023-05-07 18:19:21","1222-1238","","6","85","","Journal of Systems and Software","","Special Issue: Agile Development","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\MU5A74NJ\S0164121212000465.html","","","Agile methods; Scrum; Agile software development project; Coordination effectiveness; Coordination strategy; Coordination Theory; Extreme Programming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QQFEYJJ3","journalArticle","2008","Qumer, A.; Henderson-Sellers, B.","An evaluation of the degree of agility in six agile methods and its applicability for method engineering","Information and Software Technology","","0950-5849","10.1016/j.infsof.2007.02.002","https://www.sciencedirect.com/science/article/pii/S0950584907000067","While agile methods are in use in industry, little research has been undertaken into what is meant by agility and how a supposed agile method can be evaluated with regard to its veracity to belong to this category of software development methodological approaches. Here, an analytical framework, called 4-DAT, is developed and applied to six well-known agile methods and, for comparison, two traditional methods. The results indicate the degree of agility to be found in each method, from which a judgement can be made as to whether the appellation of “agile” to that method is appropriate. This information is shown to be useful, for example, when constructing a methodology from method fragments (method engineering) and when comparing agile and traditional methods.","2008-03-01","2023-05-07 18:19:32","2023-05-07 18:19:32","2023-05-07 18:19:32","280-295","","4","50","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\AUAEYQAC\S0950584907000067.html","","","Software engineering; Agile methods; Method engineering; Methodology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZRBCNZC9","conferencePaper","2019","Dhir, Saru; Kumar, Deepak; Singh, V. B.","Success and Failure Factors that Impact on Project Implementation Using Agile Software Development Methodology","Software Engineering","978-981-10-8848-3","","10.1007/978-981-10-8848-3_62","","In the agile software development, there are different factors behind the success and failure of projects. Paper represents the success, failure, and mitigation factors in agile development. A case study is presented depending on all of these factors after the completion of small projects. Each team grouped into 10 team members and developed the project with different approaches. Each group maintained the documentation from initial user stories and factors employed on the projects. Final outcomes are observed based on the analysis of efficiency, accuracy, time management, risk analysis, and product quality of the project. Final outcomes are identified using the different approaches.","2019","2023-05-07 18:21:11","2023-05-07 18:21:11","","647-654","","","","","","","Advances in Intelligent Systems and Computing","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Scrum; Agile development process; Factors","Hoda, M. N.; Chauhan, Naresh; Quadri, S. M. K.; Srivastava, Praveen Ranjan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6SXQXJHW","journalArticle","","Cho, Juyun Joey","An Exploratory Study on Issues and Challenges of Agile Software Development with Scrum","","","","","","","","2023-05-07 18:21:32","2023-05-07 18:21:32","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\JKZPHZJV\Cho - An Exploratory Study on Issues and Challenges of A.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ABP6K8JA","journalArticle","2016","Dermeval, Diego; Vilela, Jéssyka; Bittencourt, Ig Ibert; Castro, Jaelson; Isotani, Seiji; Brito, Patrick; Silva, Alan","Applications of ontologies in requirements engineering: a systematic review of the literature","Requirements Engineering","","1432-010X","10.1007/s00766-015-0222-6","https://doi.org/10.1007/s00766-015-0222-6","There is an increase use of ontology-driven approaches to support requirements engineering (RE) activities, such as elicitation, analysis, specification, validation and management of requirements. However, the RE community still lacks a comprehensive understanding of how ontologies are used in RE process. Thus, the main objective of this work is to investigate and better understand how ontologies support RE as well as identify to what extent they have been applied to this field. In order to meet our goal, we conducted a systematic literature review (SLR) to identify the primary studies on the use of ontologies in RE, following a predefined review protocol. We then identified the main RE phases addressed, the requirements modelling styles that have been used in conjunction with ontologies, the types of requirements that have been supported by the use of ontologies and the ontology languages that have been adopted. We also examined the types of contributions reported and looked for evidences of the benefits of ontology-driven RE. In summary, the main findings of this work are: (1) there are empirical evidences of the benefits of using ontologies in RE activities both in industry and academy, specially for reducing ambiguity, inconsistency and incompleteness of requirements; (2) the majority of studies only partially address the RE process; (3) there is a great diversity of RE modelling styles supported by ontologies; (4) most studies addressed only functional requirements; (5) several studies describe the use/development of tools to support different types of ontology-driven RE approaches; (6) about half of the studies followed W3C recommendations on ontology-related languages; and (7) a great variety of RE ontologies were identified; nevertheless, none of them has been broadly adopted by the community. Finally, we conclude this work by showing several promising research opportunities that are quite important and interesting but underexplored in current research and practice.","2016-11-01","2023-05-07 18:24:18","2023-05-07 18:24:18","2023-05-07 18:24:18","405-437","","4","21","","Requirements Eng","Applications of ontologies in requirements engineering","","","","","","","en","","","","","Springer Link","","","","","","","Systematic literature review; Requirements engineering; Ontologies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8P8BI4B8","book","2012","Ambler, Scott W.; Lines, Mark","Disciplined Agile Delivery: A Practitioner's Guide to Agile Software Delivery in the Enterprise","","978-0-13-281010-4","","","","Master IBM’s Breakthrough DAD Process Framework for Succeeding with Agile in Large, Complex, Mission-Critical IT Projects    It is widely recognized that moving from traditional to agile approaches to build software solutions is a critical source of competitive advantage. Mainstream agile approaches that are indeed suitable for small projects require significant tailoring for larger, complex enterprise projects. In Disciplined Agile Delivery, Scott W. Ambler and Mark Lines introduce IBM’s breakthrough Disciplined Agile Delivery (DAD) process framework, which describes how to do this tailoring. DAD applies a more disciplined approach to agile development by acknowledging and dealing with the realities and complexities of a portfolio of interdependent program initiatives.   Ambler and Lines show how to extend Scrum with supplementary agile and lean strategies from Agile Modeling (AM), Extreme Programming (XP), Kanban, Unified Process (UP), and other proven methods to provide a hybrid approach that is adaptable to your organization’s unique needs. They candidly describe what practices work best, why they work, what the trade-offs are, and when to consider alternatives, all within the context of your situation.    Disciplined Agile Delivery addresses agile practices across the entire lifecycle, from requirements, architecture, and development to delivery and governance. The authors show how these best-practice techniques fit together in an end-to-end process for successfully delivering large, complex systems--from project initiation through delivery.   Coverage includes  Scaling agile for mission-critical enterprise endeavors Avoiding mistakes that drive poorly run agile projects to chaos Effectively initiating an agile project Transitioning as an individual to agile Incrementally building consumable solutions Deploying agile solutions into complex production environments Leveraging DevOps, architecture, and other enterprise disciplines Adapting your governance strategy for agile projects    Based on facts, research, and extensive experience, this book will be an indispensable resource for every enterprise software leader and practitioner--whether they’re seeking to optimize their existing agile/Scrum process or improve the agility of an iterative process.","2012-05-31","2023-05-07 18:24:22","2023-05-07 18:24:22","","","544","","","","","Disciplined Agile Delivery","","","","","IBM Press","","en","","","","","Google Books","","Google-Books-ID: CwvBEKsCY2gC","","","https://books.google.co.in/books?id=CwvBEKsCY2gC","","Computers / Software Development & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"99MVEMP2","journalArticle","2013","Stankovic, Dragan; Nikolic, Vesna; Djordjevic, Miodrag; Cao, Dac-Buu","A survey study of critical success factors in agile software projects in former Yugoslavia IT companies","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2013.02.027","https://www.sciencedirect.com/science/article/pii/S0164121213000496","Determining the factors that have an influence on the success of the software development projects has been the focus of extensive research for more than 30 years. In recent years agile methodology of software development has become the dominant one for all kinds of software development projects. In this paper we present the results of empirical study for determining critical factors that influence the success of agile software projects which we conducted among senior developers and project managers from IT companies located in the former Yugoslavia countries within South Eastern Europe (SEE) region. This study is inspired by the similar study conducted 5 years ago (Chow and Cao, 2008). With this study we were not able to confirm the model developed in the previous study. Moreover it disconfirmed not only part of the factors, but very much questioned the whole scheme. However, we were able to shed additional light regarding agile software development in former Yugoslavia countries from SEE region as a reference region for investigating outsourced projects done in agile way.","2013-06-01","2023-05-07 18:24:29","2023-05-07 18:24:29","2023-05-07 18:24:29","1663-1678","","6","86","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\TK6WJ985\S0164121213000496.html","","","Agile methods; Software development; Critical success factors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UZK22TGA","conferencePaper","2007","Lee, Jason Chong; McCrickard, D. Scott","Towards Extreme(ly) Usable Software: Exploring Tensions Between Usability and Agile Software Development","Agile 2007 (AGILE 2007)","","","10.1109/AGILE.2007.63","","Design is an inherently multidisciplinary endeavor. This raises the question of how to develop systems in ways that can best leverage the perspectives, practices, and knowledge bases of these different areas. Agile software development and usability engineering both address important aspects of system design, but there are tensions between the methods that make them difficult to integrate. This work presents a development approach that draws from extreme programming (XP), a widely practiced agile software development process, and scenario-based design (SBD), an established usability engineering process. It describes three key questions that need to be addressed for agile software development methods and usability engineering practices to work together effectively, and it introduces interface architectures and design representations that can address these questions.","2007-08","2023-05-07 18:24:34","2023-05-07 18:24:34","","59-71","","","","","","Towards Extreme(ly) Usable Software","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\8DDXAAP9\4293576.html","","","Design engineering; Programming; Usability; Computer architecture; Software systems; Computer science; Best practices; Probes; Process design; Surges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Agile 2007 (AGILE 2007)","","","","","","","","","","","","","","",""
"Z2DZBVXI","conferencePaper","2009","Kanode, Christopher M.; Haddad, Hisham M.","Software Engineering Challenges in Game Development","2009 Sixth International Conference on Information Technology: New Generations","","","10.1109/ITNG.2009.74","","In software engineering (SE), video game development is unique yet similar to other software endeavors. It is unique in that it combines the work of teams covering multiple disciplines (art, music, acting, programming, etc.), and that engaging game play is sought after through the use of prototypes and iterations. With that, game development is faced with challenges that can be addressed using traditional SE practices. The industry needs to adopt sound SE practices for their distinct needs such as managing multimedia assets and finding the ldquofunrdquo in game play. The industry must take on the challenges by evolving SE methods to meet their needs. This work investigates these challenges and highlights engineering practices to mitigate these challenges.","2009-04","2023-05-07 18:24:44","2023-05-07 18:24:44","","260-265","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\YJF9WJTM\5070627.html","","","Design engineering; Project management; Software engineering; Prototypes; Software prototyping; project management; Games; challenges; Art; Asset management; Acoustical engineering; diverse assets; process; project scope; publishing; Toy industry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 Sixth International Conference on Information Technology: New Generations","","","","","","","","","","","","","","",""
"QDN8T8BM","conferencePaper","2008","Obendorf, Hartmut; Finck, Matthias","Scenario-based usability engineering techniques in agile development processes","CHI '08 Extended Abstracts on Human Factors in Computing Systems","978-1-60558-012-8","","10.1145/1358628.1358649","https://doi.org/10.1145/1358628.1358649","Improving the users' experience is a common goal of both software engineering and usability engineering. However, although practitioners of both disciplines collaborate in practice, development processes often rely on a sequential division of labor, and thus limit the effectiveness of a meeting of different perspectives. In this paper, we report on experiences we made in both academia and industry as we put an agile development process pattern to the test -- combining Extreme Programming and Scenario-Based Usability Engineering, based on a blend of perspectives on equal terms.","2008-04-05","2023-05-07 18:24:51","2023-05-07 18:24:51","2023-05-07","2159–2166","","","","","","","CHI EA '08","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","software engineering; extreme programming; contextual design; scenario-based design; usability engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7CH87Z5Q","webpage","","","Agile Software Development: Principles, Patterns, and Practices","Guide books","","","","https://dl.acm.org/doi/abs/10.5555/515230","From the Publisher: Best selling author and world-renowned software development expert Robert C. Martin shows how to solve the most challenging problems facing software developers, project managers...","","2023-05-07 18:24:53","2023-05-07 18:24:53","2023-05-07 18:24:53","","","","","","","Agile Software Development","","","","","","","EN","","","","","","","Archive Location: world DOI: 10.5555/515230","","C:\Users\gabra\Zotero\storage\2MKXD59V\515230.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U4Z5WRYF","journalArticle","2018","","From Waterfall to Agile software: Development models in the IT sector, 2006 to 2018. Impacts on company management","Journal of International Studies","","2071-8330, 2306-3483","","https://www.ceeol.com/search/article-detail?id=718102","The IT sector has been one of the most innovative fields, encountering tremendous development in the last three decades. As many other sectors of activity have been also digitalized, new software development models have been established due to changing customer needs, as well as due to the increased pressure of innovation necessity. This has influenced the traditional models of software development management in the direction of more complex organizations matrices and cooperation between several layers of management, employees and other departments. The objective of the present paper is to determine the main software development models used in the IT sector between 2006-2018, as well as their impact on companies’ management. For this, Delphi method with interviews and questionnaires was applied. The results reveal the evident trend towards the Agile software development model, that implies rapid implementation of new software features in order to satisfy new market needs. The relevance of the present paper lies in the fact that as technology dynamics change, software development models evolve, this aspect being worthy of observation on the company level. Although such models have been widely described in scientific literature by now, few studies have provided insights on the company level regarding specific features and changes in software development models.","2018","2023-05-07 18:25:45","2023-05-07 18:25:45","2023-05-07 18:25:45","315-325","","2","11","","","From Waterfall to Agile software","","","","","","","English","","","","","www.ceeol.com","","Publisher: Fundacja Centrum Badań Socjologicznych","","","","","Agile; software development; Waterfall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LAUFS2PX","conferencePaper","2013","Dick, Markus; Drangmeister, Jakob; Kern, Eva; Naumann, Stefan","Green software engineering with agile methods","2013 2nd International Workshop on Green and Sustainable Software (GREENS)","","","10.1109/GREENS.2013.6606425","","The energy consumption of information and communication technology (ICT) is still increasing. Since several concepts regarding hardware solutions for Green IT exist, the contribution of software to Green IT is still not well investigated. This comprises the production and the usage impact of software on energy consumption. In our paper, we discuss this contribution. Especially, we present a model that integrates Green IT aspects into software engineering processes with agile methods in order to produce “greener” software from scratch.","2013-05","2023-05-07 18:31:28","2023-05-07 18:31:28","","78-85","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\FU88KKVJ\6606425.html","","","Software engineering; Software; Software Engineering; Measurement; Agile Methods; Biological system modeling; Energy consumption; Green IT; Green products; Green Software Engineering; Sustainable development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 2nd International Workshop on Green and Sustainable Software (GREENS)","","","","","","","","","","","","","","",""
"RC6NM2DW","conferencePaper","2007","Herbsleb, James D.","Global Software Engineering: The Future of Socio-technical Coordination","Future of Software Engineering (FOSE '07)","","","10.1109/FOSE.2007.11","","Globally-distributed projects are rapidly becoming the norm for large software systems, even as it becomes clear that global distribution of a project seriously impairs critical coordination mechanisms. In this paper, I describe a desired future for global development and the problems that stand in the way of achieving that vision. I review research and lay out research challenges in four critical areas: software architecture, eliciting and communicating requirements, environments and tools, and orchestrating global development. I conclude by noting the need for a systematic understanding of what drives the need to coordinate and effective mechanisms for bringing it about.","2007-05","2023-05-07 18:31:36","2023-05-07 18:31:36","","188-198","","","","","","Global Software Engineering","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\TP3KPY2S\4221620.html; C:\Users\gabra\Zotero\storage\2GJ3QCVR\Herbsleb - 2007 - Global Software Engineering The Future of Socio-t.pdf","","","Collaborative software; Collaborative work; Software engineering; Software architecture; Computer industry; Software systems; Open source software; Collaborative tools; International collaboration; Computer science","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Future of Software Engineering (FOSE '07)","","","","","","","","","","","","","","",""
"BRD3PW4U","journalArticle","2012","Broman, David; Sandahl, Kristian; Abu Baker, Mohamed","The Company Approach to Software Engineering Project Courses","IEEE Transactions on Education","","1557-9638","10.1109/TE.2012.2187208","","Teaching larger software engineering project courses at the end of a computing curriculum is a way for students to learn some aspects of real-world jobs in industry. Such courses, often referred to as capstone courses, are effective for learning how to apply the skills they have acquired in, for example, design, test, and configuration management. However, these courses are typically performed in small teams, giving only a limited realistic perspective of problems faced when working in real companies. This paper describes an alternative approach to classic capstone projects, with the aim of being more realistic from an organizational, process, and communication perspective. This methodology, called the company approach, is described by intended learning outcomes, teaching/learning activities, and assessment tasks. The approach is implemented and evaluated in a larger Master's student course.","2012-11","2023-05-07 18:31:43","2023-05-07 18:31:43","","445-452","","4","55","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Education","","C:\Users\gabra\Zotero\storage\G54P6URK\Broman et al. - 2012 - The Company Approach to Software Engineering Proje.pdf","","","Software engineering; Companies; Planning; Industries; Computer science; Capstone projects; company approach; constructive alignment; Education; software engineering (SE)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JEWYQH3H","journalArticle","2009","Vidgen, Richard; Wang, Xiaofeng","Coevolving Systems and the Organization of Agile Software Development","Information Systems Research","","1047-7047","10.1287/isre.1090.0237","https://pubsonline.informs.org/doi/abs/10.1287/isre.1090.0237","Despite the popularity of agile methods in software development and increasing adoption by organizations there is debate about what agility is and how it is achieved. The debate suffers from a lack of understanding of agile concepts and how agile software development is practiced. This paper develops a framework for the organization of agile software development that identifies enablers and inhibitors of agility and the emergent capabilities of agile teams. The work is grounded in complex adaptive systems (CAS) and draws on three principles of coevolving systems: match coevolutionary change rate, maximize self-organizing, and synchronize exploitation and exploration. These principles are used to study the processes of two software development teams, one a team using eXtreme Programming (XP) and the other a team using a more traditional, waterfall-based development cycle. From the cases a framework for the organization of agile software development is developed. Time pacing, self-management with discipline and routinization of exploration are among the agile enablers found in the cases studies while event pacing, centralized management, and lack of resources allocated to exploration are found to be inhibitors to agility. Emergent capabilities of agile teams that are identified from the research include coevolution of business value, sustainable working with rhythm, sharing and team learning, and collective mindfulness.","2009-09","2023-05-07 18:32:10","2023-05-07 18:32:10","2023-05-07 18:32:10","355-376","","3","20","","","","","","","","","","","","","","","pubsonline.informs.org (Atypon)","","Publisher: INFORMS","","C:\Users\gabra\Zotero\storage\LT4X7JFV\Vidgen and Wang - 2009 - Coevolving Systems and the Organization of Agile S.pdf","","","agile software development; innovation; complex adaptive systems; coevolving systems; mindfulness; rhythm; time-pacing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YZKHITQ2","journalArticle","2017","Vilela, Jéssyka; Castro, Jaelson; Martins, Luiz Eduardo G.; Gorschek, Tony","Integration between requirements engineering and safety analysis: A systematic literature review","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2016.11.031","https://www.sciencedirect.com/science/article/pii/S0164121216302333","Context: Safety-Critical Systems (SCS) require more sophisticated requirements engineering (RE) approaches as inadequate, incomplete or misunderstood requirements have been recognized as a major cause in many accidents and safety-related catastrophes. Objective: In order to cope with the complexity of specifying SCS by RE, we investigate the approaches proposed to improve the communication or integration between RE and safety engineering in SCS development. We analyze the activities that should be performed by RE during safety analysis, the hazard/safety techniques it could use, the relationships between safety information that it should specify, the tools to support safety analysis as well as integration benefits between these areas. Method: We use a Systematic Literature Review (SLR) as the basis for our work. Results: We developed four taxonomies to help RE during specification of SCS that classify: techniques used in (1) hazard analysis; (2) safety analysis; (3) safety-related information and (4) a detailed set of information regarding hazards specification. Conclusions: This paper is a step towards developing a body of knowledge in safety concerns necessary to RE in the specification of SCS that is derived from a large-scale SLR. We believe the results will benefit both researchers and practitioners.","2017-03-01","2023-05-07 18:32:16","2023-05-07 18:32:16","2023-05-07 18:32:15","68-92","","","125","","Journal of Systems and Software","Integration between requirements engineering and safety analysis","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\NXSEPZPK\S0164121216302333.html","","","Systematic literature review; Requirements engineering; Communication; Safety-critical systems; Integration; Safety analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LN8RPDLR","conferencePaper","2012","Schroeder, Andreas; Klarl, Annabelle; Mayer, Philip; Kroiß, Christian","Teaching agile software development through lab courses","Proceedings of the 2012 IEEE Global Engineering Education Conference (EDUCON)","","","10.1109/EDUCON.2012.6201194","","With the days of the lone coder long gone, it is critical in our education of young computer scientists to lay particular emphasis on the “softer” spots of software development: How to organize a development process, how to deal with teams of software engineers with different skills and motivations, and how to produce outstanding software despite hard deadlines and (ideally) a 40-hour-week. In this paper, we report on the setup, execution, and results of two software development labs with a specific focus on agile methodologies conducted in 2010 and 2011 at our university. Not only are agile methods widespread in practice today; with their focus on human interaction and work-life balance, we believe that experiencing a full agile product development cycle in the risk-free academic environment is a benefit not only for our students' technical skills, but to their social skills as well.","2012-04","2023-05-07 18:32:19","2023-05-07 18:32:19","","1-10","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2165-9567","","C:\Users\gabra\Zotero\storage\XV4TBG4M\6201194.html","","","Programming; Software; Unified modeling language; Internet; Games; Libraries; Skeleton","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the 2012 IEEE Global Engineering Education Conference (EDUCON)","","","","","","","","","","","","","","",""
"ZNX2I5MJ","journalArticle","2011","Laanti, Maarit; Salo, Outi; Abrahamsson, Pekka","Agile methods rapidly replacing traditional methods at Nokia: A survey of opinions on agile transformation","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.11.010","https://www.sciencedirect.com/science/article/pii/S0950584910002119","Context Many organizations have started to deploy agile methods, but so far there exist only a few studies on organization-wide transformations. Are agile methods here to stay? Some claim that agile software development methods are in the mainstream adoption phase in the software industry, while others hope that those are a passing fad. The assumption here is that if agile would not provide real improvement, adopters would be eager at first but turn pessimistic after putting it into practice. Objective Despite the growing amount of anecdotal evidence on the success of agile methods across a wide range of different real-life development settings, scientific studies remain scarce. Even less is known about the perception of the impacts of agile transformation when it is deployed in a very large software development environment, and whether agile methods are here to stay. This study aims to fill that gap by providing evidence from a large-scale agile transformation within Nokia. While we have yet to confirm these findings with solid quantitative data, we believe that the perception of the impacts already pinpoints the direction of the impacts of large-scale agile transformation. Method The data were collected using a questionnaire. The population of the study contains more than 1000 respondents in seven different countries in Europe, North America, and Asia. Results The results reveal that most respondents agree on all accounts with the generally claimed benefits of agile methods. These benefits include higher satisfaction, a feeling of effectiveness, increased quality and transparency, increased autonomy and happiness, and earlier detection of defects. Finally, 60% of respondents would not like to return to the old way of working. Conclusion While the perception of the impact of agile methods is predominantly positive, several challenge areas were discovered. However, based on this study, agile methods are here to stay.","2011-03-01","2023-05-07 18:32:26","2023-05-07 18:32:26","2023-05-07 18:32:26","276-290","","3","53","","Information and Software Technology","Agile methods rapidly replacing traditional methods at Nokia","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\9E99WVA5\S0950584910002119.html","","","Software engineering; Agile software development; Agile deployment; Software processes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CT67A4WM","conferencePaper","2013","Fernández, Daniel Méndez; Wagner, Stefan","Naming the pain in requirements engineering: design of a global family of surveys and first results from Germany","Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering","978-1-4503-1848-8","","10.1145/2460999.2461027","https://doi.org/10.1145/2460999.2461027","Context: For many years, we have observed industry struggling in defining a high quality requirements engineering (RE) and researchers trying to understand industrial expectations and problems. Although we are investigating the discipline with a plethora of empirical studies, those studies either concentrate on validating specific methods or on single companies or countries. Therefore, they allow only for limited empirical generalisations. Objective: To lay an empirical and generalisable foundation about the state of the practice in RE, we aim at a series of open and reproducible surveys that allow us to steer future research in a problem-driven manner. Method: We designed a globally distributed family of surveys in joint collaborations with different researchers from different countries. The instrument is based on an initial theory inferred from available studies. As a long-term goal, the survey will be regularly replicated to manifest a clear understanding on the status quo and practical needs in RE. In this paper, we present the design of the family of surveys and first results of its start in Germany. Results: Our first results contain responses from 30 German companies. The results are not yet generalisable, but already indicate several trends and problems. For instance, a commonly stated problem respondents see in their company standards are artefacts being underrepresented, and important problems they experience in their projects are incomplete and inconsistent requirements. Conclusion: The results suggest that the survey design and instrument are well-suited to be replicated and, thereby, to create a generalisable empirical basis of RE in practice.","2013-04-14","2023-05-07 18:32:27","2023-05-07 18:32:27","2023-05-07","183–194","","","","","","Naming the pain in requirements engineering","EASE '13","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\MN7MPTK5\Fernández and Wagner - 2013 - Naming the pain in requirements engineering desig.pdf","","","requirements engineering; family of studies; survey research","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8RZM8G9D","book","2009","Hazzan, Orit; Dubinsky, Yael","Agile Software Engineering","","978-1-84800-199-2","","","","Overview and Goals The agile approach for software development has been applied more and more extensively since the mid nineties of the 20th century. Though there are only about ten years of accumulated experience using the agile approach, it is currently conceived as one of the mainstream approaches for software development. This book presents a complete software engineering course from the agile angle. Our intention is to present the agile approach in a holistic and compreh- sive learning environment that fits both industry and academia and inspires the spirit of agile software development. Agile software engineering is reviewed in this book through the following three perspectives: l The Human perspective, which includes cognitive and social aspects, and refers to learning and interpersonal processes between teammates, customers, and management. l The Organizational perspective, which includes managerial and cultural aspects, and refers to software project management and control. l The Technological perspective, which includes practical and technical aspects, and refers to design, testing, and coding, as well as to integration, delivery, and maintenance of software products. Specifically, we explain and analyze how the explicit attention that agile software development gives these perspectives and their interconnections, helps viii Preface it cope with the challenges of software projects. This multifaceted perspective on software development processes is reflected in this book, among other ways, by the chapter titles, which specify dimensions of software development projects such as quality, time, abstraction, and management, rather than specific project stages, phases, or practices.","2009-02-28","2023-05-07 18:32:41","2023-05-07 18:32:41","","","316","","","","","","","","","","Springer Science & Business Media","","en","","","","","Google Books","","Google-Books-ID: kNFqQW3uZucC","","","https://books.google.co.in/books?id=kNFqQW3uZucC","","Computers / Software Development & Engineering / General; Computers / Information Technology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GTGFHVWB","journalArticle","2009","Maruping, Likoebe M.; Venkatesh, Viswanath; Agarwal, Ritu","A Control Theory Perspective on Agile Methodology Use and Changing User Requirements","Information Systems Research","","1047-7047","10.1287/isre.1090.0238","https://pubsonline.informs.org/doi/abs/10.1287/isre.1090.0238","In this paper, we draw on control theory to understand the conditions under which the use of agile practices is most effective in improving software project quality. Although agile development methodologies offer the potential of improving software development outcomes, limited research has examined how project managers can structure the software development environment to maximize the benefits of agile methodology use during a project. As a result, project managers have little guidance on how to manage teams who are using agile methodologies. Arguing that the most effective control modes are those that provide teams with autonomy in determining the methods for achieving project objectives, we propose hypotheses related to the interaction between control modes, agile methodology use, and requirements change. We test the model in a field study of 862 software developers in 110 teams. The model explains substantial variance in four objective measures of project quality—bug severity, component complexity, coordinative complexity, and dynamic complexity. Results largely support our hypotheses, highlighting the interplay between project control, agile methodology use, and requirements change. The findings contribute to extant literature by integrating control theory into the growing literature on agile methodology use and by identifying specific contingencies affecting the efficacy of different control modes. We discuss the theoretical and practical implications of our results.","2009-09","2023-05-07 18:32:47","2023-05-07 18:32:47","2023-05-07 18:32:47","377-399","","3","20","","","","","","","","","","","","","","","pubsonline.informs.org (Atypon)","","Publisher: INFORMS","","C:\Users\gabra\Zotero\storage\T7DYMKNV\Maruping et al. - 2009 - A Control Theory Perspective on Agile Methodology .pdf","","","agility; software development; agile methodologies; control theory; requirements uncertainty; teams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LSHJWTYR","book","2009","Shalloway, Alan; Beaver, Guy; Trott, James R.","Lean-Agile Software Development: Achieving Enterprise Agility","","978-0-321-64799-3","","","","Agile techniques have demonstrated immense potential for developing more effective, higher-quality software. However,scaling these techniques to the enterprise presents many challenges. The solution is to integrate the principles and practices of Lean Software Development with Agile’s ideology and methods. By doing so, software organizations leverage Lean’s powerful capabilities for “optimizing the whole” and managing complex enterprise projects.    A combined “Lean-Agile” approach can dramatically improve both developer productivity and the software’s business value.In this book, three expert Lean software consultants draw from their unparalleled experience to gather all the insights, knowledge, and new skills you need to succeed with Lean-Agile development.     Lean-Agile Software Development  shows how to extend Scrum processes with an Enterprise view based on Lean principles. The authors present crucial technical insight into emergent design, and demonstrate how to apply it to make iterative development more effective. They also identify several common development “anti-patterns” that can work against your goals, and they offer actionable, proven alternatives.     Lean-Agile Software Development  shows how to  Transition to Lean Software Development quickly and successfully Manage the initiation of product enhancements Help project managers work together to manage product portfolios more effectively Manage dependencies across the software development organization and with its partners and colleagues Integrate development and QA roles to improve quality and eliminate waste Determine best practices for different software development teams  The book’s companion Web site, www.netobjectives.com/lasd, provides updates, links to related materials, and support for discussions of the book’s content.","2009-10-22","2023-05-07 18:33:11","2023-05-07 18:33:11","","","314","","","","","Lean-Agile Software Development","","","","","Pearson Education","","en","","","","","Google Books","","Google-Books-ID: 8lm9_k_fvfkC","","","https://books.google.co.in/books?id=8lm9_k_fvfkC","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P7WAKPDI","journalArticle","2016","Chang, Carl K.","Situation Analytics: A Foundation for a New Software Engineering Paradigm","Computer","","1558-0814","10.1109/MC.2016.21","","Advances in cognitive science along with modern-day smart technologies and software services that take into account our mental state will enable a software industry that is poised to meet customers' needs on the fly in new and truly individualized ways.","2016-01","2023-05-07 18:33:18","2023-05-07 18:33:18","","24-33","","1","49","","","Situation Analytics","","","","","","","","","","","","IEEE Xplore","","Conference Name: Computer","","C:\Users\gabra\Zotero\storage\X6L7GL3C\7383136.html","","","requirements engineering; Software engineering; software engineering; Cognition; machine learning; Machine learning; aware computing; cognitive science; context awareness; Context awareness; human-computer interaction; runtime adaptation; services computing; Services computing; situation awareness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CVNDELTL","preprint","2017","Abrahamsson, Pekka; Salo, Outi; Ronkainen, Jussi; Warsta, Juhani","Agile Software Development Methods: Review and Analysis","","","","10.48550/arXiv.1709.08439","http://arxiv.org/abs/1709.08439","Agile - denoting ""the quality of being agile, readiness for motion, nimbleness, activity, dexterity in motion"" - software development methods are attempting to offer an answer to the eager business community asking for lighter weight along with faster and nimbler software development processes. This is especially the case with the rapidly growing and volatile Internet software industry as well as for the emerging mobile application environment. The new agile methods have evoked substantial amount of literature and debates. However, academic research on the subject is still scarce, as most of existing publications are written by practitioners or consultants. The aim of this publication is to begin filling this gap by systematically reviewing the existing literature on agile software development methodologies. This publication has three purposes. First, it proposes a definition and a classification of agile software development approaches. Second, it analyses ten software development methods that can be characterized as being ""agile"" against the defined criterion. Third, it compares these methods and highlights their similarities and differences. Based on this analysis, future research needs are identified and discussed.","2017-09-25","2023-05-07 18:33:31","2023-05-07 18:33:31","2023-05-07 18:33:31","","","","","","","Agile Software Development Methods","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1709.08439 [cs]","","C:\Users\gabra\Zotero\storage\TNK8VIVX\Abrahamsson et al. - 2017 - Agile Software Development Methods Review and Ana.pdf; C:\Users\gabra\Zotero\storage\HHIGACNW\1709.html","","","Computer Science - Software Engineering","","","","","","","","","","","","","","","","","","","arXiv:1709.08439","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GYMA8KAM","journalArticle","2014","Babb, Jeffry; Hoda, Rashina; Nørbjerg, Jacob","Embedding Reflection and Learning into Agile Software Development","IEEE Software","","1937-4194","10.1109/MS.2014.54","","The theoretical underpinnings of agile principles emphasize regular reflection as a means to attain a sustainable development pace and continuous learning. In practice, high iteration pressure can diminish opportunities for ongoing learning and reflection threatening to deprive software teams of learning and reflection and possibly stagnating process evolution. The Reflective Agile Learning Model (REALM) combines insights and results from studies of agile development practices in India, New Zealand, and the US with Schön's theory of reflective practice. Using REALM, agile teams can establish self-organized learning as well as regular process maintenance and opportunities for process evolution to continuously improve practice.","2014-07","2023-05-07 18:33:37","2023-05-07 18:33:37","","51-57","","4","31","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\T98E68SS\6785921.html","","","agile software development; Project management; Software engineering; software engineering; project management; Software development; Reflection; learning organizations; Learning systems; learning teams; pervasive computing; Pervasive computing; reflection-in-action; reflection-on-action; reflective practice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9E73R7K4","journalArticle","2012","Dingsøyr, Torgeir; Nerur, Sridhar; Balijepally, VenuGopal; Moe, Nils Brede","A decade of agile methodologies: Towards explaining agile software development","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2012.02.033","https://www.sciencedirect.com/science/article/pii/S0164121212000532","Ever since the agile manifesto was created in 2001, the research community has devoted a great deal of attention to agile software development. This article examines publications and citations to illustrate how the research on agile has progressed in the 10 years following the articulation of the manifesto. Specifically, we delineate the conceptual structure underlying agile scholarship by performing an analysis of authors who have made notable contributions to the field. Further, we summarize prior research and introduce contributions in this special issue on agile software development. We conclude by discussing directions for future research and urging agile researchers to embrace a theory-based approach in their scholarship.","2012-06-01","2023-05-07 18:34:02","2023-05-07 18:34:02","2023-05-07 18:34:02","1213-1221","","6","85","","Journal of Systems and Software","A decade of agile methodologies","Special Issue: Agile Development","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\Q3JJAR86\Dingsøyr et al. - 2012 - A decade of agile methodologies Towards explainin.pdf","","","Software engineering; Agile software development; Scrum; Information systems; Lean software development; Crystal method; eXtreme programming, XP; Feature-driven development; Theory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z2V5PU84","conferencePaper","2014","Usman, Muhammad; Mendes, Emilia; Weidt, Francila; Britto, Ricardo","Effort estimation in agile software development: a systematic literature review","Proceedings of the 10th International Conference on Predictive Models in Software Engineering","978-1-4503-2898-2","","10.1145/2639490.2639503","https://doi.org/10.1145/2639490.2639503","Context: Ever since the emergence of agile methodologies in 2001, many software companies have shifted to Agile Software Development (ASD), and since then many studies have been conducted to investigate effort estimation within such context; however to date there is no single study that presents a detailed overview of the state of the art in effort estimation for ASD. Objectives: The aim of this study is to provide a detailed overview of the state of the art in the area of effort estimation in ASD. Method: To report the state of the art, we conducted a systematic literature review in accordance with the guidelines proposed in the evidence-based software engineering literature. Results: A total of 25 primary studies were selected; the main findings are: i) Subjective estimation techniques (e.g. expert judgment, planning poker, use case points estimation method) are the most frequently applied in an agile context; ii) Use case points and story points are the most frequently used size metrics respectively; iii) MMRE (Mean Magnitude of Relative Error) and MRE (Magnitude of Relative Error) are the most frequently used accuracy metrics; iv) team skills, prior experience and task size are cited as the three important cost drivers for effort estimation in ASD; and v) Extreme Programming (XP) and SCRUM are the only two agile methods that are identified in the primary studies. Conclusion: Subjective estimation techniques, e.g. expert judgment-based techniques, planning poker or the use case points method, are the one used the most in agile effort estimation studies. As for the size metrics, the ones that were used the most in the primary studies were story points and use case points. Several research gaps were identified, relating to the agile methods, size metrics and cost drivers, thus suggesting numerous possible avenues for future work.","2014-09-17","2023-05-07 18:34:13","2023-05-07 18:34:13","2023-05-07","82–91","","","","","","Effort estimation in agile software development","PROMISE '14","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\CK4SQZ5K\Usman et al. - 2014 - Effort estimation in agile software development a.pdf","","","agile software development; systematic literature review; effort estimation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PR972CJ5","journalArticle","2020","Chazette, Larissa; Schneider, Kurt","Explainability as a non-functional requirement: challenges and recommendations","Requirements Engineering","","1432-010X","10.1007/s00766-020-00333-1","https://doi.org/10.1007/s00766-020-00333-1","Software systems are becoming increasingly complex. Their ubiquitous presence makes users more dependent on their correctness in many aspects of daily life. As a result, there is a growing need to make software systems and their decisions more comprehensible, with more transparency in software-based decision making. Transparency is therefore becoming increasingly important as a non-functional requirement. However, the abstract quality aspect of transparency needs to be better understood and related to mechanisms that can foster it. The integration of explanations into software has often been discussed as a solution to mitigate system opacity. Yet, an important first step is to understand user requirements in terms of explainable software behavior: Are users really interested in software transparency and are explanations considered an appropriate way to achieve it? We conducted a survey with 107 end users to assess their opinion on the current level of transparency in software systems and what they consider to be the main advantages and disadvantages of embedded explanations. We assess the relationship between explanations and transparency and analyze its potential impact on software quality. As explainability has become an important issue, researchers and professionals have been discussing how to deal with it in practice. While there are differences of opinion on the need for built-in explanations, understanding this concept and its impact on software is a key step for requirements engineering. Based on our research results and on the study of existing literature, we offer recommendations for the elicitation and analysis of explainability and discuss strategies for the practice.","2020-12-01","2023-05-07 18:34:18","2023-05-07 18:34:18","2023-05-07 18:34:18","493-514","","4","25","","Requirements Eng","Explainability as a non-functional requirement","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\Q4Y4T956\Chazette and Schneider - 2020 - Explainability as a non-functional requirement ch.pdf","","","Software quality; Non-functional requirements; Explainability; Software transparency","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"URYXK4VV","conferencePaper","2017","Taibi, Davide; Lenarduzzi, Valentina; Pahl, Claus; Janes, Andrea","Microservices in agile software development: a workshop-based study into issues, advantages, and disadvantages","Proceedings of the XP2017 Scientific Workshops","978-1-4503-5264-2","","10.1145/3120459.3120483","https://doi.org/10.1145/3120459.3120483","In the last years, cloud-native architectures have emerged as a target platform for the deployment of microservice architectures. The migration of existing monoliths into cloud-native applications is still in the early phase, and only few companies already started their migrations. Therefore, success and failure stories about different approaches are not available in the literature. This context connects also to the recently discussed DevOps context where development and continuous deployment are closely linked.","2017-05-22","2023-05-07 18:34:24","2023-05-07 18:34:24","2023-05-07","1–5","","","","","","Microservices in agile software development","XP '17","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","cloud software; microservices; SOA; software architecture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4RE9T2YK","conferencePaper","2008","Rahimian, Vahid; Ramsin, Raman","Designing an agile methodology for mobile software development: A hybrid method engineering approach","2008 Second International Conference on Research Challenges in Information Science","","","10.1109/RCIS.2008.4632123","","New Advances in mobile computer technology and the rapid growth of wireless networks in quality and quantity has introduced new applications and concerns in computer science and industry. The unique requirements and constraints associated with mobile systems have brought new challenges to software development for such environments, as it demands extensive improvements to traditional systems development methodologies in order to fulfill the special needs of this field. We examine the challenges of developing software for mobile systems, starting by reviewing mobile systemspsila characteristics and investigating the status quo of mobile software development methods. It has been shown that Agile methodologies are appropriate methods for the development of such systems; based on this assumption, we identify specific requirements for a mobile software development methodology, based on which a new agile method is engineered using the Hybrid Methodology Design approach. We claim that this methodology, and the approach used for its construction, can facilitate the application of a software engineering approach to the production of mobile software systems.","2008-06","2023-05-07 18:34:32","2023-05-07 18:34:32","","337-342","","","","","","Designing an agile methodology for mobile software development","","","","","","","","","","","","IEEE Xplore","","ISSN: 2151-1357","","C:\Users\gabra\Zotero\storage\QG2533BN\4632123.html","","","Programming; Software; Computer architecture; Mobile communication; Product development; Design methodology; Agile Methods; Method Engineering; Mobile computing; Mobile Software Development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 Second International Conference on Research Challenges in Information Science","","","","","","","","","","","","","","",""
"N9HPVQCS","journalArticle","2013","Hoda, Rashina; Noble, James; Marshall, Stuart","Self-Organizing Roles on Agile Software Development Teams","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2012.30","","Self-organizing teams have been recognized and studied in various forms-as autonomous groups in socio-technical systems, enablers of organizational theories, agents of knowledge management, and as examples of complex-adaptive systems. Over the last decade, self-organizing teams have taken center stage in software engineering when they were incorporated as a hallmark of Agile methods. Despite the long and rich history of self-organizing teams and their recent popularity with Agile methods, there has been little research on the topic within software wngineering. Particularly, there is a dearth of research on how Agile teams organize themselves in practice. Through a Grounded Theory research involving 58 Agile practitioners from 23 software organizations in New Zealand and India over a period of four years, we identified informal, implicit, transient, and spontaneous roles that make Agile teams self-organizing. These roles-Mentor, Coordinator, Translator, Champion, Promoter, and Terminator-are focused toward providing initial guidance and encouraging continued adherence to Agile methods, effectively managing customer expectations and coordinating customer collaboration, securing and sustaining senior management support, and identifying and removing team members threatening the self-organizing ability of the team. Understanding these roles will help software development teams and their managers better comprehend and execute their roles and responsibilities as a self-organizing team.","2013-03","2023-05-07 18:34:52","2023-05-07 18:34:52","","422-444","","3","39","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\266BCLUI\6197202.html","","","Programming; Collaboration; Software engineering; Agile software development; Software; software engineering; grounded theory; Organizations; Organizing; Self-organizing; team roles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7GLV589Q","conferencePaper","2003","Kane, D.","Finding a place for discount usability engineering in agile development: throwing down the gauntlet","Proceedings of the Agile Development Conference, 2003. ADC 2003","","","10.1109/ADC.2003.1231451","","Many software development organizations are reporting great success with agile software development techniques. However, few techniques explicitly incorporate usability engineering. Further, some agile techniques may not address certain kinds of usability problems, e.g. they may not address the needs of novices as well as expert users. While there are many techniques for usability engineering, discount usability engineering should be of particular interest to the agile development community because the two disciplines share many of the same underlying principles. The challenge for the agile development community is to find ways to incorporate and gain value from such discount usability engineering practices.","2003-06","2023-05-07 18:35:00","2023-05-07 18:35:00","","40-46","","","","","","Finding a place for discount usability engineering in agile development","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\KW7EFFCQ\1231451.html","","","Design engineering; Programming; Usability; Application software; Costs; Productivity; Software testing; System testing; Bridges; Convergence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the Agile Development Conference, 2003. ADC 2003","","","","","","","","","","","","","","",""
"EZKY4E95","conferencePaper","2006","Korkala, M.; Abrahamsson, P.; Kyllonen, P.","A case study on the impact of customer communication on defects in agile software development","AGILE 2006 (AGILE'06)","","","10.1109/AGILE.2006.1","","Effective communication and feedback are crucial in agile development. Extreme programming (XP) embraces both communication and feedback as interdependent process values which are essential for projects to achieve successful results. Our research presents the empirical results from four different case studies. Three case studies had partially onsite customers and one had an onsite customer. The case studies used face-to-face communication to different extents along with email and telephone to manage customer-developer communication inside the development iterations. Our results indicate that an increased reliance on less informative communication channels results in higher defect rates. These results suggest that the selection of communication methods, to be used inside development iterations, should be a factor of considerable importance to agile organizations working with partially available customers. This paper also proposes some guidelines for selecting proper communication methods.","2006-07","2023-05-07 18:35:03","2023-05-07 18:35:03","","11 pp.-88","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\BHRYE53D\1667565.html","","","Feedback; Programming; Collaborative work; Software systems; Communication effectiveness; Guidelines; Computer aided software engineering; Communication channels; Information processing; Telephony","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AGILE 2006 (AGILE'06)","","","","","","","","","","","","","","",""
"YA8LSKAJ","journalArticle","2020","Islam, A.K.M Zahidul; Ferworn, Dr. Alex","A Comparison between Agile and Traditional Software Development Methodologies","Global Journal of Computer Science and Technology","","09754172, 09754350","10.34257/GJCSTCVOL20IS2PG7","https://computerresearch.org/index.php/computer/article/view/1987","In this dissertation, I have described the characteristics of some traditional and agile methodologies that are widely used in software development. I have also discussed the strengths and weakness between the two opposing methodologies and provided the challenges associated with implementing agile processes in the software industry. This anecdotal evidence is rising regarding the effectiveness of agile methodologies in certain environments; but there have not been much collection and analysis of empirical evidence for agile projects. However, to support my dissertation I conducted a questionnaire, soliciting feedback from software industry practitioners to evaluate which methodology has a better success rate for different sizes of software development. According to our findings agile methodologies can provide good benefits for small scaled and medium scaled projects but for large scaled projects traditional methods seem dominant.","2020-12-21","2023-05-07 18:35:12","2023-05-07 18:35:13","2023-05-07 18:35:12","7-42","","","","","GJCST","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\RA794JBM\Islam and Ferworn - 2020 - A Comparison between Agile and Traditional Softwar.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2HNV79DQ","book","2009","","Software & Systems Requirements Engineering: In Practice","","978-0-07-160547-2","","","https://www.accessengineeringlibrary.com/content/book/9780071605472","Deliver feature-rich products faster, cheaper, and more reliably using state-of-the-art SSRE methods and modeling procedures. Written by global experts, Software &amp; Systems Requirements Engineering: In Practice explains how to effectively manage project objectives and user needs across the entire development lifecycle. Gather functional and quality attribute requirements, work with models, perform system tests, and verify compliance. You will also learn how to mitigate risks, avoid requirements creep, and sidestep the pitfalls associated with large, complex projects.","2009","2023-05-07 18:44:41","2023-05-07 18:44:41","2023-05-07 18:44:41","","","","","","","Software & Systems Requirements Engineering","","","","","McGraw-Hill Education","","en","","","","","www.accessengineeringlibrary.com","","","","C:\Users\gabra\Zotero\storage\FU9XXMRW\2009 - Software & Systems Requirements Engineering In Pr.pdf","","","","","","","","","","","","","","","","","","","","","","","First edition","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AM6ABVCG","journalArticle","2013","Perini, Anna; Susi, Angelo; Avesani, Paolo","A Machine Learning Approach to Software Requirements Prioritization","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2012.52","","Deciding which, among a set of requirements, are to be considered first and in which order is a strategic process in software development. This task is commonly referred to as requirements prioritization. This paper describes a requirements prioritization method called Case-Based Ranking (CBRank), which combines project's stakeholders preferences with requirements ordering approximations computed through machine learning techniques, bringing promising advantages. First, the human effort to input preference information can be reduced, while preserving the accuracy of the final ranking estimates. Second, domain knowledge encoded as partial order relations defined over the requirement attributes can be exploited, thus supporting an adaptive elicitation process. The techniques CBRank rests on and the associated prioritization process are detailed. Empirical evaluations of properties of CBRank are performed on simulated data and compared with a state-of-the-art prioritization method, providing evidence of the method ability to support the management of the tradeoff between elicitation effort and ranking accuracy and to exploit domain knowledge. A case study on a real software project complements these experimental measurements. Finally, a positioning of CBRank with respect to state-of-the-art requirements prioritization methods is proposed, together with a discussion of benefits and limits of the method.","2013-04","2023-05-07 18:44:55","2023-05-07 18:44:55","","445-461","","4","39","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\HADDRGUZ\6249686.html","","","Software; Requirements management; Data models; machine learning; Accuracy; requirements prioritization; Humans; Approximation methods; Boosting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2JTVMPE3","conferencePaper","2006","Haley, Charles B.; Moffett, Jonathan D.; Laney, Robin; Nuseibeh, Bashar","A framework for security requirements engineering","Proceedings of the 2006 international workshop on Software engineering for secure systems","978-1-59593-411-6","","10.1145/1137627.1137634","https://doi.org/10.1145/1137627.1137634","This paper presents a framework for security requirements elicitation and analysis, based upon the construction of a context for the system and satisfaction arguments for the security of the system. One starts with enumeration of security goals based on assets in the system. These goals are used to derive security requirements in the form of constraints. The system context is described using a problem-centered notation, then this context is validated against the security requirements through construction of a satisfaction argument. The satisfaction argument is in two parts: a formal argument that the system can meet its security requirements, and a structured informal argument supporting the assumptions expressed in the formal argument. The construction of the satisfaction argument may fail, revealing either that the security requirement cannot be satisfied in the context, or that the context does not contain sufficient information to develop the argument. In this case, designers and architects are asked to provide additional design information to resolve the problems.","2006-05-20","2023-05-07 18:45:03","2023-05-07 18:45:03","2023-05-07","35–42","","","","","","","SESS '06","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\7UNJYRLR\Haley et al. - 2006 - A framework for security requirements engineering.pdf","","","requirements engineering; security requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TT6TQ8XB","journalArticle","2007","Juristo, Natalia; Moreno, Ana; Sanchez-Segura, Maria-Isabel","Guidelines for Eliciting Usability Functionalities","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2007.70741","","Like any other quality attribute, usability imposes specific constraints on software components. Features that raise the software system's usability have to be considered from the earliest development stages. But, discovering and documenting usability features is likely to be beyond the usability knowledge of most requirements engineers, developers, and users. We propose an approach based on developing specific guidelines that capitalize upon key elements recurrently intervening in the usability features elicitation and specification process. The use of these guidelines provides requirements analysts with a knowledge repository. They can use this repository to ask the right questions and capture precise usability requirements information.","2007-11","2023-05-07 18:45:10","2023-05-07 18:45:10","","744-758","","11","33","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\3Z4KEAZD\4339231.html","","","Design engineering; Programming; Software quality; Knowledge engineering; Usability; Software architecture; Software systems; Application software; Costs; Elicitation methods; Guidelines; Requirements/Specifications; usability features elicitation; Usability requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NZI3R488","journalArticle","2015","","Analyzing and Specifying Security Requirements in Early Stages of Software Development Life Cycle | Journal of Mobile, Embedded and Distributed Systems","","","","","http://jmeds.eu/index.php/jmeds/article/view/Analyzing_and_Specifying_Security_Requirements_in_Early_Stages","As of lately, more and more studies show that, at a global level, one of the most important causes of economic loss is unauthorized access to informatics resources. For example, a CSI/FBI Computer Crime and Security report from 2006 states that, in the top identified causes for economic loss in the USA, unauthorized access to informatics resources takes second place (Gordon et. al., 2006). Without a doubt, given the accelerated growth of software industry in the present, this need of security should be taken into account in Romania as a top priority. At the moment, in the requirements extraction phase from the software development life cycle, importance is given only to functional requirements. Thus appears the problem of identifying adequate solutions for treating non-functional requirements, where security requirements are included.","2015-12-05","2023-05-07 18:45:17","2023-05-07 18:45:17","2023-05-07 18:45:17","","","","","","","","","","","","","","en-US","","","","","jmeds.eu","","","","C:\Users\gabra\Zotero\storage\Y4H88NPB\2015 - Analyzing and Specifying Security Requirements in .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9RJ5HBG8","bookSection","2005","Regnell, Björn; Brinkkemper, Sjaak","Market-Driven Requirements Engineering for Software Products","Engineering and Managing Software Requirements","978-3-540-28244-0","","","https://doi.org/10.1007/3-540-28244-0_13","An increasing part of software development is devoted to products that are offered to an open market with many customers. Market-driven development imposes special challenges for the requirements engineering process. This chapter provides an overview of the special characteristics of market-driven requirements engineering and describes the most important challenges of the area. Key elements of market-driven requirements engineering processes are presented together with a definition of process quality. Requirements state models and requirements repositories are also described and examples of typical solutions to progress tracking and data management are provided. The difficult problem of release planning is also discussed and an industrial example of a release planning process is given.","2005","2023-05-07 18:45:24","2023-05-07 18:45:24","2023-05-07 18:45:24","287-308","","","","","","","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/3-540-28244-0_13","","","","","Release planning; Process improvement; Market-driven requirements engineering; Process quality; Product software; Requirements selection","Aurum, Aybüke; Wohlin, Claes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2VXBES87","journalArticle","2008","Haley, Charles; Laney, Robin; Moffett, Jonathan; Nuseibeh, Bashar","Security Requirements Engineering: A Framework for Representation and Analysis","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2007.70754","","This paper presents a framework for security requirements elicitation and analysis. The framework is based on constructing a context for the system, representing security requirements as constraints, and developing satisfaction arguments for the security requirements. The system context is described using a problem-oriented notation, then is validated against the security requirements through construction of a satisfaction argument. The satisfaction argument consists of two parts: a formal argument that the system can meet its security requirements and a structured informal argument supporting the assumptions expressed in the formal argument. The construction of the satisfaction argument may fail, revealing either that the security requirement cannot be satisfied in the context or that the context does not contain sufficient information to develop the argument. In this case, designers and architects are asked to provide additional design information to resolve the problems. We evaluate the framework by applying it to a security requirements analysis within an air traffic control technology evaluation project.","2008-01","2023-05-07 18:45:46","2023-05-07 18:45:46","","133-153","","1","34","","","Security Requirements Engineering","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\MUII9BWN\Haley et al. - 2008 - Security Requirements Engineering A Framework for.pdf; C:\Users\gabra\Zotero\storage\8SB4DG5H\4359475.html","","","Software engineering; Internet; Application software; Information security; Computer security; Security; Requirements/Specifications; Air traffic control; Computer Society; Credit cards; Data security; Software/Software Engineering; Statistics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MLXAUAL9","journalArticle","2010","Houmb, Siv Hilde; Islam, Shareeful; Knauss, Eric; Jürjens, Jan; Schneider, Kurt","Eliciting security requirements and tracing them to design: an integration of Common Criteria, heuristics, and UMLsec","Requirements Engineering","","1432-010X","10.1007/s00766-009-0093-9","https://doi.org/10.1007/s00766-009-0093-9","Building secure systems is difficult for many reasons. This paper deals with two of the main challenges: (i) the lack of security expertise in development teams and (ii) the inadequacy of existing methodologies to support developers who are not security experts. The security standard ISO 14508 Common Criteria (CC) together with secure design techniques such as UMLsec can provide the security expertise, knowledge, and guidelines that are needed. However, security expertise and guidelines are not stated explicitly in the CC. They are rather phrased in security domain terminology and difficult to understand for developers. This means that some general security and secure design expertise are required to fully take advantage of the CC and UMLsec. In addition, there is the problem of tracing security requirements and objectives into solution design, which is needed for proof of requirements fulfilment. This paper describes a security requirements engineering methodology called SecReq. SecReq combines three techniques: the CC, the heuristic requirements editor HeRA, and UMLsec. SecReq makes systematic use of the security engineering knowledge contained in the CC and UMLsec, as well as security-related heuristics in the HeRA tool. The integrated SecReq method supports early detection of security-related issues (HeRA), their systematic refinement guided by the CC, and the ability to trace security requirements into UML design models. A feedback loop helps reusing experience within SecReq and turns the approach into an iterative process for the secure system life-cycle, also in the presence of system evolution.","2010-03-01","2023-05-07 18:45:53","2023-05-07 18:45:53","2023-05-07 18:45:53","63-93","","1","15","","Requirements Eng","Eliciting security requirements and tracing them to design","","","","","","","en","","","","","Springer Link","","","","","","","Common Criteria (CC); Heuristics; Secure design; Security requirement elicitation; UMLsec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6FZJRSU4","journalArticle","2018","Pacheco, Carla; García, Ivan; Reyes, Miryam","Requirements elicitation techniques: a systematic literature review based on the maturity of the techniques","IET Software","","1751-8814","10.1049/iet-sen.2017.0144","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2017.0144","Requirements elicitation is a critical activity that forms part of the requirements engineering process because it has to discover what the software must do through a solid understanding of the wishes and needs of the various stakeholders and to transform them into software requirements. However, in spite of its relevance, there are only a few systematic literature reviews that provide scientific evidence about the effectiveness of the techniques used to elicit software requirements. This study presents a systematic review of relevant literature on requirements elicitation techniques, from 1993 to 2015, by addressing two research questions: Which mature techniques are currently used for eliciting software requirements? and Which mature techniques improve the elicitation effectiveness? Prior literature assumes that such ‘maturity’ leads to a better-quality understanding of stakeholders’ desires and needs, and thus an increased likelihood that a resulting software will satisfy those requirements. This research paper found 140 studies to answer these questions. The findings describe which elicitation techniques are effective and in which situations they work best, taking into account the product which must be developed, the stakeholders’ characteristics, the type of information obtained, among other factors.","2018","2023-05-07 18:46:18","2023-05-07 18:46:18","2023-05-07 18:46:18","365-378","","4","12","","","Requirements elicitation techniques","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2017.0144","","C:\Users\gabra\Zotero\storage\JLI33QKW\Pacheco et al. - 2018 - Requirements elicitation techniques a systematic .pdf","","","requirements elicitation; systems analysis; software requirements; formal specification; requirements engineering process; formal verification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X2FWM325","journalArticle","2005","Beecham, Sarah; Hall, Tracy; Britton, Carol; Cottee, Michaela; Rainer, Austen","Using an expert panel to validate a requirements process improvement model","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2004.06.004","https://www.sciencedirect.com/science/article/pii/S0164121204000974","In this paper we present components of a newly developed software process improvement model that aims to represent key practices in requirements engineering (RE). Our model is developed in response to practitioner needs highlighted in our empirical work with UK software development companies. We have now reached the stage in model development where we need some independent feedback as to how well our model meets our objectives. We perform this validation through involving a group of software process improvement and RE experts in examining our RE model components and completing a detailed questionnaire. A major part of this paper is devoted to explaining our validation methodology. There is very little in the literature that directly relates to how process models have been validated, therefore providing this transparency will benefit both the research community and practitioners. The validation methodology and the model itself contribute towards a better understanding of modelling RE processes.","2005-06-01","2023-05-07 18:46:27","2023-05-07 18:46:27","2023-05-07 18:46:27","251-275","","3","76","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\D3DEY4GB\S0164121204000974.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5BKECHWA","conferencePaper","2003","Ruhe, Günther","Software Engineering Decision Support – A New Paradigm for Learning Software Organizations","Advances in Learning Software Organizations","978-3-540-40052-3","","10.1007/978-3-540-40052-3_10","","Software development and evolution is characterized by multiple objectives and constraints, by a huge amount of uncertainty, incomplete information and changing problem parameters. Success of software development very much depends on providing the right knowledge at the right time, at the right place, and for the appropriate person. Experience factory and organizational learning approaches are increasingly used to improve software development practices.","2003","2023-05-07 18:47:11","2023-05-07 18:47:11","","104-113","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Software Engineering; Software Development; Decision Support; Software Engineer; Software Organization","Henninger, Scott; Maurer, Frank","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S95ER52D","journalArticle","","ةيلك, تامولعملا ايجولونكت; ةهجلا, ةردصملا; ةدامع, ةدوجلاو ريوطتلا; ةهجلا, ةققدملا; ةعماج, ايفلداليف","Course Syllabus :جذومنلا مسا","","","","","","","","2023-05-07 18:47:12","2023-05-07 18:47:12","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\8R7BDIT7\ةيلك et al. - Course Syllabus جذومنلا مسا.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PFNJVCRS","conferencePaper","2000","Nuseibeh, Bashar; Easterbrook, Steve","Requirements engineering: a roadmap","Proceedings of the Conference on The Future of Software Engineering","978-1-58113-253-3","","10.1145/336512.336523","https://dl.acm.org/doi/10.1145/336512.336523","","2000-05-01","2023-05-07 18:47:17","2023-05-07 18:47:17","2023-05-07","35–46","","","","","","Requirements engineering","ICSE '00","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\W3N38XMX\Nuseibeh and Easterbrook - 2000 - Requirements engineering a roadmap.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AS2WEJNP","conferencePaper","2010","Ge, Xiaocheng; Paige, Richard F.; McDermid, John A.","An Iterative Approach for Development of Safety-Critical Software and Safety Arguments","2010 Agile Conference","","","10.1109/AGILE.2010.10","","The benefits ascribed to Agile methods are attractive to software engineers working in the safety-critical software domain. There is limited industrial experience and evidence of successful applications of Agile methods in this domain, however, academic research has identified some of the key challenges of their adoption and application, and has started to present feasibility studies. In this paper, we propose an iterative approach for developing safety-critical software, making two novel contributions. Firstly, we address the notion of up-front design in safety-critical software development, and describe the characteristics fan up-front design that is minimal from the perspective of achieving safety objectives. Secondly, we identify a key difficulty of using iterative development for building safety-critical software, and present a way to develop both a software system and a safety argument iteratively. We also give details of a proof-of-concept example illustrating the use of the approach.","2010-08","2023-05-07 18:50:10","2023-05-07 18:50:10","","35-43","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\4NVGJPUC\5562808.html","","","Programming; Planning; Software systems; Agile method; Hazards; Iterative development; Safety arguments; Safety-critical system; Standards","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 Agile Conference","","","","","","","","","","","","","","",""
"QDA9H7KX","journalArticle","2008","Barney, Sebastian; Aurum, Aybüke; Wohlin, Claes","A product management challenge: Creating software product value through requirements selection","Journal of Systems Architecture","","1383-7621","10.1016/j.sysarc.2007.12.004","https://www.sciencedirect.com/science/article/pii/S1383762107001348","It is important for a software company to maximize value creation for a given investment. The purpose of requirements engineering activities is to add business value that is accounted for in terms of return on investment of a software product. This paper provides insight into the release planning processes used in the software industry to create software product value, by presenting three case studies. It examines how IT professionals perceive value creation through requirements engineering and how the release planning process is conducted to create software product value. It also presents to what degree the major stakeholders’ perspectives are represented in the decision-making process. Our findings show that the client and market base of the software product represents the most influential group in the decision to implement specific requirements. This is reflected both in terms of deciding the processes followed and the decision-making criteria applied when selecting requirements for the product. Furthermore, the management of software product value is dependant on the context in which the product exists. Factors, such as the maturity of the product, the marketplace in which it exists, and the development tools and methods available, influence the criteria that decide whether a requirement is included in a specific project or release.","2008-06-01","2023-05-07 18:50:17","2023-05-07 18:50:17","2023-05-07 18:50:17","576-593","","6","54","","Journal of Systems Architecture","A product management challenge","Selection of best papers from the 32nd EUROMICRO Conference on ‘Software Engineering and Advanced Applications’ (SEAA 2006)","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\SVRV7FCA\S1383762107001348.html","","","Requirements prioritization; Business value; Customer’s perceived value; Product value; Project value; Software release; Value-based requirements engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NSNZDA3P","conferencePaper","2001","Carlshamre, P.; Sandahl, K.; Lindvall, M.; Regnell, B.; Natt och Dag, J.","An industrial survey of requirements interdependencies in software product release planning","Proceedings Fifth IEEE International Symposium on Requirements Engineering","","","10.1109/ISRE.2001.948547","","The task of finding an optimal selection of requirements for the next release of a software system is difficult as requirements may depend on each other in complex ways. The paper presents the results from an in-depth study of the interdependencies within 5 distinct sets of requirements, each including 20 high-priority requirements of 5 distinct products from 5 different companies. The results show that: (1) roughly 20% of the requirements are responsible for 75% of the interdependencies; (2) only a few requirements are singular; (3) customer-specific bespoke development tend to include more functionality- related dependencies whereas market-driven product development have an emphasis on value-related dependencies. Several strategies for reducing the effort needed for identifying and managing interdependencies are outlined. A technique for visualization of interdependencies with the aim of supporting release planning is also discussed. The complexity of requirements interdependency analysis is studied in relation to metrics of requirements coupling. Finally, a number of issues for further research are identified.","2001-08","2023-05-07 18:50:26","2023-05-07 18:50:26","","84-91","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\N52S8UWL\948547.html","","","Project management; Computer industry; Visualization; Job shop scheduling; Job production systems; Engineering management; Communication industry; Communication system software; Frequency; Strategic planning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings Fifth IEEE International Symposium on Requirements Engineering","","","","","","","","","","","","","","",""
"VDB9KP4E","journalArticle","2013","Ali, Nasir; Guéhéneuc, Yann-Gaël; Antoniol, Giuliano","Trustrace: Mining Software Repositories to Improve the Accuracy of Requirement Traceability Links","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2012.71","","Traceability is the only means to ensure that the source code of a system is consistent with its requirements and that all and only the specified requirements have been implemented by developers. During software maintenance and evolution, requirement traceability links become obsolete because developers do not/cannot devote effort to updating them. Yet, recovering these traceability links later is a daunting and costly task for developers. Consequently, the literature has proposed methods, techniques, and tools to recover these traceability links semi-automatically or automatically. Among the proposed techniques, the literature showed that information retrieval (IR) techniques can automatically recover traceability links between free-text requirements and source code. However, IR techniques lack accuracy (precision and recall). In this paper, we show that mining software repositories and combining mined results with IR techniques can improve the accuracy (precision and recall) of IR techniques and we propose Trustrace, a trust–based traceability recovery approach. We apply Trustrace on four medium-size open-source systems to compare the accuracy of its traceability links with those recovered using state-of-the-art IR techniques from the literature, based on the Vector Space Model and Jensen-Shannon model. The results of Trustrace are up to 22.7 percent more precise and have 7.66 percent better recall values than those of the other techniques, on average. We thus show that mining software repositories and combining the mined data with existing results from IR techniques improves the precision and recall of requirement traceability links.","2013-05","2023-05-07 18:50:35","2023-05-07 18:50:35","","725-741","","5","39","","","Trustrace","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\4CQCXB5W\6341764.html; C:\Users\gabra\Zotero\storage\UNVXA3K2\Ali et al. - 2013 - Trustrace Mining Software Repositories to Improve.pdf","","","Software maintenance; Traceability; Open source software; Data mining; requirements; Accuracy; experts; feature; Information retrieval; Principal component analysis; repositories; source code; trust-based model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"A35YKDKN","journalArticle","2009","Patel, Chetankumar; Ramachandran, Muthu","Story Card Maturity Model (SMM): A Process Improvement Framework for Agile Requirements Engineering Practices","Journal of Software","","1796-217X","10.4304/jsw.4.5.422-435","http://www.academypublisher.com/ojs/index.php/jsw/article/view/2044","This paper describes an ongoing process to define a suitable process improvement model for story cards based requirement engineering process and practices at agile software development environments. Key features of the SMM (Story card Maturity Model) process are: solves the problems related to the story cards like requirements conflicts, missing requirements, ambiguous requirements, define standard structure of story cards, to address nonfunctional requirements from exploration phase, and the use of a simplified and tailored assessment method for story cards based requirements engineering practices based on the CMM, which is poorly addressed at CMM. CMM does not cover how the quality of the requirements engineering process should be secured or what activities should be present for the requirements engineering process to achieve a certain maturity level. It is difficult to know what is not addressed or what could be done to improve the process. We also presents how can be the identified areas of improvement from assessment can be mapped with best knowledge based story cards practices for agile software development environments.","2009-07-01","2023-05-07 18:50:37","2023-05-07 18:50:37","2023-05-07 18:50:37","422-435","","5","4","","JSW","Story Card Maturity Model (SMM)","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\5K76RQ2R\Patel and Ramachandran - 2009 - Story Card Maturity Model (SMM) A Process Improve.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"REKWU8BU","journalArticle","2017","Mao, Ke; Capra, Licia; Harman, Mark; Jia, Yue","A survey of the use of crowdsourcing in software engineering","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2016.09.015","https://www.sciencedirect.com/science/article/pii/S0164121216301832","The term ‘crowdsourcing’ was initially introduced in 2006 to describe an emerging distributed problem-solving model by online workers. Since then it has been widely studied and practiced to support software engineering. In this paper we provide a comprehensive survey of the use of crowdsourcing in software engineering, seeking to cover all literature on this topic. We first review the definitions of crowdsourcing and derive our definition of Crowdsourcing Software Engineering together with its taxonomy. Then we summarise industrial crowdsourcing practice in software engineering and corresponding case studies. We further analyse the software engineering domains, tasks and applications for crowdsourcing and the platforms and stakeholders involved in realising Crowdsourced Software Engineering solutions. We conclude by exposing trends, open issues and opportunities for future research on Crowdsourced Software Engineering.","2017-04-01","2023-05-07 18:50:39","2023-05-07 18:50:39","2023-05-07 18:50:39","57-84","","","126","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\BW9V5XPC\S0164121216301832.html; C:\Users\gabra\Zotero\storage\H9AIASWJ\Mao et al. - 2017 - A survey of the use of crowdsourcing in software e.pdf","","","Crowdsourcing; Crowdsourced software engineering; Literature survey; Software crowdsourcing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FDMNGUJI","journalArticle","2013","Anand, Saswat; Burke, Edmund K.; Chen, Tsong Yueh; Clark, John; Cohen, Myra B.; Grieskamp, Wolfgang; Harman, Mark; Harrold, Mary Jean; McMinn, Phil; Bertolino, Antonia; Jenny Li, J.; Zhu, Hong","An orchestrated survey of methodologies for automated software test case generation","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2013.02.061","https://www.sciencedirect.com/science/article/pii/S0164121213000563","Test case generation is among the most labour-intensive tasks in software testing. It also has a strong impact on the effectiveness and efficiency of software testing. For these reasons, it has been one of the most active research topics in software testing for several decades, resulting in many different approaches and tools. This paper presents an orchestrated survey of the most prominent techniques for automatic generation of software test cases, reviewed in self-standing sections. The techniques presented include: (a) structural testing using symbolic execution, (b) model-based testing, (c) combinatorial testing, (d) random testing and its variant of adaptive random testing, and (e) search-based testing. Each section is contributed by world-renowned active researchers on the technique, and briefly covers the basic ideas underlying the method, the current state of the art, a discussion of the open research problems, and a perspective of the future development of the approach. As a whole, the paper aims at giving an introductory, up-to-date and (relatively) short overview of research in automatic test case generation, while ensuring a comprehensive and authoritative treatment.","2013-08-01","2023-05-07 18:50:42","2023-05-07 18:50:42","2023-05-07 18:50:41","1978-2001","","8","86","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\8ZTVVSZ8\S0164121213000563.html","","","Software testing; Adaptive random testing; Combinatorial testing; Model-based testing; Orchestrated survey; Search-based software testing; Symbolic execution; Test automation; Test case generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2VCZFPBE","conferencePaper","2013","Ahmad, Muhammad Ovais; Markkula, Jouni; Oivo, Markku","Kanban in software development: A systematic literature review","2013 39th Euromicro Conference on Software Engineering and Advanced Applications","","","10.1109/SEAA.2013.28","","Using of Kanban in software development is an emerging topic. This systematic literature review was conducted in order to analyze the current trend of Kanban usage in software development and to identify the obtained benefits and involved challenges. The search strategy resulted in 492 papers, of which 19 were identified as primary studies relevant to our research. The main reported benefits of using the Kanban method were improved lead time to deliver software, improved quality of software, improved communication and coordination, increased consistency of delivery, and decreased customer reported defects. The reported challenges included lack of knowledge and specialized training as well as various organizational issues. Additionally, suggested practices were extracted from the primary studies and summarized for guiding the practitioners interested in adopting Kanban. The findings of this literature review are intended for helping researchers and practitioners to gain a better understanding of the current state of Kanban usage in software development.","2013-09","2023-05-07 18:50:55","2023-05-07 18:50:55","","9-16","","","","","","Kanban in software development","","","","","","","","","","","","IEEE Xplore","","ISSN: 2376-9505","","C:\Users\gabra\Zotero\storage\REZQXNZ2\6619482.html","","","Software development management; Bibliographies; Systematics; software development; Context; Visualization; systematic literature review; kanban; lean approach; Manufacturing industries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 39th Euromicro Conference on Software Engineering and Advanced Applications","","","","","","","","","","","","","","",""
"PUUWMIMC","conferencePaper","2007","Martin, David; Rooksby, John; Rouncefield, Mark; Sommerville, Ian","'Good' Organisational Reasons for 'Bad' Software Testing: An Ethnographic Study of Testing in a Small Software Company","29th International Conference on Software Engineering (ICSE'07)","","","10.1109/ICSE.2007.1","","In this paper we report on an ethnographic study of a small software house to discuss the practical work of software testing. Through use of two rich descriptions, we discuss that 'rigour' in systems integration testing necessarily has to be organisationally defined. Getting requirements 'right', defining 'good' test scenarios and ensuring 'proper' test coverage are activities that need to be pragmatically achieved taking account of organisational realities and constraints such as: the dynamics of customer relationships; using limited effort in an effective way; timing software releases; and creating a market. We discuss how these organisational realities shape (1) requirements testing; (2) test coverage; (3) test automation; and (4) test scenario design.","2007-05","2023-05-07 18:51:26","2023-05-07 18:51:26","","602-611","","","","","","'Good' Organisational Reasons for 'Bad' Software Testing","","","","","","","","","","","","IEEE Xplore","","ISSN: 1558-1225","","C:\Users\gabra\Zotero\storage\U42NN2FW\4222621.html","","","Software engineering; Computer industry; Automatic testing; Software testing; System testing; Computer science; Shape; Best practices; Design automation; Timing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","29th International Conference on Software Engineering (ICSE'07)","","","","","","","","","","","","","","",""
"MS9KC654","conferencePaper","2010","Aasem, Muhammad; Ramzan, Muhammad; Jaffar, Arfan","Analysis and optimization of software requirements prioritization techniques","2010 International Conference on Information and Emerging Technologies","","","10.1109/ICIET.2010.5625687","","Prioritizing requirements helps the project team to understand which requirements are most important and most urgent. Based on this finding a software engineer can decide what to develop/implement in the first release and what on the coming releases. Prioritization is also a useful activity for decision making in other phases of software engineering like development, testing, and implementation. There are a number of techniques available to prioritize the requirements with their associated strengths and limitations. In this paper we will examine state of the art techniques and analyze their applicability on software requirements domain. At the end we present a framework that will help the software engineer of how to perform prioritization process by combining existing techniques and approaches.","2010-06","2023-05-07 18:51:29","2023-05-07 18:51:29","","1-6","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\ZVYHD46E\5625687.html","","","Software engineering; Requirements Engineering; Software; Planning; Decision making; Manuals; Humans; Current measurement; Prioritization Framework","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 International Conference on Information and Emerging Technologies","","","","","","","","","","","","","","",""
"SZHETZRA","journalArticle","2015","McZara, Jason; Sarkani, Shahryar; Holzer, Thomas; Eveleigh, Timothy","Software requirements prioritization and selection using linguistic tools and constraint solvers—a controlled experiment","Empirical Software Engineering","","1573-7616","10.1007/s10664-014-9334-8","https://doi.org/10.1007/s10664-014-9334-8","Implementing the entire set of requirements for a software system is often not feasible owing to time and resource limitations. A key driver for successful delivery of any software system is the ability to prioritize the large number of requirements. Prioritization of requirements is a key challenge because current methods are not scalable to handle a realistic number of requirements. Current methods for requirements prioritization in market-driven software development projects are neither sufficient nor proven. A prioritization technique that is more time-efficient, accurate, and easier to implement for large-scale projects than current practices is needed. We address these challenges with a prioritization method that incorporates the use of a linguistic tool and constraint solver. In this paper we propose a method, referred to as SNIPR, for requirements prioritization and selection based on natural language processing and satisfiability modulo theories solvers. We present a controlled experiment in which 40 systems engineers prioritized and selected 20 requirements from a list of 100 using SNIPR and the weighted sum model. Results show that the SNIPR method consumes less time, improves selection accuracy, and is easier to perform than the weighted sum model. These results motivate further research using linguistic tools and constraint solvers for the prioritization of large sets of requirements.","2015-12-01","2023-05-07 18:51:30","2023-05-07 18:51:30","2023-05-07 18:51:29","1721-1761","","6","20","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; NLP; Requirements prioritization; Controlled experiment; Release planning; SMT solver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XERMBC6Z","conferencePaper","2013","Di Nardo, Daniel; Alshahwan, Nadia; Briand, Lionel; Labiche, Yvan","Coverage-Based Test Case Prioritisation: An Industrial Case Study","Verification and Validation 2013 IEEE Sixth International Conference on Software Testing","","","10.1109/ICST.2013.27","","This paper presents an industrial case study of coverage-based prioritisation techniques on a real world system with real regression faults. The study evaluates four common and different test case prioritisation techniques and examines the effects of using various coverage criteria on the fault detection rates of the prioritised test suites. The results show that prioritisation techniques that are based on additional coverage with finer grained coverage criteria perform significantly better in fault detection rates. The study also reveals that using modification information does not significantly enhance fault detection rates.","2013-03","2023-05-07 18:52:28","2023-05-07 18:52:28","","302-311","","","","","","Coverage-Based Test Case Prioritisation","","","","","","","","","","","","IEEE Xplore","","ISSN: 2159-4848","","C:\Users\gabra\Zotero\storage\47WYYELN\6569742.html","","","Software; Testing; Measurement; Computer aided software engineering; test case prioritisation; regression testing; Data collection; Fault detection; industrial case study; Minimization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verification and Validation 2013 IEEE Sixth International Conference on Software Testing","","","","","","","","","","","","","","",""
"4JKKK9SE","conferencePaper","2014","Harman, M.; Jia, Y.; Krinke, J.; Langdon, W. B.; Petke, J.; Zhang, Y.","Search based software engineering for software product line engineering: a survey and directions for future work","Proceedings of the 18th International Software Product Line Conference - Volume 1","978-1-4503-2740-4","","10.1145/2648511.2648513","https://doi.org/10.1145/2648511.2648513","This paper presents a survey of work on Search Based Software Engineering (SBSE) for Software Product Lines (SPLs). We have attempted to be comprehensive, in the sense that we have sought to include all papers that apply computational search techniques to problems in software product line engineering. Having surveyed the recent explosion in SBSE for SPL research activity, we highlight some directions for future work. We focus on suggestions for the development of recent advances in genetic improvement, showing how these might be exploited by SPL researchers and practitioners: Genetic improvement may grow new products with new functional and non-functional features and graft these into SPLs. It may also merge and parameterise multiple branches to cope with SPL branchmania.","2014-09-15","2023-05-07 18:52:32","2023-05-07 18:52:32","2023-05-07","5–18","","","","","","Search based software engineering for software product line engineering","SPLC '14","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","genetic programming; program synthesis; SBSE; SPL","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GNTJBWSX","journalArticle","2012","McGee, Sharon; Greer, Des","Towards an understanding of the causes and effects of software requirements change: two case studies","Requirements Engineering","","1432-010X","10.1007/s00766-012-0149-0","https://doi.org/10.1007/s00766-012-0149-0","Changes to software requirements not only pose a risk to the successful delivery of software applications but also provide opportunity for improved usability and value. Increased understanding of the causes and consequences of change can support requirements management and also make progress towards the goal of change anticipation. This paper presents the results of two case studies that address objectives arising from that ultimate goal. The first case study evaluated the potential of a change source taxonomy containing the elements ‘market’, ‘organisation’, ‘vision’, ‘specification’, and ‘solution’ to provide a meaningful basis for change classification and measurement. The second case study investigated whether the requirements attributes of novelty, complexity, and dependency correlated with requirements volatility. While insufficiency of data in the first case study precluded an investigation of changes arising due to the change source of ‘market’, for the remainder of the change sources, results indicate a significant difference in cost, value to the customer and management considerations. Findings show that higher cost and value changes arose more often from ‘organisation’ and ‘vision’ sources; these changes also generally involved the co-operation of more stakeholder groups and were considered to be less controllable than changes arising from the ‘specification’ or ‘solution’ sources. Results from the second case study indicate that only ‘requirements dependency’ is consistently correlated with volatility and that changes coming from each change source affect different groups of requirements. We conclude that the taxonomy can provide a meaningful means of change classification, but that a single requirement attribute is insufficient for change prediction. A theoretical causal account of requirements change is drawn from the implications of the combined results of the two case studies.","2012-06-01","2023-05-07 18:52:33","2023-05-07 18:52:33","2023-05-07 18:52:32","133-155","","2","17","","Requirements Eng","Towards an understanding of the causes and effects of software requirements change","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\A6XZ566X\McGee and Greer - 2012 - Towards an understanding of the causes and effects.pdf","","","Requirements volatility; Collaborative case study; Requirements change; Requirements evolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TKFXJNSY","book","2012","Chung, Lawrence; Nixon, Brian A.; Yu, Eric; Mylopoulos, John","Non-Functional Requirements in Software Engineering","","978-1-4615-5269-7","","","","Non-Functional Requirements in Software Engineering presents a systematic and pragmatic approach to `building quality into' software systems. Systems must exhibit software quality attributes, such as accuracy, performance, security and modifiability. However, such non-functional requirements (NFRs) are difficult to address in many projects, even though there are many techniques to meet functional requirements in order to provide desired functionality. This is particularly true since the NFRs for each system typically interact with each other, have a broad impact on the system and may be subjective. To enable developers to systematically deal with a system's diverse NFRs, this book presents the NFR Framework. Structured graphical facilities are offered for stating NFRs and managing them by refining and inter-relating NFRs, justifying decisions, and determining their impact. Since NFRs might not be absolutely achieved, they may simply be satisfied sufficiently (`satisficed'). To reflect this, NFRs are represented as `softgoals', whose interdependencies, such as tradeoffs and synergy, are captured in graphs. The impact of decisions is qualitatively propagated through the graph to determine how well a chosen target system satisfices its NFRs. Throughout development, developers direct the process, using their expertise while being aided by catalogues of knowledge about NFRs, development techniques and tradeoffs, which can all be explored, reused and customized.  Non-Functional Requirements in Software Engineering demonstrates the applicability of the NFR Framework to a variety of NFRs, domains, system characteristics and application areas. This will help readers apply the Framework to NFRs and domains of particular interest to them. Detailed treatments of particular NFRs - accuracy, security and performance requirements - along with treatments of NFRs for information systems are presented as specializations of the NFR Framework. Case studies of NFRs for a variety of information systems include credit card and administrative systems. The use of the Framework for particular application areas is illustrated for software architecture as well as enterprise modelling. Feedback from domain experts in industry and government provides an initial evaluation of the Framework and some case studies. Drawing on research results from several theses and refereed papers, this book's presentation, terminology and graphical notation have been integrated and illustrated with many figures.  Non-Functional Requirements in Software Engineering is an excellent resource for software engineering practitioners, researchers and students.","2012-12-06","2023-05-07 18:53:01","2023-05-07 18:53:01","","","458","","","","","","","","","","Springer Science & Business Media","","en","","","","","Google Books","","Google-Books-ID: MNrcBwAAQBAJ","","","https://books.google.co.in/books?id=MNrcBwAAQBAJ","","Computers / Software Development & Engineering / General; Computers / Information Technology; Computers / Artificial Intelligence / General; Computers / Data Science / General; Mathematics / Discrete Mathematics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LNQQDY4T","journalArticle","2000","van Lamsweerde, A.; Letier, E.","Handling obstacles in goal-oriented requirements engineering","IEEE Transactions on Software Engineering","","1939-3520","10.1109/32.879820","","Requirements engineering is concerned with the elicitation of high-level goals to be achieved by the envisioned system, the refinement of such goals and their operationalization into specifications of services and constraints and the assignment of responsibilities for the resulting requirements to agents such as humans, devices and software. Requirements engineering processes often result in goals, requirements, and assumptions about agent behavior that are too ideal; some of them are likely not to be satisfied from time to time in the running system due to unexpected agent behavior. The lack of anticipation of exceptional behaviors results in unrealistic, unachievable, and/or incomplete requirements. As a consequence, the software developed from those requirements will not be robust enough and will inevitably result in poor performance or failures, sometimes with critical consequences on the environment. This paper presents formal techniques for reasoning about obstacles to the satisfaction of goals, requirements, and assumptions elaborated in the requirements engineering process. The techniques are based on a temporal logic formalization of goals and domain properties; they are integrated into an existing method for goal-oriented requirements elaboration with the aim of deriving more realistic, complete, and robust requirements specifications. A key principle is to handle exceptions at requirements engineering time and at the goal level, so that more freedom is left for resolving them in a satisfactory way. The various techniques proposed are illustrated and assessed in the context of a real safety-critical system.","2000-10","2023-05-07 19:05:21","2023-05-07 19:05:21","","978-1005","","10","26","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\EHWWJNJ4\879820.html","","","Software engineering; Software systems; Robustness; Face; Software performance; Humans; Stress; Dispatching; Logic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XWG3TURL","journalArticle","2006","Wieringa, Roel; Maiden, Neil; Mead, Nancy; Rolland, Colette","Requirements engineering paper classification and evaluation criteria: a proposal and a discussion","Requirements Engineering","","1432-010X","10.1007/s00766-005-0021-6","https://doi.org/10.1007/s00766-005-0021-6","","2006-03-01","2023-05-07 19:05:25","2023-05-07 19:05:25","2023-05-07 19:05:25","102-107","","1","11","","Requirements Eng","Requirements engineering paper classification and evaluation criteria","","","","","","","en","","","","","Springer Link","","","","","","","Paper classification; Paper evaluation criteria; Requirements engineering research; Research methods","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I3UBXFPC","conferencePaper","2001","van Lamsweerde, A.","Goal-oriented requirements engineering: a guided tour","Proceedings Fifth IEEE International Symposium on Requirements Engineering","","","10.1109/ISRE.2001.948567","","Goals capture, at different levels of abstraction, the various objectives the system under consideration should achieve. Goal-oriented requirements engineering is concerned with the use of goals for eliciting, elaborating, structuring, specifying, analyzing, negotiating, documenting, and modifying requirements. This area has received increasing attention. The paper reviews various research efforts undertaken along this line of research. The arguments in favor of goal orientation are first briefly discussed. The paper then compares the main approaches to goal modeling, goal specification and goal-based reasoning in the many activities of the requirements engineering process. To make the discussion more concrete, a real case study is used to suggest what a goal-oriented requirements engineering method may look like. Experience, with such approaches and tool support are briefly discussed as well.","2001-08","2023-05-07 19:05:32","2023-05-07 19:05:32","","249-262","","","","","","Goal-oriented requirements engineering","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\QM59ACTP\948567.html","","","Quality management; Documentation; Unified modeling language; Object oriented modeling; Concrete; Control systems; Electrical equipment industry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings Fifth IEEE International Symposium on Requirements Engineering","","","","","","","","","","","","","","",""
"D9JJKI4D","journalArticle","2003","Gordijn, Jaap; Akkermans, J.M.","Value-based requirements engineering: exploring innovative e-commerce ideas","Requirements Engineering","","1432-010X","10.1007/s00766-003-0169-x","https://doi.org/10.1007/s00766-003-0169-x","Innovative e-commerce ideas are characterised by commercial products yet unknown to the market, enabled by information technology such as the Internet and technologies on top of it. How to develop such products is hardly known. We propose an interdisciplinary approach, e3-value, to explore an innovative e-commerce idea with the aim of understanding such an idea thoroughly and evaluating it for potential profitability. Our methodology exploits a requirements engineering way of working, but employs concepts and terminology from business science, marketing and axiology. It shows how to model business requirements and improve business–IT alignment, in sophisticated multi-actor value constellations that are common in electronic commerce. In addition to the e3-value approach methodology, we also present the action research-based development of our methodology, by using one of the longitudinal projects we carried out in the field of online news article provisioning.","2003-07-01","2023-05-07 19:07:36","2023-05-07 19:07:36","2023-05-07 19:07:35","114-134","","2","8","","Requirements Eng","Value-based requirements engineering","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\8HL8777C\Gordijn and Akkermans - 2003 - Value-based requirements engineering exploring in.pdf","","","Action research; Conceptual modelling; E-commerce; Economic value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BBKXD2A9","journalArticle","2014","Ali, Waqas; Rafiq, Adeel; Nadeem Majeed, Muhammad","Requirements Engineering in Software Houses of Pakistan","International Journal of Modern Education and Computer Science","","20750161, 2075017X","10.5815/ijmecs.2014.09.07","http://www.mecs-press.org/ijmecs/ijmecs-v6-n9/v6n9-7.html","Requirement engineering is an essence of software development life cycle. The more time we spend on requirement engineering, higher the probability of success. Effective requirement engineering ensures and predicts successful software product. This paper presents the adaptation of requirement engineering practices in small and medium size companies of Pakistan. The study is conducted by questionnaires to show how much of requirement engineering models and practices are followed in Pakistan.","2014-09-08","2023-05-07 19:07:46","2023-05-07 19:07:46","2023-05-07 19:07:46","47-53","","9","6","","IJMECS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\TK3BLB3B\Ali et al. - 2014 - Requirements Engineering in Software Houses of Pak.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JGFW6VUW","journalArticle","2010","Castillo, Isi; Losavio, Francisca; Matteo, Alfredo; Bøegh, Jørgen","REquirements, Aspects and Software Quality: the REASQ model.","The Journal of Object Technology","","1660-1769","10.5381/jot.2010.9.4.a4","http://www.jot.fm/contents/issue_2010_07/article4.html","Object-oriented analysis and design have been more concerned with system functionality, neglecting non-functional aspects; the result is code which is tangled and diﬃcult to maintain, contradicting main principles of object orientation. Aspect Oriented Software Development (AOSD) proposes the early speciﬁcation of non-functional requirements. However, a standard and homogenous vision of the AOSD terminology is still missing. The goal of this work is to integrate AOSD concepts, classic requirements engineering notions, and the new standard ISO/IEC 25030 on software quality requirements.The main result of this study is the REASQ (REquirements, Aspects and Software Quality) conceptual model, expressed in UML. All the modelling concepts are formalized into three related ontologies, representing the ambits of aspect-orientation, software quality and requirements engineering. The ontologies can be used as an umbrella to specify quality requirements in aspect-oriented engineering processes.","2010","2023-05-07 19:07:53","2023-05-07 19:07:54","2023-05-07 19:07:53","69","","4","9","","JOT","REquirements, Aspects and Software Quality","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\R9ALJCJS\Castillo et al. - 2010 - REquirements, Aspects and Software Quality the RE.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BCXEIYDX","bookSection","2005","","Requirements Engineering in the Solution Domain","Requirements Engineering","978-1-84628-075-7","","","https://doi.org/10.1007/1-84628-075-3_6","","2005","2023-05-07 19:08:34","2023-05-07 19:08:34","2023-05-07 19:08:34","109-129","","","","","","","","","","","Springer","London","en","","","","","Springer Link","","DOI: 10.1007/1-84628-075-3_6","","","","","Requirement Engineer; Input Requirement; Solution Domain; State Transition Diagram; System Requirement","Hull, Elizabeth; Jackson, Kenneth; Dick, Jeremy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VAKAHLVN","conferencePaper","2010","Wasserman, Anthony I.","Software engineering issues for mobile application development","Proceedings of the FSE/SDP workshop on Future of software engineering research","978-1-4503-0427-6","","10.1145/1882362.1882443","https://doi.org/10.1145/1882362.1882443","This paper provides an overview of important software engineering research issues related to the development of applications that run on mobile devices. Among the topics are development processes, tools, user interface design, application portability, quality, and security.","2010-11-07","2023-05-07 19:08:38","2023-05-07 19:08:38","2023-05-07","397–400","","","","","","","FoSER '10","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\PTMCCC9Y\Wasserman - 2010 - Software engineering issues for mobile application.pdf","","","software engineering; application development; mobile devices; programming environments; research agenda; user interface design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BNMKCET8","journalArticle","2009","Moody, Daniel","The “Physics” of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2009.67","","Visual notations form an integral part of the language of software engineering (SE). Yet historically, SE researchers and notation designers have ignored or undervalued issues of visual representation. In evaluating and comparing notations, details of visual syntax are rarely discussed. In designing notations, the majority of effort is spent on semantics, with graphical conventions largely an afterthought. Typically, no design rationale, scientific or otherwise, is provided for visual representation choices. While SE has developed mature methods for evaluating and designing semantics, it lacks equivalent methods for visual syntax. This paper defines a set of principles for designing cognitively effective visual notations: ones that are optimized for human communication and problem solving. Together these form a design theory, called the Physics of Notations as it focuses on the physical (perceptual) properties of notations rather than their logical (semantic) properties. The principles were synthesized from theory and empirical evidence from a wide range of fields and rest on an explicit theory of how visual notations communicate. They can be used to evaluate, compare, and improve existing visual notations as well as to construct new ones. The paper identifies serious design flaws in some of the leading SE notations, together with practical suggestions for improving them. It also showcases some examples of visual notation design excellence from SE and other fields.","2009-11","2023-05-07 19:08:54","2023-05-07 19:08:54","","756-779","","6","35","","","The “Physics” of Notations","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\FM6GTJV9\5353439.html","","","Software engineering; Unified modeling language; Computer industry; Problem-solving; Modeling; Visualization; Concrete; analysis; communication; Humans; concrete syntax.; Design optimization; diagrams; Flowcharts; Physics; visual syntax; visualization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YPMK48R7","book","2003","Glass, Robert L.","Facts and Fallacies of Software Engineering","","978-0-321-11742-7","","","","The practice of building software is a ""new kid on the block"" technology. Though it may not seem this way for those who have been in the field for most of their careers, in the overall scheme of professions, software builders are relative ""newbies."" In the short history of the software field, a lot of facts have been identified, and a lot of fallacies promulgated. Those facts and fallacies are what this book is about.  There's a problem with those facts-and, as you might imagine, those fallacies. Many of these fundamentally important facts are learned by a software engineer, but over the short lifespan of the software field, all too many of them have been forgotten. While reading Facts and Fallacies of Software Engineering, you may experience moments of ""Oh, yes, I had forgotten that,"" alongside some ""Is that really true?"" thoughts. The author of this book doesn't shy away from controversy. In fact, each of the facts and fallacies is accompanied by a discussion of whatever controversy envelops it. You may find yourself agreeing with a lot of the facts and fallacies, yet emotionally disturbed by a few of them! Whether you agree or disagree, you will learn why the author has been called ""the premier curmudgeon of software practice."" These facts and fallacies are fundamental to the software building field-forget or neglect them at your peril!","2003","2023-05-07 19:09:17","2023-05-07 19:09:17","","","218","","","","","","","","","","Addison-Wesley Professional","","en","","","","","Google Books","","","","","https://books.google.co.in/books?id=3Ntz-UJzZN0C","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GZIYMDQF","book","2012","Robertson, Suzanne; Robertson, James","Mastering the Requirements Process: Getting Requirements Right","","978-0-13-294284-3","","","","“If the purpose is to create one of the best books on requirements yet written, the authors have succeeded.”  —Capers Jones  Software can solve almost any problem. The trick is knowing what the problem is. With about half of all software errors originating in the requirements activity, it is clear that a better understanding of the problem is needed.    Getting the requirements right is crucial if we are to build systems that best meet our needs. We know, beyond doubt, that the right requirements produce an end result that is as innovative and beneficial as it can be, and that system development is both effective and efficient.      Mastering the Requirements Process: Getting Requirements Right, Third Edition,   sets out an industry-proven process for gathering and verifying requirements, regardless of whether you work in a traditional or agile development environment. In this sweeping update of the bestselling guide, the authors show how to discover precisely what the customer wants and needs, in the most efficient manner possible.   Features include   The Volere requirements process for discovering requirements, for use with both traditional and iterative environments   A specification template that can be used as the basis for your own requirements specifications   Formality guides that help you funnel your efforts into only the requirements work needed for your particular development environment and project   How to make requirements testable using fit criteria   Checklists to help identify stakeholders, users, non-functional requirements, and more   Methods for reusing requirements and requirements patterns    New features include   Strategy guides for different environments, including outsourcing   Strategies for gathering and implementing requirements for iterative releases   “Thinking above the line” to find the real problem   How to move from requirements to finding the right solution   The Brown Cow model for clearer viewpoints of the system   Using story cards as requirements   Using the Volere Knowledge Model to help record and communicate requirements   Fundamental truths about requirements and system development","2012-08-06","2023-05-07 19:09:21","2023-05-07 19:09:21","","","579","","","","","Mastering the Requirements Process","","","","","Addison-Wesley","","en","","","","","Google Books","","Google-Books-ID: yE91LgrpaHsC","","","https://books.google.co.in/books?id=yE91LgrpaHsC","","Computers / Software Development & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8ED85EXZ","journalArticle","2009","Šilingas, Darius; Butleris, Rimantas","TOWARDS IMPLEMENTING A FRAMEWORK FOR MODELING SOFTWARE REQUIREMENTS IN MAGICDRAW UML","Information Technology and Control","","2335-884X","","https://itc.ktu.lt/index.php/ITC/article/view/12097","UML is considered to be de facto standard for software modeling. However, in software requirements analysis it is quite common to apply only use case and activity diagrams and focus on the textual requirements specification with some non-standard graphical illustrations. In this paper we present a framework for modeling software requirements consistently using multiple UML diagrams. We illustrate the application of this framework with the examples of different requirements artifacts based on a case study system MagicTest. We discuss how such a framework could be implemented in one of the most popular UML tools, MagicDraw UML, by using its powerful features for customizing the modeling environment, defining methodology wizards, specifying validation rules, analyzing model element relationships, and generating documentation based on user-defined templates. We recognize that our approach provides the foundation, which could and should be refined and extended for special cases of requirements analysis. Our work should be considered as a starting point for practitioners trying to adopt UML for requirements analysis and for scientists working on creating more detailed requirements analysis methods based on UML.","2009-06-12","2023-05-07 19:09:25","2023-05-07 19:09:25","2023-05-07 19:09:25","","","2","38","","","","","","","","","","en","Copyright (c)","","","","www.itc.ktu.lt","","Number: 2","","C:\Users\gabra\Zotero\storage\QHNM7X46\Šilingas and Butleris - 2009 - TOWARDS IMPLEMENTING A FRAMEWORK FOR MODELING SOFT.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ITPCFWCG","journalArticle","2015","Petersen, Kai; Vakkalanka, Sairam; Kuzniarz, Ludwik","Guidelines for conducting systematic mapping studies in software engineering: An update","Information and Software Technology","","0950-5849","10.1016/j.infsof.2015.03.007","https://www.sciencedirect.com/science/article/pii/S0950584915000646","Context Systematic mapping studies are used to structure a research area, while systematic reviews are focused on gathering and synthesizing evidence. The most recent guidelines for systematic mapping are from 2008. Since that time, many suggestions have been made of how to improve systematic literature reviews (SLRs). There is a need to evaluate how researchers conduct the process of systematic mapping and identify how the guidelines should be updated based on the lessons learned from the existing systematic maps and SLR guidelines. Objective To identify how the systematic mapping process is conducted (including search, study selection, analysis and presentation of data, etc.); to identify improvement potentials in conducting the systematic mapping process and updating the guidelines accordingly. Method We conducted a systematic mapping study of systematic maps, considering some practices of systematic review guidelines as well (in particular in relation to defining the search and to conduct a quality assessment). Results In a large number of studies multiple guidelines are used and combined, which leads to different ways in conducting mapping studies. The reason for combining guidelines was that they differed in the recommendations given. Conclusion The most frequently followed guidelines are not sufficient alone. Hence, there was a need to provide an update of how to conduct systematic mapping studies. New guidelines have been proposed consolidating existing findings.","2015-08-01","2023-05-07 19:09:31","2023-05-07 19:09:31","2023-05-07 19:09:31","1-18","","","64","","Information and Software Technology","Guidelines for conducting systematic mapping studies in software engineering","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\VFXPLE6F\S0950584915000646.html","","","Software engineering; Guidelines; Systematic mapping studies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EYZQL4Z6","book","2010","Abrial, Jean-Raymond","Modeling in Event-B: System and Software Engineering","","978-1-139-64397-9","","","","A practical text suitable for an introductory or advanced course in formal methods, this book presents a mathematical approach to modelling and designing systems using an extension of the B formal method: Event-B. Based on the idea of refinement, the author's systematic approach allows the user to construct models gradually and to facilitate a systematic reasoning method by means of proofs. Readers will learn how to build models of programs and, more generally, discrete systems, but this is all done with practice in mind. The numerous examples provided arise from various sources of computer system developments, including sequential programs, concurrent programs and electronic circuits. The book also contains a large number of exercises and projects ranging in difficulty. Each of the examples included in the book has been proved using the Rodin Platform tool set, which is available free for download at www.event-b.org.","2010-05-13","2023-05-07 19:09:44","2023-05-07 19:09:44","","","613","","","","","Modeling in Event-B","","","","","Cambridge University Press","","en","","","","","Google Books","","Google-Books-ID: 23UgAwAAQBAJ","","","https://books.google.co.in/books?id=23UgAwAAQBAJ","","Computers / Software Development & Engineering / Systems Analysis & Design; Computers / Programming / General; Mathematics / Discrete Mathematics; Computers / Languages / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z6LGCPSH","webpage","","","Requirements engineering in the year 00 | Proceedings of the 22nd international conference on Software engineering","","","","","https://dl.acm.org/doi/abs/10.1145/337180.337184","","","2023-05-07 19:17:58","2023-05-07 19:17:58","2023-05-07 19:17:58","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\AN8ZJIZY\337180.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IX76UH3S","conferencePaper","2007","Cheng, Betty H.C.; Atlee, Joanne M.","Research Directions in Requirements Engineering","Future of Software Engineering (FOSE '07)","","","10.1109/FOSE.2007.17","","In this paper, we review current requirements engineering (RE) research and identify future research directions suggested by emerging software needs. First, we overview the state of the art in RE research. The research is considered with respect to technologies developed to address specific requirements tasks, such as elicitation, modeling, and analysis. Such a review enables us to identify mature areas of research, as well as areas that warrant further investigation. Next, we review several strategies for performing and extending RE research results, to help delineate the scope of future research directions. Finally, we highlight what we consider to be the ""hot"" current and future research topics, which aim to address RE needs for emerging systems of the future.","2007-05","2023-05-07 19:18:03","2023-05-07 19:18:03","","285-303","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\N3QCF6TY\4221627.html; C:\Users\gabra\Zotero\storage\2KRYBQ7X\Cheng and Atlee - 2007 - Research Directions in Requirements Engineering.pdf","","","Context modeling; Documentation; Software engineering; Conferences; Software systems; Computer science; Buildings; Model driven engineering; Software design; USA Councils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Future of Software Engineering (FOSE '07)","","","","","","","","","","","","","","",""
"XXCFRAPU","journalArticle","2021","Hayat Khan, Huma; Noman Malik, Muhammad; Alotaibi, Youseef; Alsufyani, Abdulmajeed; Alghamdi, Saleh","Crowdsourced Requirements Engineering Challenges and Solutions: A Software Industry Perspective","Computer Systems Science and Engineering","","0267-6192","10.32604/csse.2021.016510","https://www.techscience.com/csse/v39n2/43832","Software crowdsourcing (SW CS) is an evolving software development paradigm, in which crowds of people are asked to solve various problems through an open call (with the encouragement of prizes for the top solutions). Because of its dynamic nature, SW CS has been progressively accepted and adopted in the software industry. However, issues pertinent to the understanding of requirements among crowds of people and requirements engineers are yet to be clariﬁed and explained. If the requirements are not clear to the development team, it has a signiﬁcant effect on the quality of the software product. This study aims to identify the potential challenges faced by requirements engineers when conducting the SW–CS based requirements engineering (RE) process. Moreover, solutions to overcome these challenges are also identiﬁed. Qualitative data analysis is performed on the interview data collected from software industry professionals. Consequently, 20 SW–CS based RE challenges and their subsequent proposed solutions are devised, which are further grouped under seven categories. This study is beneﬁcial for academicians, researchers and practitioners by providing detailed SW–CS based RE challenges and subsequent solutions that could eventually guide them to understand and effectively implement RE in SW CS.","2021","2023-05-07 19:18:11","2023-05-07 19:18:12","2023-05-07 19:18:11","221-236","","2","39","","","Crowdsourced Requirements Engineering Challenges and Solutions","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\BBHQT6YX\Hayat Khan et al. - 2021 - Crowdsourced Requirements Engineering Challenges a.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3XT2HUV6","conferencePaper","2003","Liu, L.; Yu, E.; Mylopoulos, J.","Security and privacy requirements analysis within a social setting","Proceedings. 11th IEEE International Requirements Engineering Conference, 2003.","","","10.1109/ICRE.2003.1232746","","Security issues for software systems ultimately concern relationships among social actors stakeholders, system users, potential attackers - and the software acting on their behalf. We propose a methodological framework for dealing with security and privacy requirements based on i*, an agent-oriented requirements modeling language. The framework supports a set of analysis techniques. In particular, attacker analysis helps identify potential system abusers and their malicious intents. Dependency vulnerability analysis helps detect vulnerabilities in terms of organizational relationships among stakeholders. Countermeasure analysis supports the dynamic decision-making process of defensive system players in addressing vulnerabilities and threats. Finally, access control analysis bridges the gap between security requirement models and security implementation models. The framework is illustrated with an example involving security and privacy concerns in the design of agent-based health information systems. In addition, we discuss model evaluation techniques, including qualitative goal model analysis and property verification techniques based on model checking.","2003-09","2023-05-07 19:19:47","2023-05-07 19:19:47","","151-161","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","C:\Users\gabra\Zotero\storage\5ZUR733Q\Liu et al. - 2003 - Security and privacy requirements analysis within .pdf","","","Privacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings. 11th IEEE International Requirements Engineering Conference, 2003.","","","","","","","","","","","","","","",""
"TEA8MDI7","journalArticle","2014","Thüm, Thomas; Kästner, Christian; Benduhn, Fabian; Meinicke, Jens; Saake, Gunter; Leich, Thomas","FeatureIDE: An extensible framework for feature-oriented software development","Science of Computer Programming","","0167-6423","10.1016/j.scico.2012.06.002","https://www.sciencedirect.com/science/article/pii/S0167642312001128","FeatureIDE is an open-source framework for feature-oriented software development (FOSD) based on Eclipse. FOSD is a paradigm for the construction, customization, and synthesis of software systems. Code artifacts are mapped to features, and a customized software system can be generated given a selection of features. The set of software systems that can be generated is called a software product line (SPL). FeatureIDE supports several FOSD implementation techniques such as feature-oriented programming, aspect-oriented programming, delta-oriented programming, and preprocessors. All phases of FOSD are supported in FeatureIDE, namely domain analysis, requirements analysis, domain implementation, and software generation.","2014-01-01","2023-05-07 19:19:51","2023-05-07 19:19:51","2023-05-07 19:19:51","70-85","","","79","","Science of Computer Programming","FeatureIDE","Experimental Software and Toolkits (EST 4): A special issue of the Workshop on Academic Software Development Tools and Techniques (WASDeTT-3 2010)","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\HREFM6Q4\Thüm et al. - 2014 - FeatureIDE An extensible framework for feature-or.pdf","","","Software product lines; Feature modeling; Tool support; Aspect-oriented programming; Delta-oriented programming; Feature-oriented programming; Feature-oriented software development; Preprocessors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WB4SX3W8","webpage","","","Toward Agile: An Integrated Analysis of Quantitative and Qualitative Field Data on Software Development Agility on JSTOR⁤","","","","","https://www.jstor.org/stable/20721416","","","2023-05-07 19:19:57","2023-05-07 19:19:57","2023-05-07 19:19:57","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\FCE6DC74\20721416.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HWCE62YL","journalArticle","2001","Ramesh, B.; Jarke, M.","Toward reference models for requirements traceability","IEEE Transactions on Software Engineering","","1939-3520","10.1109/32.895989","","Requirements traceability is intended to ensure continued alignment between stakeholder requirements and various outputs of the system development process. To be useful, traces must be organized according to some modeling framework. Indeed, several such frameworks have been proposed, mostly based on theoretical considerations or analysis of other literature. This paper, in contrast, follows an empirical approach. Focus groups and interviews conducted in 26 major software development organizations demonstrate a wide range of traceability practices with distinct low-end and high-end users of traceability. From these observations, reference models comprising the most important kinds of traceability links for various development tasks have been synthesized. The resulting models have been validated in case studies and are incorporated in a number of traceability tools. A detailed case study on the use of the models is presented. Four kinds of traceability link types are identified and critical issues that must be resolved for implementing each type and potential solutions are discussed. Implications for the design of next-generation traceability methods and tools are discussed and illustrated.","2001-01","2023-05-07 19:20:29","2023-05-07 19:20:29","","58-93","","1","27","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\WFYE637B\895989.html","","","Design engineering; Programming; Prototypes; Costs; Mathematical model; Computer science; Engineering management; Standards organizations; Best practices","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CRGKA4J9","journalArticle","2005","Lethbridge, Timothy C.; Sim, Susan Elliott; Singer, Janice","Studying Software Engineers: Data Collection Techniques for Software Field Studies","Empirical Software Engineering","","1573-7616","10.1007/s10664-005-1290-x","https://doi.org/10.1007/s10664-005-1290-x","Software engineering is an intensively people-oriented activity, yet too little is known about how designers, maintainers, requirements analysts and all other types of software engineers perform their work. In order to improve software engineering tools and practice, it is therefore essential to conduct field studies, i.e. to study real practitioners as they solve real problems. To do so effectively, however, requires an understanding of the techniques most suited to each type of field study task. In this paper, we provide a taxonomy of techniques, focusing on those for data collection. The taxonomy is organized according to the degree of human intervention each requires. For each technique, we provide examples from the literature, an analysis of some of its advantages and disadvantages, and a discussion of how to use it effectively. We also briefly talk about field study design in general, and data analysis.","2005-07-01","2023-05-07 19:20:33","2023-05-07 19:20:33","2023-05-07 19:20:33","311-341","","3","10","","Empir Software Eng","Studying Software Engineers","","","","","","","en","","","","","Springer Link","","","","","","","empirical software engineering; Field studies; work practices","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HY49M2ZD","journalArticle","2012","Abu Rub, Faisal A.; Issa, Ayman A.","A business process modeling‐based approach to investigate complex processes: Software development case study","Business Process Management Journal","","1463-7154","10.1108/14637151211215046","https://doi.org/10.1108/14637151211215046","Purpose – The purpose of this paper is to develop a new approach to investigate complex processes, such as software development processes, using business process modeling. Design/methodology/approach – The paper presents an investigation into the use of role activity diagramming (RAD) to model complex processes in the software industry sector, with reference to the process of TestWarehouse as a case study. Findings – Systematic extension and quantitative analysis to RAD models led to the discovery of process bottlenecks, identification of cross functional boundary problems, and focused discussion about automation of processes. Research limitations/implications – Further work is required to validate and evaluate the proposed approach using several cases with different application domains and thus generalize the adopted approach. Practical implications – A new approach has been used successfully to understand and analyze business processes. The tools and techniques that are used to perform the approach are not complicated and do not need much specialist expertise, so the approach is not only oriented toward specialists but also toward organizations' managers and staff. Originality/value – New techniques have been developed by using process modelling to deepen the understanding and analyzing of complex organizational processes. This research implements a practical investigation which uses a case study to validate the new techniques.","2012-01-01","2023-05-07 19:20:42","2023-05-07 19:20:42","2023-05-07 19:20:42","122-137","","1","18","","","A business process modeling‐based approach to investigate complex processes","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Group Publishing Limited","","C:\Users\gabra\Zotero\storage\Z6TAGFXS\html.html","","","Process management; Computer software; Process modelling; Role activity diagramming; Software development processes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QYBEF9HS","book","2003","Kan, Stephen H.","Metrics and Models in Software Quality Engineering","","978-0-201-72915-3","","","","""""This is the single best book on software quality engineering and metrics that I've encountered.""""--Capers Jones, from the Foreword""Metrics and Models in Software Quality Engineering, Second Edition,"" is the definitive book on this essential topic of software development. Comprehensive in scope with extensive industry examples, it shows how to measure software quality and use measurements to improve the software development process. Four major categories of quality metrics and models are addressed: quality management, software reliability and projection, complexity, and customer view. In addition, the book discusses the fundamentals of measurement theory, specific quality metrics and tools, and methods for applying metrics to the software development process.New chapters bring coverage of critical topics, including: In-process metrics for software testingMetrics for object-oriented software developmentAvailability metricsMethods for conducting in-process quality assessments and software project assessmentsDos and Don'ts of Software Process Improvement, by Patrick O'TooleUsing Function Point Metrics to Measure Software Process Improvement, by Capers Jones In addition to the excellent balance of theory, techniques, and examples, this book is highly instructive and practical, covering one of the most important topics in software development--quality engineering.  0201729156B08282002","2003","2023-05-07 19:25:39","2023-05-07 19:25:39","","","564","","","","","","","","","","Addison-Wesley Professional","","en","","","","","Google Books","","Google-Books-ID: EaefcL3pWJYC","","","https://books.google.co.in/books?id=EaefcL3pWJYC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JK4HEEIQ","journalArticle","2000","Boehm, Barry; Abts, Chris; Chulani, Sunita","Software development cost estimation approaches — A survey","Annals of Software Engineering","","1573-7489","10.1023/A:1018991717352","https://doi.org/10.1023/A:1018991717352","This paper summarizes several classes of software cost estimation models and techniques: parametric models, expertise‐based techniques, learning‐oriented techniques, dynamics‐based models, regression‐based models, and composite‐Bayesian techniques for integrating expertise‐based and regression‐based models. Experience to date indicates that neural‐net and dynamics‐based techniques are less mature than the other classes of techniques, but that all classes of techniques are challenged by the rapid pace of change in software technology. The primary conclusion is that no single technique is best for all situations, and that a careful comparison of the results of several approaches is most likely to produce realistic estimates.","2000-11-01","2023-05-07 19:25:45","2023-05-07 19:25:45","2023-05-07 19:25:45","177-205","","1","10","","Annals of Software Engineering","","","","","","","","en","","","","","Springer Link","","","","","","","Software Project; Effort Multiplier; Ordinary Little Square Approach; Ordinary Little Square Method; Work Breakdown Structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JQZGSGWA","journalArticle","2003","Herbsleb, J.D.; Mockus, A.","An empirical study of speed and communication in globally distributed software development","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2003.1205177","","Global software development is rapidly becoming the norm for technology companies. Previous qualitative research suggests that distributed development may increase development cycle time for individual work items (modification requests). We use both data from the source code change management system and survey data to model the extent of delay in a distributed software development organization and explore several possible mechanisms for this delay. One key finding is that distributed work items appear to take about two and one-half times as long to complete as similar items where all the work is colocated. The data strongly suggest a mechanism for the delay, i.e., that distributed work items involve more people than comparable same-site work items, and the number of people involved is strongly related to the calendar time to complete a work item. We replicate the analysis of change data in a different organization with a different product and different sites and confirm our main findings. We also report survey results showing differences between same-site and distributed social networks, testing several hypotheses about characteristics of distributed social networks that may be related to delay. We discuss implications of our findings for practices and collaboration technology that have the potential for dramatically speeding distributed software development.","2003-06","2023-05-07 19:25:48","2023-05-07 19:25:48","","481-494","","6","29","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\E72HQ8I8\1205177.html; C:\Users\gabra\Zotero\storage\4Q6EQUMR\Herbsleb and Mockus - 2003 - An empirical study of speed and communication in g.pdf","","","Data analysis; Programming; Software development management; Collaborative software; Collaborative work; Testing; Delay effects; Frequency; Calendars; Social network services","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7DFHS32E","bookSection","2002","Yoo, Terry S.; Ackerman, Michael J.; Lorensen, William E.; Schroeder, Will; Chalana, Vikram; Aylward, Stephen; Metaxas, Dimitris; Whitaker, Ross","Engineering and Algorithm Design for an Image Processing API: A Technical Report on ITK - the Insight Toolkit","Medicine Meets Virtual Reality 02/10","","","","https://ebooks.iospress.nl/doi/10.3233/978-1-60750-929-5-586","","2002","2023-05-07 19:25:51","2023-05-07 19:25:51","2023-05-07 19:25:51","586-592","","","","","","Engineering and Algorithm Design for an Image Processing API","","","","","IOS Press","","","","","","","ebooks.iospress.nl","","DOI: 10.3233/978-1-60750-929-5-586","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UQKQ3RPC","conferencePaper","2007","France, Robert; Rumpe, Bernhard","Model-driven Development of Complex Software: A Research Roadmap","Future of Software Engineering (FOSE '07)","","","10.1109/FOSE.2007.14","","The term model-driven engineering (MDE) is typically used to describe software development approaches in which abstract models of software systems are created and systematically transformed to concrete implementations. In this paper we give an overview of current research in MDE and discuss some of the major challenges that must be tackled in order to realize the MDE vision of software development. We argue that full realizations of the MDE vision may not be possible in the near to medium-term primarily because of the wicked problems involved. On the other hand, attempting to realize the vision will provide insights that can be used to significantly reduce the gap between evolving software complexity and the technologies used to manage complexity.","2007-05","2023-05-07 19:25:58","2023-05-07 19:25:58","","37-54","","","","","","Model-driven Development of Complex Software","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\ME8NLC7N\4221611.html; C:\Users\gabra\Zotero\storage\BG42PJ8T\France and Rumpe - 2007 - Model-driven Development of Complex Software A Re.pdf","","","Programming; Unified modeling language; Computer industry; Software systems; Software testing; Systems engineering and theory; Streaming media; Computer science; Reliability engineering; Model driven engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Future of Software Engineering (FOSE '07)","","","","","","","","","","","","","","",""
"ATCFIM5P","book","2000","Leffingwell, Dean; Widrig, Don","Managing Software Requirements: A Unified Approach","","978-0-201-61593-7","","","","A classic treatise that defined the field of applied demand analysis, Consumer Demand in the United States: Prices, Income, and Consumption Behavior is now fully updated and expanded for a new generation. Consumption expenditures by households in the United States account for about 70% of Americaâ__s GDP. The primary focus in this book is on how households adjust these expenditures in response to changes in price and income. Econometric estimates of price and income elasticities are obtained for an exhaustive array of goods and services using data from surveys conducted by the Bureau of Labor Statistics, providing a better understanding of consumer demand. Practical models for forecasting future price and income elasticities are also demonstrated. Fully revised with over a dozen new chapters and appendices, the book revisits the original Taylor-Houthakker models while examining new material as well, such as the use of quantile regression and the stationarity of consumer preference. It also explores the emerging connection between neuroscience and consumer behavior, integrating the economic literature on demand theory with psychology literature. The most comprehensive treatment of the topic to date, this volume will be an essential resource for any researcher, student or professional economist working on consumer behavior or demand theory, as well as investors and policymakers concerned with the impact of economic fluctuations.","2000","2023-05-07 19:26:07","2023-05-07 19:26:07","","","532","","","","","Managing Software Requirements","","","","","Addison-Wesley Professional","","en","","","","","Google Books","","Google-Books-ID: UiHipKGmXJAC","","","https://books.google.co.in/books?id=UiHipKGmXJAC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NXKJR2UB","book","2014","Wieringa, Roel J.","Design Science Methodology for Information Systems and Software Engineering","","978-3-662-43839-8","","","","This book provides guidelines for practicing design science in the fields of information systems and software engineering research. A design process usually iterates over two activities: first designing an artifact that improves something for stakeholders and subsequently empirically investigating the performance of that artifact in its context. This “validation in context” is a key feature of the book - since an artifact is designed for a context, it should also be validated in this context.The book is divided into five parts. Part I discusses the fundamental nature of design science and its artifacts, as well as related design research questions and goals. Part II deals with the design cycle, i.e. the creation, design and validation of artifacts based on requirements and stakeholder goals. To elaborate this further, Part III presents the role of conceptual frameworks and theories in design science. Part IV continues with the empirical cycle to investigate artifacts in context, and presents the different elements of research problem analysis, research setup and data analysis. Finally, Part V deals with the practical application of the empirical cycle by presenting in detail various research methods, including observational case studies, case-based and sample-based experiments and technical action research. These main sections are complemented by two generic checklists, one for the design cycle and one for the empirical cycle.The book is written for students as well as academic and industrial researchers in software engineering or information systems. It provides guidelines on how to effectively structure research goals, how to analyze research problems concerning design goals and knowledge questions, how to validate artifact designs and how to empirically investigate artifacts in context – and finally how to present the results of the design cycle as a whole.","2014-11-19","2023-05-07 19:26:43","2023-05-07 19:26:43","","","327","","","","","","","","","","Springer","","en","","","","","Google Books","","Google-Books-ID: xLKLBQAAQBAJ","","","https://books.google.co.in/books?id=xLKLBQAAQBAJ","","Computers / Software Development & Engineering / General; Computers / Information Technology; Computers / Computer Science; Computers / Internet / General; Computers / Online Services; Social Science / Sociology / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"W5WNECJ3","journalArticle","2010","Omoronyia, Inah; Ferguson, John; Roper, Marc; Wood, Murray","A review of awareness in distributed collaborative software engineering","Software: Practice and Experience","","1097-024X","10.1002/spe.1005","https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.1005","Software development projects are inherently cooperative, requiring many developers to coordinate their efforts to produce complex systems. An integral part of this process is the development and maintenance of a shared understanding concerning the state of software project tasks, artefacts, and the activities and expertise of developers working on the project. In co-located settings, this vital awareness information that concerns developers, either directly or tangentially, is typically acquired using formal, regular meetings, informal personal interruptions and electronic communication. Developing and maintaining such an awareness are far more difficult in distributed teams where developers are separated by time and space. The goal of this review is to help bridge the gap between the theoretical benefits of distributed collaborative software development and the practical impediments to successful implementation, and more specifically, achieving similar levels of awareness in distributed settings to those available in co-located settings. The review starts with a detailed discussion of awareness and awareness types with particular relevance to collaboration. This is followed by a discussion of how awareness information is disseminated during collaborative processes. Awareness information needs and dissemination mechanisms in software development teams are then presented. The main contribution of the review, derived from a comparison of awareness needs in distributed collaborative software engineering and current support from tools and techniques, is that more support is required for the type of awareness known as context awareness. Context awareness crosscuts other (more basic) forms of awareness and arises because, over time, individual collaborators work on different sets of tasks and artefacts and form different perceptions of their colleagues; their colleagues' work, roles, and relationships; and, the workspace. This awareness is highly contextual and therefore cannot be generalized across individuals, entities or activities that are found in a collaboration space. Copyright © 2010 John Wiley & Sons, Ltd.","2010","2023-05-07 19:26:47","2023-05-07 19:26:47","2023-05-07 19:26:47","1107-1133","","12","40","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.1005","","C:\Users\gabra\Zotero\storage\SUV9ZZ3U\spe.html","","","global software development; context awareness; distributed teamwork; empirical studies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BH562IFD","book","2008","Pezzè, Mauro; Young, Michal","Software Testing and Analysis: Process, Principles, and Techniques","","978-81-265-1773-2","","","","Market_Desc: · IT professionals· Students and Instructors of Computer ScienceSpecial Features: · Promotes a vision of software testing & analysis that is integrated into modern software engineering practice· Provides balanced coverage of software testing & analysis approaches, not oriented toward ultra-high reliability or high-speed development approaches· Covers techniques that are suitable for near-term application, with sufficient technical background to indicate how and when to apply them· Presents software testing and static analysis techniques in a coherent framework as complementary approaches for achieving adequate quality at acceptable cost.About The Book: Software Testing & Analysis teaches readers how to test and analyze software to achieve an acceptable level of quality at an acceptable cost. Readers will be able to minimize software failures, increase quality, and effectively manage costs. By incorporating modern topics and strategies, this book will be the standard software-testing textbook. Software Testing and Analysis integrates software testing and analysis techniques into modern software development practice.","2008-07","2023-05-07 19:26:58","2023-05-07 19:26:58","","","516","","","","","Software Testing and Analysis","","","","","John Wiley & Sons","","en","","","","","Google Books","","Google-Books-ID: 8MT5hzTvwnwC","","","https://books.google.co.in/books?id=8MT5hzTvwnwC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RIL9HK43","conferencePaper","2004","van Lamsweerde, A.","Elaborating security requirements by construction of intentional anti-models","Proceedings. 26th International Conference on Software Engineering","","","10.1109/ICSE.2004.1317437","","Caring for security at requirements engineering time is a message that has finally received some attention recently. However, it is not yet very clear how to achieve this systematically through the various stages of the requirements engineering process. The paper presents a constructive approach to the modeling, specification and analysis of application-specific security requirements. The method is based on a goal-oriented framework for generating and resolving obstacles to goal satisfaction. The extended framework addresses malicious obstacles (called anti-goals) set up by attackers to threaten security goals. Threat trees are built systematically through anti-goal refinement until leaf nodes are derived that are either software vulnerabilities observable by the attacker or anti-requirements implementable by this attacker. New security requirements are then obtained as countermeasures by application of threat resolution operators to the specification of the anti-requirements and vulnerabilities revealed by the analysis. The paper also introduces formal epistemic specification constructs and patterns that may be used to support a formal derivation and analysis process. The method is illustrated on a Web-based banking system for which subtle attacks have been reported recently.","2004-05","2023-05-07 19:27:04","2023-05-07 19:27:04","","148-157","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 0270-5257","","C:\Users\gabra\Zotero\storage\4EWMWFW4\1317437.html","","","Internet; Application software; Mission critical systems; Banking; Biomedical engineering; Communication system security; Computer crime; Cryptography; Pattern analysis; Surgery","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings. 26th International Conference on Software Engineering","","","","","","","","","","","","","","",""
"97QQ2TJZ","journalArticle","2007","Jorgensen, Magne; Shepperd, Martin","A Systematic Review of Software Development Cost Estimation Studies","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2007.256943","","This paper aims to provide a basis for the improvement of software-estimation research through a systematic review of previous work. The review identifies 304 software cost estimation papers in 76 journals and classifies the papers according to research topic, estimation approach, research approach, study context and data set. A Web-based library of these cost estimation papers is provided to ease the identification of relevant estimation research results. The review results combined with other knowledge provide support for recommendations for future software cost estimation research, including: 1) increase the breadth of the search for relevant studies, 2) search manually for relevant papers within a carefully selected set of journals when completeness is essential, 3) conduct more studies on estimation methods commonly used by the software industry, and 4) increase the awareness of how properties of the data sets impact the results when evaluating estimation methods","2007-01","2023-05-07 19:27:08","2023-05-07 19:27:08","","33-53","","1","33","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\WN74FWPN\4027147.html; C:\Users\gabra\Zotero\storage\QKGKJERC\Jorgensen and Shepperd - 2007 - A Systematic Review of Software Development Cost E.pdf","","","Programming; Systematic review; Computer industry; Costs; Robustness; Laboratories; Mathematics; research methods.; software cost estimation; software cost prediction; software effort estimation; software effort prediction; Software libraries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z2T9AGKH","journalArticle","2004","Gentleman, Robert C.; Carey, Vincent J.; Bates, Douglas M.; Bolstad, Ben; Dettling, Marcel; Dudoit, Sandrine; Ellis, Byron; Gautier, Laurent; Ge, Yongchao; Gentry, Jeff; Hornik, Kurt; Hothorn, Torsten; Huber, Wolfgang; Iacus, Stefano; Irizarry, Rafael; Leisch, Friedrich; Li, Cheng; Maechler, Martin; Rossini, Anthony J.; Sawitzki, Gunther; Smith, Colin; Smyth, Gordon; Tierney, Luke; Yang, Jean YH; Zhang, Jianhua","Bioconductor: open software development for computational biology and bioinformatics","Genome Biology","","1474-760X","10.1186/gb-2004-5-10-r80","https://doi.org/10.1186/gb-2004-5-10-r80","The Bioconductor project is an initiative for the collaborative creation of extensible software for computational biology and bioinformatics. The goals of the project include: fostering collaborative development and widespread use of innovative software, reducing barriers to entry into interdisciplinary scientific research, and promoting the achievement of remote reproducibility of research results. We describe details of our aims and methods, identify current challenges, compare Bioconductor to other open bioinformatics projects, and provide working examples.","2004-09-15","2023-05-07 19:27:19","2023-05-07 19:27:19","2023-05-07 19:27:19","R80","","10","5","","Genome Biology","Bioconductor","","","","","","","","","","","","BioMed Central","","","","C:\Users\gabra\Zotero\storage\8H2VWG2D\Gentleman et al. - 2004 - Bioconductor open software development for comput.pdf; C:\Users\gabra\Zotero\storage\DEHQL4FM\gb-2004-5-10-r80.html","","","Software Project; Acute Lymphocytic Leukemia; Application Programming Interface; Data Package; Portable Document Format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LWUWSZIJ","bookSection","2013","de Lemos, Rogério; Giese, Holger; Müller, Hausi A.; Shaw, Mary; Andersson, Jesper; Litoiu, Marin; Schmerl, Bradley; Tamura, Gabriel; Villegas, Norha M.; Vogel, Thomas; Weyns, Danny; Baresi, Luciano; Becker, Basil; Bencomo, Nelly; Brun, Yuriy; Cukic, Bojan; Desmarais, Ron; Dustdar, Schahram; Engels, Gregor; Geihs, Kurt; Göschka, Karl M.; Gorla, Alessandra; Grassi, Vincenzo; Inverardi, Paola; Karsai, Gabor; Kramer, Jeff; Lopes, Antónia; Magee, Jeff; Malek, Sam; Mankovskii, Serge; Mirandola, Raffaela; Mylopoulos, John; Nierstrasz, Oscar; Pezzè, Mauro; Prehofer, Christian; Schäfer, Wilhelm; Schlichting, Rick; Smith, Dennis B.; Sousa, João Pedro; Tahvildari, Ladan; Wong, Kenny; Wuttke, Jochen","Software Engineering for Self-Adaptive Systems: A Second Research Roadmap","Software Engineering for Self-Adaptive Systems II: International Seminar, Dagstuhl Castle, Germany, October 24-29, 2010 Revised Selected and Invited Papers","978-3-642-35813-5","","","https://doi.org/10.1007/978-3-642-35813-5_1","The goal of this roadmap paper is to summarize the state-of-the-art and identify research challenges when developing, deploying and managing self-adaptive software systems. Instead of dealing with a wide range of topics associated with the field, we focus on four essential topics of self-adaptation: design space for self-adaptive solutions, software engineering processes for self-adaptive systems, from centralized to decentralized control, and practical run-time verification & validation for self-adaptive systems. For each topic, we present an overview, suggest future directions, and focus on selected challenges. This paper complements and extends a previous roadmap on software engineering for self-adaptive systems published in 2009 covering a different set of topics, and reflecting in part on the previous paper. This roadmap is one of the many results of the Dagstuhl Seminar 10431 on Software Engineering for Self-Adaptive Systems, which took place in October 2010.","2013","2023-05-07 19:27:23","2023-05-07 19:27:23","2023-05-07 19:27:23","1-32","","","","","","Software Engineering for Self-Adaptive Systems","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/978-3-642-35813-5_1","","C:\Users\gabra\Zotero\storage\KFNJ6PAQ\de Lemos et al. - 2013 - Software Engineering for Self-Adaptive Systems A .pdf","","","","de Lemos, Rogério; Giese, Holger; Müller, Hausi A.; Shaw, Mary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IMRXPFWB","journalArticle","2001","Cockburn, A.; Highsmith, J.","Agile software development, the people factor","Computer","","1558-0814","10.1109/2.963450","","In a previous article (2001), we introduced agile software development through the problem it addresses and the way in which it addresses the problem. Here, we describe the effects of working in an agile style.","2001-11","2023-05-07 19:27:28","2023-05-07 19:27:28","","131-133","","11","34","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: Computer","","C:\Users\gabra\Zotero\storage\G7QKCV2S\963450.html","","","Feedback; Programming; Project management; Software development management; Collaborative work; Problem-solving; Humans; World Wide Web; Chaotic communication; Technology management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IPB2U4L4","book","2003","Poppendieck, Mary; Poppendieck, Tom","Lean Software Development: An Agile Toolkit","","978-0-13-381296-1","","","","Lean Software Development: An Agile Toolkit   Adapting agile practices to your development organization Uncovering and eradicating waste throughout the software development lifecycle Practical techniques for every development manager, project manager, and technical leader    Lean software development: applying agile principles to your organization  In Lean Software Development, Mary and Tom Poppendieck identify seven fundamental ""lean"" principles, adapt them for the world of software development, and show how they can serve as the foundation for agile development approaches that work. Along the way, they introduce 22 ""thinking tools"" that can help you customize the right agile practices for any environment.  Better, cheaper, faster software development. You can have all three–if you adopt the same lean principles that have already revolutionized manufacturing, logistics and product development.   Iterating towards excellence: software development as an exercise in discovery Managing uncertainty: ""decide as late as possible"" by building change into the system. Compressing the value stream: rapid development, feedback, and improvement Empowering teams and individuals without compromising coordination Software with integrity: promoting coherence, usability, fitness, maintainability, and adaptability  How to ""see the whole""–even when your developers are scattered across multiple locations and contractors  Simply put, Lean Software Development helps you refocus development on value, flow, and people–so you can achieve breakthrough quality, savings, speed, and business alignment.","2003-05-08","2023-05-07 19:27:29","2023-05-07 19:27:29","","","236","","","","","Lean Software Development","","","","","Addison-Wesley","","en","","","","","Google Books","","Google-Books-ID: IJ1gAgAAQBAJ","","","https://books.google.co.in/books?id=IJ1gAgAAQBAJ","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MTU5ZLDJ","journalArticle","2010","Kitchenham, Barbara; Pretorius, Rialette; Budgen, David; Pearl Brereton, O.; Turner, Mark; Niazi, Mahmood; Linkman, Stephen","Systematic literature reviews in software engineering – A tertiary study","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.03.006","https://www.sciencedirect.com/science/article/pii/S0950584910000467","Context In a previous study, we reported on a systematic literature review (SLR), based on a manual search of 13 journals and conferences undertaken in the period 1st January 2004 to 30th June 2007. Objective The aim of this on-going research is to provide an annotated catalogue of SLRs available to software engineering researchers and practitioners. This study updates our previous study using a broad automated search. Method We performed a broad automated search to find SLRs published in the time period 1st January 2004 to 30th June 2008. We contrast the number, quality and source of these SLRs with SLRs found in the original study. Results Our broad search found an additional 35 SLRs corresponding to 33 unique studies. Of these papers, 17 appeared relevant to the undergraduate educational curriculum and 12 appeared of possible interest to practitioners. The number of SLRs being published is increasing. The quality of papers in conferences and workshops has improved as more researchers use SLR guidelines. Conclusion SLRs appear to have gone past the stage of being used solely by innovators but cannot yet be considered a main stream software engineering research methodology. They are addressing a wide range of topics but still have limitations, such as often failing to assess primary study quality.","2010-08-01","2023-05-07 19:28:57","2023-05-07 19:28:57","2023-05-07 19:28:57","792-805","","8","52","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\RQDYG7QN\S0950584910000467.html","","","Software engineering; Systematic literature review; Mapping study; Tertiary study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SG57FIEE","journalArticle","2008","Crowston, Kevin; Wei, Kangning; Howison, James; Wiggins, Andrea","Free/Libre open-source software development: What we know and what we do not know","ACM Computing Surveys","","0360-0300","10.1145/2089125.2089127","https://doi.org/10.1145/2089125.2089127","We review the empirical research on Free/Libre and Open-Source Software (FLOSS) development and assess the state of the literature. We develop a framework for organizing the literature based on the input-mediator-output-input (IMOI) model from the small groups literature. We present a quantitative summary of articles selected for the review and then discuss findings of this literature categorized into issues pertaining to inputs (e.g., member characteristics, technology use, and project characteristics), processes (software development practices, social processes, and firm involvement practices), emergent states (e.g., social states and task-related states), and outputs (e.g. team performance, FLOSS implementation, and project evolution). Based on this review, we suggest topics for future research, as well as identify methodological and theoretical issues for future inquiry in this area, including issues relating to sampling and the need for more longitudinal studies.","2008-03-05","2023-05-07 19:29:14","2023-05-07 19:29:14","2023-05-07 19:29:14","7:1–7:35","","2","44","","ACM Comput. Surv.","Free/Libre open-source software development","","","","","","","","","","","","ACM Digital Library","","","","","","","computer-mediated communication; development; distributed work; Free/Libre open-source software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KAY3WNR9","conferencePaper","2007","Harman, Mark","The Current State and Future of Search Based Software Engineering","Future of Software Engineering (FOSE '07)","","","10.1109/FOSE.2007.29","","This paper describes work on the application of optimization techniques in software engineering. These optimization techniques come from the operations research and metaheuristic computation research communities. The paper briefly reviews widely used optimization techniques and the key ingredients required for their successful application to software engineering, providing an overview of existing results in eight software engineering application domains. The paper also describes the benefits that are likely to accrue from the growing body of work in this area and provides a set of open problems, challenges and areas for future work.","2007-05","2023-05-07 19:29:20","2023-05-07 19:29:20","","342-357","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Software engineering; Educational institutions; Application software; Software testing; Instruments; Computer science; Councils; Gold; Operations research; Optimizing compilers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Future of Software Engineering (FOSE '07)","","","","","","","","","","","","","","",""
"NQ39SVHR","book","2013","Highsmith, Jim","Adaptive Software Development: A Collaborative Approach to Managing Complex Systems","","978-0-13-348948-4","","","","This is the digital version of the printed book (Copyright © 2000).    Winner of the 2001 Software Development Jolt Product Excellence Award    This innovative text offers a practical, realistic approach to managing high-speed, high-change software development projects. Consultant James A. Highsmith shows readers how to increase collaboration and adapt to uncertainty.   Many organizations start high-speed, high-change projects without knowing how to do them–and even worse, without knowing they don’t know. Successful completion of these projects is often at the expense of the project team.      Adaptive Software Development   emphasizes an adaptive, collaborative approach to software development. The concepts allow developers to “scale-up” rapid application development and extreme programming approaches for use on larger, more complex projects.   The four goals of the book are to    support an adaptive culture or mindset, in which change and uncertainty are assumed to be the natural state–not a false expectation of order   introduce frameworks to guide the iterative process of managing change   institute collaboration, the interaction of people on three levels: interpersonal, cultural, and structural   add rigor and discipline to the RAD approach, making it scalable to the uncertainty and complexity of real-life undertakings","2013-07-15","2023-05-07 19:29:25","2023-05-07 19:29:25","","","393","","","","","Adaptive Software Development","","","","","Addison-Wesley","","en","","","","","Google Books","","Google-Books-ID: CVcUAAAAQBAJ","","","https://books.google.co.in/books?id=CVcUAAAAQBAJ","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UVUSNQJX","webpage","","","An exploratory study of the pull-based software development model | Proceedings of the 36th International Conference on Software Engineering⁤","","","","","https://dl.acm.org/doi/abs/10.1145/2568225.2568260","","","2023-05-07 19:29:40","2023-05-07 19:29:40","2023-05-07 19:29:40","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NV9NSY2E","journalArticle","2001","Carmel, E.; Agarwal, R.","Tactical approaches for alleviating distance in global software development","IEEE Software","","1937-4194","10.1109/52.914734","","To overcome the problem of distance in global software development, various managers are experimenting and quickly adjusting their tactical approaches. We discuss some emerging approaches and explain their motivations from conceptual and practical perspectives. The most intuitive approach for alleviating distance is to apply communication technologies, but this is not our focus. Rather, we examine tactics that go beyond communication technologies, tactics aimed at reducing intensive collaboration, national and organizational cultural differences, and temporal distance.","2001-03","2023-05-07 19:31:27","2023-05-07 19:31:27","","22-29","","2","18","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","Programming; Project management; Collaborative software; Collaborative work; Software testing; Cultural differences; International collaboration; Communication system control; Technology management; Virtual groups","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8Z3XIWR4","journalArticle","2006","Hayes, J.H.; Dekhtyar, A.; Sundaram, S.K.","Advancing candidate link generation for requirements tracing: the study of methods","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2006.3","","This paper addresses the issues related to improving the overall quality of the dynamic candidate link generation for the requirements tracing process for verification and validation and independent verification and validation analysts. The contribution of the paper is four-fold: we define goals for a tracing tool based on analyst responsibilities in the tracing process, we introduce several new measures for validating that the goals have been satisfied, we implement analyst feedback in the tracing process, and we present a prototype tool that we built, RETRO (REquirements TRacing On-target), to address these goals. We also present the results of a study used to assess RETRO's support of goals and goal elements that can be measured objectively.","2006-01","2023-05-07 19:31:34","2023-05-07 19:31:34","","4-19","","1","32","","","Advancing candidate link generation for requirements tracing","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\T66EYTFE\1583599.html; C:\Users\gabra\Zotero\storage\EZ7333S8\Hayes et al. - 2006 - Advancing candidate link generation for requiremen.pdf","","","Feedback; Prototypes; System testing; Computer aided software engineering; Risk analysis; Spine; Computer Society; Information retrieval; dynamic link generation; Independent Validation and Verification (IV&V); information retrieval; Large scale integration; LSI; precision.; recall; Requirements tracing; TF-IDF; Verification and Validation (V&V)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JQAXNQ7Q","book","2012","Wohlin, Claes; Runeson, Per; Höst, Martin; Ohlsson, Magnus C.; Regnell, Björn; Wesslén, Anders","Experimentation in Software Engineering","","978-3-642-29044-2","","","","Like other sciences and engineering disciplines, software engineering requires a cycle of model building, experimentation, and learning. Experiments are valuable tools for all software engineers who are involved in evaluating and choosing between different methods, techniques, languages and tools. The purpose of Experimentation in Software Engineering is to introduce students, teachers, researchers, and practitioners to empirical studies in software engineering, using controlled experiments. The introduction to experimentation is provided through a process perspective, and the focus is on the steps that we have to go through to perform an experiment. The book is divided into three parts. The first part provides a background of theories and methods used in experimentation. Part II then devotes one chapter to each of the five experiment steps: scoping, planning, execution, analysis, and result presentation. Part III completes the presentation with two examples. Assignments and statistical material are provided in appendixes. Overall the book provides indispensable information regarding empirical studies in particular for experiments, but also for case studies, systematic literature reviews, and surveys. It is a revision of the authors’ book, which was published in 2000. In addition, substantial new material, e.g. concerning systematic literature reviews and case study research, is introduced. The book is self-contained and it is suitable as a course book in undergraduate or graduate studies where the need for empirical studies in software engineering is stressed. Exercises and assignments are included to combine the more theoretical material with practical aspects. Researchers will also benefit from the book, learning more about how to conduct empirical studies, and likewise practitioners may use it as a “cookbook” when evaluating new methods or techniques before implementing them in their organization.","2012-06-16","2023-05-07 19:31:36","2023-05-07 19:31:36","","","249","","","","","","","","","","Springer Science & Business Media","","en","","","","","Google Books","","Google-Books-ID: QPVsM1_U8nkC","","","https://books.google.co.in/books?id=QPVsM1_U8nkC","","Computers / Software Development & Engineering / General; Computers / Information Technology; Social Science / Methodology; Social Science / Research","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VC4KM3Q5","conferencePaper","2008","Gannod, Gerald C.; Burge, Janet E.; Helmick, Michael T.","Using the inverted classroom to teach software engineering","Proceedings of the 30th international conference on Software engineering","978-1-60558-079-1","","10.1145/1368088.1368198","https://doi.org/10.1145/1368088.1368198","An inverted classroom is a teaching environment that mixes the use of technology with hands-on activities. In an inverted classroom, typical in-class lecture time is replaced with laboratory and in-class activities. Outside class time, lectures are delivered over some other medium such as video on-demand. In a three credit hour course for instance, contact hours are spent having students actively engaged in learning activities. Outside of class, students are focused on viewing 3-6 hours of lectures per week. Additional time outside of class is spent completing learning activities. In this paper we present the inverted classroom model in the context of a software engineering curriculum. The paper motivates the use of the inverted classroom and suggests how different courses from the Software Engineering 2004 Model Curriculum Volume can incorporate the use of the inverted classroom. In addition, we present the results of a pilot course that utilized the inverted classroom model at Miami University and describe courses that are currently in process of piloting its use.","2008-05-10","2023-05-07 19:31:52","2023-05-07 19:31:52","2023-05-07","777–786","","","","","","","ICSE '08","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\L7GFW9CV\Gannod et al. - 2008 - Using the inverted classroom to teach software eng.pdf","","","inverted classroom; podcasting; technology in education","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6MVJ66N8","journalArticle","2012","von Krogh, Georg; Haefliger, Stefan; Spaeth, Sebastian; Wallin, Martin W.","Carrots and Rainbows: Motivation and Social Practice in Open Source Software Development","MIS Quarterly","","0276-7783","10.2307/41703471","https://www.jstor.org/stable/41703471","Open source software (OSS) is a social and economic phenomenon that raises fundamental questions about the motivations of contributors to information systems development. Some developers are unpaid volunteers who seek to solve their own technical problems, while others create OSS as part of their employment contract. For the past 10 years, a substantial amount of academic work has theorized about and empirically examined developer motivations. We review this work and suggest considering motivation in terms of the values of the social practice in which developers participate. Based on the social philosophy of Alasdair Maclntyre, we construct a theoretical framework that expands our assumptions about individual motivation to include the idea of a long-term, value-informed quest beyond short-term rewards. This motivation-practice framework depicts how the social practice and its supporting institutions mediate between individual motivation and outcome. The framework contains three theoretical conjectures that seek to explain how collectively elaborated standards of excellence prompt developers to produce high-quality software, change institutions, and sustain OSS development. From the framework, we derive six concrete propositions and suggest a new research agenda on motivation in OSS.","2012","2023-05-07 19:31:58","2023-05-07 19:31:58","2023-05-07 19:31:58","649-676","","2","36","","","Carrots and Rainbows","","","","","","","","","","","","JSTOR","","Publisher: Management Information Systems Research Center, University of Minnesota","","C:\Users\gabra\Zotero\storage\F3PNWEB2\von Krogh et al. - 2012 - Carrots and Rainbows Motivation and Social Practi.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z6WK2YRP","conferencePaper","2008","Petersen, Kai; Feldt, Robert; Mujtaba, Shahid; Mattsson, Michael","Systematic Mapping Studies in Software Engineering","","","","10.14236/ewic/EASE2008.8","https://www.scienceopen.com/hosted-document?doi=10.14236/ewic/EASE2008.8","BACKGROUND: A software engineering systematic map is a defined method to build a classification scheme and structure a software engineering field of interest. The analysis of results focuses on frequencies of publications for categories within the scheme. Thereby, the coverage of the research field can be determined. Different facets of the scheme can also be combined to answer more specific research questions. OBJECTIVE: We describe how to conduct a systematic mapping study in software engineering and provide guidelines. We also compare systematic maps and systematic reviews to clarify how to chose between them. This comparison leads to a set of guidelines for systematic maps. METHOD: We have defined a systematic mapping process and applied it to complete a systematic mapping study. Furthermore, we compare systematic maps with systematic reviews by systematically analyzing existing systematic reviews. RESULTS: We describe a process for software engineering systematic mapping studies and compare it to systematic reviews. Based on this, guidelines for conducting systematic maps are defined. CONCLUSIONS: Systematic maps and reviews are different in terms of goals, breadth, validity issues and implications. Thus, they should be used complementarily and require different methods (e.g., for analysis).","2008-06-01","2023-05-07 19:32:12","2023-05-07 19:32:12","2023-05-07 19:32:12","","","","","","","","","","","","BCS Learning & Development","","","","","","","www.scienceopen.com","","","","C:\Users\gabra\Zotero\storage\EIXUQB3P\Petersen et al. - 2008 - Systematic Mapping Studies in Software Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","12th International Conference on Evaluation and Assessment in Software Engineering (EASE)","","","","","","","","","","","","","","",""
"8WAQ9QF5","journalArticle","2004","Jørgensen, M.","A review of studies on expert estimation of software development effort","Journal of Systems and Software","","0164-1212","10.1016/S0164-1212(02)00156-5","https://www.sciencedirect.com/science/article/pii/S0164121202001565","This paper provides an extensive review of studies related to expert estimation of software development effort. The main goal and contribution of the review is to support the research on expert estimation, e.g., to ease other researcher’s search for relevant expert estimation studies. In addition, we provide software practitioners with useful estimation guidelines, based on the research-based knowledge of expert estimation processes. The review results suggest that expert estimation is the most frequently applied estimation strategy for software projects, that there is no substantial evidence in favour of use of estimation models, and that there are situations where we can expect expert estimates to be more accurate than formal estimation models. The following 12 expert estimation “best practice” guidelines are evaluated through the review: (1) evaluate estimation accuracy, but avoid high evaluation pressure; (2) avoid conflicting estimation goals; (3) ask the estimators to justify and criticize their estimates; (4) avoid irrelevant and unreliable estimation information; (5) use documented data from previous development tasks; (6) find estimation experts with relevant domain background and good estimation records; (7) Estimate top-down and bottom-up, independently of each other; (8) use estimation checklists; (9) combine estimates from different experts and estimation strategies; (10) assess the uncertainty of the estimate; (11) provide feedback on estimation accuracy and development task relations; and, (12) provide estimation training opportunities. We found supporting evidence for all 12 estimation principles, and provide suggestions on how to implement them in software organizations.","2004-02-01","2023-05-07 19:32:19","2023-05-07 19:32:19","2023-05-07 19:32:19","37-60","","1","70","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\565KPWR7\S0164121202001565.html","","","Software development; Effort estimation; Expert judgment; Project planning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AU8K42X6","journalArticle","2006","Shah, Sonali K.","Motivation, Governance, and the Viability of Hybrid Forms in Open Source Software Development","Management Science","","0025-1909","10.1287/mnsc.1060.0553","https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1060.0553","Open source software projects rely on the voluntary efforts of thousands of software developers, yet we know little about why developers choose to participate in this collective development process. This paper inductively derives a framework for understanding participation from the perspective of the individual software developer based on data from two software communities with different governance structures. In both communities, a need for software-related improvements drives initial participation. The majority of participants leave the community once their needs are met, however, a small subset remains involved. For this set of developers, motives evolve over time and participation becomes a hobby. These hobbyists are critical to the long-term viability of the software code: They take on tasks that might otherwise go undone and work to maintain the simplicity and modularity of the code. Governance structures affect this evolution of motives. Implications for firms interested in implementing hybrid strategies designed to combine the advantages of open source software development with proprietary ownership and control are discussed.","2006-07","2023-05-07 19:32:28","2023-05-07 19:32:28","2023-05-07 19:32:28","1000-1014","","7","52","","","","","","","","","","","","","","","pubsonline.informs.org (Atypon)","","Publisher: INFORMS","","","","","innovation; governance; motivation; open source software development; volunteers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"W6SG4MWR","book","2014","Sage, Andrew P.; Rouse, William B.","Handbook of Systems Engineering and Management","","978-0-470-08353-6","","","","The trusted handbook—now in a new edition This newly revised handbook presents a multifaceted view of systems engineering from process and systems management perspectives. It begins with a comprehensive introduction to the subject and provides a brief overview of the thirty-four chapters that follow. This introductory chapter is intended to serve as a ""field guide"" that indicates why, when, and how to use the material that follows in the handbook. Topical coverage includes: systems engineering life cycles and management; risk management; discovering system requirements; configuration management; cost management; total quality management; reliability, maintainability, and availability; concurrent engineering; standards in systems engineering; system architectures; systems design; systems integration; systematic measurements; human supervisory control; managing organizational and individual decision-making; systems reengineering; project planning; human systems integration; information technology and knowledge management; and more. The handbook is written and edited for systems engineers in industry and government, and to serve as a university reference handbook in systems engineering and management courses. By focusing on systems engineering processes and systems management, the editors have produced a long-lasting handbook that will make a difference in the design of systems of all types that are large in scale and/or scope.","2014-12-31","2023-05-07 19:32:35","2023-05-07 19:32:35","","","1502","","","","","","","","","","John Wiley & Sons","","en","","","","","Google Books","","Google-Books-ID: eFRwQuzPnEcC","","","https://books.google.co.in/books?id=eFRwQuzPnEcC","","Technology & Engineering / Electronics / General; Technology & Engineering / Electrical","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U5BBJCCT","conferencePaper","2006","Zhang, Ji; Cheng, Betty H. C.","Model-based development of dynamically adaptive software","Proceedings of the 28th international conference on Software engineering","978-1-59593-375-1","","10.1145/1134285.1134337","https://doi.org/10.1145/1134285.1134337","Increasingly, software should dynamically adapt its behavior at run-time in response to changing conditions in the supporting computing and communication infrastructure, and in the surrounding physical environment. In order for an adaptive program to be trusted, it is important to have mechanisms to ensure that the program functions correctly during and after adaptations. Adaptive programs are generally more difficult to specify, verify, and validate due to their high complexity. Particularly, when involving multi-threaded adaptations, the program behavior is the result of the collaborative behavior of multiple threads and software components. This paper introduces an approach to create formal models for the behavior of adaptive programs. Our approach separates the adaptation behavior and non-adaptive behavior specifications of adaptive programs, making the models easier to specify and more amenable to automated analysis and visual inspection. We introduce a process to construct adaptation models, automatically generate adaptive programs from the models, and verify and validate the models. We illustrate our approach through the development of an adaptive GSM-oriented audio streaming protocol for a mobile computing application.","2006-05-28","2023-05-07 19:32:37","2023-05-07 19:32:37","2023-05-07","371–380","","","","","","","ICSE '06","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","formal specification; autonomic computing; dynamic adaptation; global invariants; reliability; verification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QW25NQ56","conferencePaper","2004","Kitchenham, B.A.; Dyba, T.; Jorgensen, M.","Evidence-based software engineering","Proceedings. 26th International Conference on Software Engineering","","","10.1109/ICSE.2004.1317449","","Our objective is to describe how software engineering might benefit from an evidence-based approach and to identify the potential difficulties associated with the approach. We compared the organisation and technical infrastructure supporting evidence-based medicine (EBM) with the situation in software engineering. We considered the impact that factors peculiar to software engineering (i.e. the skill factor and the lifecycle factor) would have on our ability to practice evidence-based software engineering (EBSE). EBSE promises a number of benefits by encouraging integration of research results with a view to supporting the needs of many different stakeholder groups. However, we do not currently have the infrastructure needed for widespread adoption of EBSE. The skill factor means software engineering experiments are vulnerable to subject and experimenter bias. The lifecycle factor means it is difficult to determine how technologies will behave once deployed. Software engineering would benefit from adopting what it can of the evidence approach provided that it deals with the specific problems that arise from the nature of software engineering.","2004-05","2023-05-07 19:32:44","2023-05-07 19:32:44","","273-281","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 0270-5257","","","","","Software engineering; Costs; Laboratories; Psychology; Australia; Computer science; Technological innovation; Best practices; Medical services; Psychiatry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings. 26th International Conference on Software Engineering","","","","","","","","","","","","","","",""
"ECJTGD2W","book","2020","Kossiakoff, Alexander; Biemer, Steven M.; Seymour, Samuel J.; Flanigan, David A.","Systems Engineering Principles and Practice","","978-1-119-51670-5","","","","A comprehensive and interdisciplinary guide to systems engineering Systems Engineering: Principles and Practice, 3rd Edition is the leading interdisciplinary reference for systems engineers. The up-to-date third edition provides readers with discussions of model-based systems engineering, requirements analysis, engineering design, and software design. Freshly updated governmental and commercial standards, architectures, and processes are covered in-depth. The book includes newly updated topics on:  Risk Prototyping Modeling and simulation Software/computer systems engineering  Examples and exercises appear throughout the text, allowing the reader to gauge their level of retention and learning. Systems Engineering: Principles and Practice was and remains the standard textbook used worldwide for the study of traditional systems engineering. The material is organized in a manner that allows for quick absorption of industry best practices and methods. Systems Engineering Principles and Practice continues to be a national standard textbook for the study of traditional systems engineering for advanced undergraduate and graduate students. It addresses the need for an introductory overview, first-text for the development and acquisition of complex technical systems. The material is organized in a way that teaches the reader how to think like a systems engineer and carry out best practices in the field.","2020-06-11","2023-05-07 19:32:45","2023-05-07 19:32:45","","","688","","","","","","","","","","John Wiley & Sons","","en","","","","","Google Books","","","","","https://books.google.co.in/books?id=-DXrDwAAQBAJ","","Computers / Operating Systems / General; Technology & Engineering / Electronics / General; Technology & Engineering / Electrical; Technology & Engineering / Project Management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VCESCK7K","journalArticle","2009","Runeson, Per; Höst, Martin","Guidelines for conducting and reporting case study research in software engineering","Empirical Software Engineering","","1573-7616","10.1007/s10664-008-9102-8","https://doi.org/10.1007/s10664-008-9102-8","Case study is a suitable research methodology for software engineering research since it studies contemporary phenomena in its natural context. However, the understanding of what constitutes a case study varies, and hence the quality of the resulting studies. This paper aims at providing an introduction to case study methodology and guidelines for researchers conducting case studies and readers studying reports of such studies. The content is based on the authors’ own experience from conducting and reading case studies. The terminology and guidelines are compiled from different methodology handbooks in other research domains, in particular social science and information systems, and adapted to the needs in software engineering. We present recommended practices for software engineering case studies as well as empirically derived and evaluated checklists for researchers and readers of case study research.","2009-04-01","2023-05-07 19:32:53","2023-05-07 19:32:53","2023-05-07 19:32:53","131-164","","2","14","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\NVK4CUIM\Runeson and Höst - 2009 - Guidelines for conducting and reporting case study.pdf","","","Case study; Guidelines; Checklists; Research methodology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TGT2HMEU","bookSection","2015","Calero, Coral; Piattini, Mario","Introduction to Green in Software Engineering","Green in Software Engineering","978-3-319-08581-4","","","https://doi.org/10.1007/978-3-319-08581-4_1","Sustainability is gaining importance worldwide, reinforced by several initiatives with wide media coverage such as the Earth hour; this is a worldwide grassroots movement uniting people to protect the planet, organised by WWF (World Wide Fund for Nature). Other organisations such as the United Nations (UN) also highlight the importance of reducing energy consumption and our carbon footprint, including this issue in the Millennium Development Goals (MDGs). In Rio+20, the United Nations Conference on Sustainable Development, the world leaders approved an agreement entitled ‘The Future We Want’, where it is stated that ‘We recognize the critical role of technology as well as the importance of promoting innovation, in particular in developing countries. We invite governments, as appropriate, to create enabling frameworks that foster environmentally sound technology, research and development, and innovation, including in support of green economy in the context of sustainable development and poverty eradication…’.","2015","2023-05-07 19:33:01","2023-05-07 19:33:01","2023-05-07 19:33:01","3-27","","","","","","","","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","DOI: 10.1007/978-3-319-08581-4_1","","","","","Software Engineering; Business Process; Corporate Social Responsibility; Energy Efficiency; United Nations","Calero, Coral; Piattini, Mario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LUBMPFIN","journalArticle","2000","Faraj, Samer; Sproull, Lee","Coordinating Expertise in Software Development Teams","Management Science","","0025-1909","10.1287/mnsc.46.12.1554.12072","https://pubsonline.informs.org/doi/abs/10.1287/mnsc.46.12.1554.12072","Like all teams, knowledge teams must acquire and manage critical resources in order to accomplish their work. The most critical resource for knowledge teams is expertise, or specialized skills and knowledge, but the mere presence of expertise on a team is insufficient to produce high-quality work. Expertise must be managed and coordinated in order to leverage its potential. That is, teams must be able to manage their skill and knowledge interdependencies effectively through expertise coordination, which entails knowing where expertise is located, knowing where expertise is needed, and bringing needed expertise to bear. This study investigates the importance of expertise coordination through a cross-sectional investigation of 69 software development teams. The analysis reveals that expertise coordination shows a strong relationship with team performance that remains significant over and above team input characteristics, presence of expertise, and administrative coordination.","2000-12","2023-05-07 19:33:07","2023-05-07 19:33:07","2023-05-07 19:33:07","1554-1568","","12","46","","","","","","","","","","","","","","","pubsonline.informs.org (Atypon)","","Publisher: INFORMS","","","","","software development; distributed cognition; expertise coordination; team performance; team processes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N3KJC8M7","conferencePaper","2007","Ko, Amy J.; DeLine, Robert; Venolia, Gina","Information Needs in Collocated Software Development Teams","29th International Conference on Software Engineering (ICSE'07)","","","10.1109/ICSE.2007.45","","Previous research has documented the fragmented nature of software development work. To explain this in more detail, we analyzed software developers' day-to-day information needs. We observed seventeen developers at a large software company and transcribed their activities in 90-minute sessions. We analyzed these logs for the information that developers sought, the sources that they used, and the situations that prevented information from being acquired. We identified twenty-one information types and cataloged the outcome and source when each type of information was sought. The most frequently sought information included awareness about artifacts and coworkers. The most often deferred searches included knowledge about design and program behavior, such as why code was written a particular way, what a program was supposed to do, and the cause of a program state. Developers often had to defer tasks because the only source of knowledge was unavailable coworkers.","2007-05","2023-05-07 19:33:15","2023-05-07 19:33:15","","344-353","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1558-1225","","","","","Programming; Software engineering; Writing; Books; Information analysis; Cloning; Communication switching; Content management; File servers; Switches","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","29th International Conference on Software Engineering (ICSE'07)","","","","","","","","","","","","","","",""
"LIA789Y9","journalArticle","2006","Stewart, Katherine J.; Gosain, Sanjay","The Impact of Ideology on Effectiveness in Open Source Software Development Teams","MIS Quarterly","","0276-7783","10.2307/25148732","https://www.jstor.org/stable/25148732","The emerging work on understanding open source software has questioned what leads to effectiveness in OSS development teams in the absence of formal controls, and it has pointed to the importance of ideology. This paper develops a framework of the OSS community ideology (including specific norms, beliefs, and values) and a theoretical model to show how adherence to components of the ideology impacts effectiveness in OSS teams. The model is based on the idea that the tenets of the OSS ideology motivate behaviors that enhance cognitive trust and communication quality and encourage identification with the project team, which enhances affective trust. Trust and communication in turn impact OSS team effectiveness. The research considers two kinds of effectiveness in OSS teams: the attraction and retention of developer input and the generation of project outputs. Hypotheses regarding antecedents to each are developed. Hypotheses are tested using survey and objective data on OSS projects. Results support the main thesis that OSS team members' adherence to the tenets of the OSS community ideology impacts OSS team effectiveness and reveal that different components impact effectiveness in different ways. Of particular interest is the finding that adherence to some ideological components was beneficial to the effectiveness of the team in terms of attracting and retaining input, but detrimental to the output of the team. Theoretical and practical implications are discussed.","2006","2023-05-07 19:35:21","2023-05-07 19:35:21","2023-05-07 19:35:21","291-314","","2","30","","","","","","","","","","","","","","","JSTOR","","Publisher: Management Information Systems Research Center, University of Minnesota","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"W47YVC5H","journalArticle","2009","Kitchenham, Barbara; Pearl Brereton, O.; Budgen, David; Turner, Mark; Bailey, John; Linkman, Stephen","Systematic literature reviews in software engineering – A systematic literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2008.09.009","https://www.sciencedirect.com/science/article/pii/S0950584908001390","Background In 2004 the concept of evidence-based software engineering (EBSE) was introduced at the ICSE04 conference. Aims This study assesses the impact of systematic literature reviews (SLRs) which are the recommended EBSE method for aggregating evidence. Method We used the standard systematic literature review method employing a manual search of 10 journals and 4 conference proceedings. Results Of 20 relevant studies, eight addressed research trends rather than technique evaluation. Seven SLRs addressed cost estimation. The quality of SLRs was fair with only three scoring less than 2 out of 4. Conclusions Currently, the topic areas covered by SLRs are limited. European researchers, particularly those at the Simula Laboratory appear to be the leading exponents of systematic literature reviews. The series of cost estimation SLRs demonstrate the potential value of EBSE for synthesising evidence and making it available to practitioners.","2009-01-01","2023-05-07 19:35:29","2023-05-07 19:35:29","2023-05-07 19:35:29","7-15","","1","51","","Information and Software Technology","","Special Section - Most Cited Articles in 2002 and Regular Research Papers","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\ANPA2CG7\S0950584908001390.html","","","Systematic literature review; Tertiary study; Evidence-based software engineering; Cost estimation; Systematic review quality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QKEEEH87","book","2012","Host, Martin; Rainer, Austen; Runeson, Per; Regnell, Bjorn","Case Study Research in Software Engineering: Guidelines and Examples","","978-1-118-18100-3","","","","Based on their own experiences of in-depth case studies of software projects in international corporations, in this book the authors present detailed practical guidelines on the preparation, conduct, design and reporting of case studies of software engineering. This is the first software engineering specific book on the case study research method.","2012-03-07","2023-05-07 19:35:36","2023-05-07 19:35:36","","","260","","","","","Case Study Research in Software Engineering","","","","","John Wiley & Sons","","en","","","","","Google Books","","Google-Books-ID: T7rXoaxqPIAC","","","https://books.google.co.in/books?id=T7rXoaxqPIAC","","Computers / Software Development & Engineering / General; Computers / Information Technology; Technology & Engineering / Electronics / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V4J4Y6QJ","journalArticle","2003","Choudhury, Vivek; Sabherwal, Rajiv","Portfolios of Control in Outsourced Software Development Projects","Information Systems Research","","1047-7047","10.1287/isre.14.3.291.16563","https://pubsonline.informs.org/doi/abs/10.1287/isre.14.3.291.16563","This paper examines the evolution of portfolio of controls over the duration of outsourced information systems development (ISD) projects. Drawing on five cases, it concludes that many findings from research on control of internal ISD projects apply to the outsourced context as well, but with some interesting differences. The portfolios of control in outsourced projects are dominated by outcome controls, especially at the start of the project; although the precision and frequency of these controls varies across projects. Behavior controls are often added later in the project, as are controls aimed to encourage and enable vendor self–control. Clan controls were used in only two of the cases—when the client and vendor had shared goals, and when frequent interactions led to shared values. In general, the outsourced projects we studied began with relatively simple controls but often required significant additional controls after experiencing performance problems. Factors influencing the choice and evolution of controls are also examined.","2003-09","2023-05-07 19:35:40","2023-05-07 19:35:40","2023-05-07 19:35:40","291-314","","3","14","","","","","","","","","","","","","","","pubsonline.informs.org (Atypon)","","Publisher: INFORMS","","","","","Project Management; Case Studies; Control; Outsourcing; Systems Development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TTMJHJPT","journalArticle","2011","Ko, Amy J.; Abraham, Robin; Beckwith, Laura; Blackwell, Alan; Burnett, Margaret; Erwig, Martin; Scaffidi, Chris; Lawrance, Joseph; Lieberman, Henry; Myers, Brad; Rosson, Mary Beth; Rothermel, Gregg; Shaw, Mary; Wiedenbeck, Susan","The state of the art in end-user software engineering","ACM Computing Surveys","","0360-0300","10.1145/1922649.1922658","https://doi.org/10.1145/1922649.1922658","Most programs today are written not by professional software developers, but by people with expertise in other domains working towards goals for which they need computational support. For example, a teacher might write a grading spreadsheet to save time grading, or an interaction designer might use an interface builder to test some user interface design ideas. Although these end-user programmers may not have the same goals as professional developers, they do face many of the same software engineering challenges, including understanding their requirements, as well as making decisions about design, reuse, integration, testing, and debugging. This article summarizes and classifies research on these activities, defining the area of End-User Software Engineering (EUSE) and related terminology. The article then discusses empirical research about end-user software engineering activities and the technologies designed to support them. The article also addresses several crosscutting issues in the design of EUSE tools, including the roles of risk, reward, and domain complexity, and self-efficacy in the design of EUSE tools and the potential of educating users about software engineering principles.","2011-04-29","2023-05-07 19:36:36","2023-05-07 19:36:36","2023-05-07 19:36:36","21:1–21:44","","3","43","","ACM Comput. Surv.","","","","","","","","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\E9LCY46W\Ko et al. - 2011 - The state of the art in end-user software engineer.pdf","","","human-computer interaction; end-user development; end-user programming; End-user software engineering; visual programming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U8QBMYIS","journalArticle","2010","Ganesh, M.P.; Gupta, Meenakshi","Impact of virtualness and task interdependence on extra‐role performance in software development teams","Team Performance Management: An International Journal","","1352-7592","10.1108/13527591011053250","https://doi.org/10.1108/13527591011053250","Purpose – The purpose of this paper is to understand the impact of virtualness on extra‐role performance within software development teams and the moderating effect of task interdependence on this relationship. Design/methodology/approach – Data were collected from 192 software professionals from 33 software development teams. Teams were taken as the unit of analysis. Extra‐role performance was measured using organizational citizenship behavior (OCB) scale and task interdependence within the team was measured by interdependence scale developed by Pearce and Gregersen. Virtualness was measured using an objective measure developed by the authors. Regression was used to study the moderation and main effects. Findings – Virtualness negatively influenced overall extra‐role performance within the team. In terms of individual dimensions, virtualness had a negative influence on extra‐role performances directed towards team as an entity (civic virtue and generalized compliance) but it had no impact over extra‐role performances directed towards other team members (altruism and courtesy). Although task interdependence had a positive impact on OCBs, it did not moderate the relationship between virtualness and OCBs. Practical implications – The findings will help teams understand the need to manage virtualness within the team in order to increase extra‐role performance among its members. Originality/value – The authors have developed an objective method to compute virtualness within the team context. The moderating effect of task interdependence on the relationship between virtualness and extra‐role performance has been studied for the first time and is documented in this paper.","2010-01-01","2023-05-07 19:36:44","2023-05-07 19:36:44","2023-05-07 19:36:44","169-186","","3/4","16","","","","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Group Publishing Limited","","","","","Computer software; Performance levels; Team performance; Virtual organizations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ASYYFM5F","journalArticle","2005","Dyba, T.; Kitchenham, B.A.; Jorgensen, M.","Evidence-based software engineering for practitioners","IEEE Software","","1937-4194","10.1109/MS.2005.6","","Software managers and practitioners often must make decisions about what technologies to employ on their projects. They might be aware of problems with their current development practices (for example, production bottlenecks or numerous defect reports from customers) and want to resolve them. Or, they might have read about a new technology and want to take advantage of its promised benefits. However, practitioners can have difficulty making informed decisions about whether to adopt a new technology because there's little objective evidence to confirm its suitability, limits, qualities, costs, and inherent risks. This can lead to poor decisions about technology adoption. Software engineers might make incorrect decisions about adopting new techniques it they don't consider scientific evidence about the techniques' efficacy. They should consider using procedures similar to ones developed for evidence-based medicine. Software companies are often under pressure to adopt immature technologies because of market and management pressures. We suggest that practitioners consider evidence-based software engineering as a mechanism to support and improve their technology adoption decisions.","2005-01","2023-05-07 19:36:51","2023-05-07 19:36:51","","58-65","","1","22","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\PQ8YQYP4\Dyba et al. - 2005 - Evidence-based software engineering for practition.pdf","","","Project management; Software engineering; Laboratories; Production; Engineering management; empirical software engineering; Appropriate technology; Technology management; Appraisal; Communications technology; evaluation; evidence; Medical treatment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YJRQIHJ3","journalArticle","2006","Nurmuliani, N; Zowghi, Didar; Williams, Susan P","Requirements Volatility and Its Impact on Change Effort: Evidence-based Research in Software Development Projects Return to Published Papers","","","","","","It is widely acknowledged that requirements volatility (RV) is inevitable and that it causes difficulties during the software development lifecycle. As a major source of risk, the impact of RV is often underestimated; particularly the impact of small changes to requirements in the later stages of the development lifecycle.","2006","2023-05-07 19:38:37","2023-05-07 19:38:37","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\9CGNZXAI\Nurmuliani et al. - 2006 - Requirements Volatility and Its Impact on Change E.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6X82STYI","conferencePaper","2010","Islam, Shareeful; Houmb, Siv Hilde","Integrating risk management activities into requirements engineering","2010 Fourth International Conference on Research Challenges in Information Science (RCIS)","","","10.1109/RCIS.2010.5507389","","Software projects are often faced with unanticipated problems caused by e.g. changes in the development environment resulting in delays or threatening the ability of the project to succeed. Managing these uncertainties is a challenging task at all phases of the development, but nevertheless crucial in controlling schedule and costs. Therefore software development risks need to be controlled as early as possible. As software development risks are not merely of technical nature it is equally important to tackle non-technical risks. The paper presents a goal-driven software development risk management model (GSRM) that takes a holistic view on development, taking both technical and non-technical development components into consideration. The focus of the paper is on how to integrate GSRM and particularly the holistic risk perspective into requirements engineering. GSRM effectively identifies and makes explicit the critical project goals (for arriving at a successful project) and the risk factors that may obstruct these goals. GSRM also helps in planning how to employ control actions for mitigating risks and by that increase the ability to meet project goals. The integrated requirements engineering risk management model has been applied to an on-going development project in a low-cost development environment (Bangladesh). The result showed it to be relatively trivial to integrate the model into requirements engineering activities and that the model did indeed contribute to the overall project success.","2010-05","2023-05-07 19:38:41","2023-05-07 19:38:41","","299-310","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2151-1357","","C:\Users\gabra\Zotero\storage\KZ6P3I45\Islam and Houmb - 2010 - Integrating risk management activities into requir.pdf","","","Programming; Project management; Delay; Costs; Uncertainty; requirement engineering; risk management; Risk management; Software performance; Technological innovation; Meeting planning; Innovation management; goaldriven modelling; risk modelling; software development riskt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 Fourth International Conference on Research Challenges in Information Science (RCIS)","","","","","","","","","","","","","","",""
"TJ8LP2ME","journalArticle","","Penzenstadler, Birgit","Infusing Green: Requirements Engineering for Green In and Through Software Systems","","","","","","Environmental sustainability can be applied to software systems in two different understandings — either as green in software systems (greening of IT / green IT) or as green through software systems (greening by IT). Currently it is not clear how environmental sustainability can be systematically supported as an objective in requirements engineering for either of these two understandings.","","2023-05-07 19:38:50","2023-05-07 19:38:50","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\6E4CMIGP\Penzenstadler - Infusing Green Requirements Engineering for Green.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BDFX99T8","conferencePaper","2009","Kabbedijk, Jaap; Brinkkemper, Sjaak; Jansen, Slinger; van der Veldt, Bas","Customer Involvement in Requirements Management: Lessons from Mass Market Software Development","2009 17th IEEE International Requirements Engineering Conference","","","10.1109/RE.2009.28","","Product software vendors are regularly challenged with identifying and selecting the requirements of upcoming product releases. Companies struggle to involve their customers and have a hard time selecting the right requirements from the enormous number of candidate requirements. This paper presents a practical approach to overcome these problems by including customers in the requirements management process through different types of involvement. The presented case illustrates how software requirements are gathered from customers, by involving them on three different levels. Based on the industrial experiences we present six lessons from customer involvement in large scale requirements management.","2009-08","2023-05-07 19:38:55","2023-05-07 19:38:55","","281-286","","","","","","Customer Involvement in Requirements Management","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Programming; Software development management; Large-scale systems; Product development; Enterprise resource planning; Conference management; Engineering management; Organizing; Customer Involvement; Large scale; Production facilities; requirements management; Speech recognition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 17th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"8N6XYSXX","journalArticle","2008","Bygstad, Bendik; Ghinea, Gheorghita; Brevik, Eivind","Software development methods and usability: Perspectives from a survey in the software industry in Norway","Interacting with Computers","","0953-5438","10.1016/j.intcom.2007.12.001","https://doi.org/10.1016/j.intcom.2007.12.001","This paper investigates the relationship between software development methodologies and usability. The point of departure is the assumption that two important disciplines in software development, one of software development methods (SDMs) and one of usability work, are not integrated in industrial software projects.Building on previous research we investigate two questions; (1) Will software companies generally acknowledge the importance of usability, but not prioritise it in industrial projects? and (2) To what degree are software development methods and usability perceived by practitioners as being integrated? To this end a survey in the Norwegian IT industry was conducted. From a sample of 259 companies we received responses from 78 companies.In response to our first research question, our findings show that although there is a positive bias towards usability, the importance of usability testing is perceived to be much less than that of usability requirements. Given the strong time and cost pressures associated with the software industry, we believe that these results highlight that there is a gap between intention and reality. Regarding our second research question our survey revealed that companies perceive usability and software development methods to be integrated. This is in contrast to earlier research, which, somewhat pessimistically, has argued for the existence of two different cultures, one of software development and one of usability. The findings give hope for the future, in particular because the general use of system development methods are pragmatic and adaptable.","2008-05-01","2023-05-07 19:39:07","2023-05-07 19:39:07","2023-05-07 19:39:07","375-385","","3","20","","Interacting with Computers","Software development methods and usability","","","","","","","","","","","","Silverchair","","","","C:\Users\gabra\Zotero\storage\DXRYK6XT\687695.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VC2WYCF6","journalArticle","2008","Kalloniatis, Christos; Kavakli, Evangelia; Gritzalis, Stefanos","Addressing privacy requirements in system design: the PriS method","Requirements Engineering","","1432-010X","10.1007/s00766-008-0067-3","https://doi.org/10.1007/s00766-008-0067-3","A major challenge in the field of software engineering is to make users trust the software that they use in their every day activities for professional or recreational reasons. Trusting software depends on various elements, one of which is the protection of user privacy. Protecting privacy is about complying with user’s desires when it comes to handling personal information. Users’ privacy can also be defined as the right to determine when, how and to what extend information about them is communicated to others. Current research stresses the need for addressing privacy issues during the system design rather than during the system implementation phase. To this end, this paper describes PriS, a security requirements engineering method, which incorporates privacy requirements early in the system development process. PriS considers privacy requirements as organisational goals that need to be satisfied and adopts the use of privacy-process patterns as a way to: (1) describe the effect of privacy requirements on business processes; and (2) facilitate the identification of the system architecture that best supports the privacy-related business processes. In this way, PriS provides a holistic approach from ‘high-level’ goals to ‘privacy-compliant’ IT systems. The PriS way-of-working is formally defined thus, enabling the development of automated tools for assisting its application.","2008-09-01","2023-05-07 19:39:12","2023-05-07 19:39:12","2023-05-07 19:39:12","241-255","","3","13","","Requirements Eng","Addressing privacy requirements in system design","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Formal methods; Goal-oriented approach; Privacy enhancing technologies; Privacy requirements; Privacy-process patterns; System design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"348WVST4","conferencePaper","2002","Rashid, A.; Sawyer, P.; Moreira, A.; Araujo, J.","Early aspects: a model for aspect-oriented requirements engineering","Proceedings IEEE Joint International Conference on Requirements Engineering","","","10.1109/ICRE.2002.1048526","","Effective RE must reconcile the need to achieve separation of concerns with the need to satisfy broadly scoped requirements and constraints. Techniques such as use cases and viewpoints help achieve separation of stakeholders' concerns but ensuring their consistency with global requirements and constraints is largely unsupported. We build on recent work that has emerged from the aspect-oriented programming (AOP) community to propose a general model for aspect oriented requirements engineering (AORE). The model supports separation of crosscutting functional and non-functional properties at the requirements level. We argue that early separation of such crosscutting properties supports effective determination of their mapping and influence on artefacts at later development stages. A realisation of the model based on a case study of a toll collection system is presented.","2002-09","2023-05-07 19:39:30","2023-05-07 19:39:30","","199-202","","","","","","Early aspects","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","","","","Programming; Unified modeling language; Costs; Engineering management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE Joint International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"Q56SUULD","bookSection","2006","Wohlin, Claes; Aurum, Aybüke","Criteria for Selecting Software Requirements to Create Product Value: An Industrial Empirical Study","Value-Based Software Engineering","978-3-540-29263-0","","","https://doi.org/10.1007/3-540-29263-2_9","Product value is based on which requirements are included in a specific release of a software product. This chapter provides an overview of the value concept and presents an empirical study conducted as an industrial survey. The objective of the survey was to quantify the importance of different decision making criteria when deciding whether to include a requirement in a project or release. The results reported from the survey are based on responses from two companies. It was discovered that there were similarities in responses at a company level, although major differences existed between individual respondents to the survey. The most important criteria were found to be those related to specific customers or markets and criteria, such as development cost-benefit, delivery date, and resources. The least important criteria were those related to development and maintenance. The results also indicate that a better balance between the most important and least important criteria ought to be achieved in the future.","2006","2023-05-07 19:39:33","2023-05-07 19:39:33","2023-05-07 19:39:32","179-200","","","","","","Criteria for Selecting Software Requirements to Create Product Value","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/3-540-29263-2_9","","","","","decision making; Decision support; empirical software engineering; product management; requirements selection","Biffl, Stefan; Aurum, Aybüke; Boehm, Barry; Erdogmus, Hakan; Grünbacher, Paul","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KZ72FEXF","book","2012","Adzic, Gojko; Poppendieck, Tom","Impact mapping: making a big impact with software products and projects","","978-0-9556836-4-0","","","","Software is everywhere today, but countless software products and projects die a slow death without ever making any impact. The result is a tremendous amount of time and money wasted due to wrong assumptions, lack of focus, poor communication of objectives, lack of understanding and misalignment with overall goals. There has to be a better way to deliver! This handbook is a practical guide to impact mapping, a simple yet incredibly effective method for collaborative strategic planning that helps organizations make an impact with software. Impact mapping helps to create better plans and roadmaps that ensure alignment of business and delivery, and are easily adaptable to change. Impact mapping fits nicely into several current trends in software product management and release planning, including goal-oriented requirements engineering, frequent iterative delivery, agile and lean software methods, lean startup product development cycles, and design thinking","2012","2023-05-07 19:39:36","2023-05-07 19:39:36","","","73","","","","","Impact mapping","","","","","Provoking Thoughts Limited","Woking","en","","","","","K10plus ISBN","","","","C:\Users\gabra\Zotero\storage\XPHI8D55\Adzic and Poppendieck - 2012 - Impact mapping making a big impact with software .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AIJWRGG9","webpage","","","Agile distributed software development: enacting control through media and context - Persson - 2012 - Information Systems Journal - Wiley Online Library⁤","","","","","https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2575.2011.00390.x","","","2023-05-07 19:41:14","2023-05-07 19:41:14","2023-05-07 19:41:14","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RT5BKVK8","journalArticle","2020","Tam, Carlos; Moura, Eduardo Jóia da Costa; Oliveira, Tiago; Varajão, João","The factors influencing the success of on-going agile software development projects","International Journal of Project Management","","0263-7863","10.1016/j.ijproman.2020.02.001","https://www.sciencedirect.com/science/article/pii/S0263786320300089","We propose a model consisting of five people-factors that influence the success of on-going agile software development projects, success being measured in terms of cost, time, and customer satisfaction. After surveying 216 agile practitioners, the results obtained using SEM-PLS suggest that “team capability” and “customer involvement” are the main factors contributing to the success of on-going agile software development projects. These results were triangulated with the mixed-methods approach of a focus group, which supported the findings. By knowing which factors are truly important to achieve success, managers and teams will be able to establish priorities, thereby improving project outcomes. We address this matter, along with research limitations and future work.","2020-04-01","2023-05-07 19:41:19","2023-05-07 19:41:19","2023-05-07 19:41:19","165-176","","3","38","","International Journal of Project Management","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\49SL49TX\S0263786320300089.html; C:\Users\gabra\Zotero\storage\ZD7B9RR8\Tam et al. - 2020 - The factors influencing the success of on-going ag.pdf","","","Agile methodologies; Software development; Mixed-methods; People factors; Success","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"L8NR9NV5","journalArticle","2001","Kumar, Rajeev; Midha, P.S.","A QFD based methodology for evaluating a company’s PDM requirements for collaborative product development","Industrial Management & Data Systems","","0263-5577","10.1108/02635570110386634","https://doi.org/10.1108/02635570110386634","CAD, CAM, CAE and CIM systems with their ability to quickly generate and change product data have strained the conventional systems used to manage data. As a result, the time spent by an engineer in looking for the right information far exceeds the time spent on the actual design work. A product data management system is a tool that helps engineers and others manage both data and the product development process, and hence support a concurrent engineering framework in a company. Although PDM systems provide numerous benefits to a company, there are problems associated with firstly identifying an appropriate system for a company and then in its implementation. For a successful implementation of a PDM system it is important for a company to first evaluate its requirements. This paper proposes a QFD (quality function deployment) based methodology for evaluating a company’s current status vis‐à‐vis PDM implementation.","2001-01-01","2023-05-07 19:41:25","2023-05-07 19:41:25","2023-05-07 19:41:25","126-132","","3","101","","","","","","","","","","","","","","","Emerald Insight","","Publisher: MCB UP Ltd","","","","","Product development; Database management; Qualify function deployment; Simultaneous engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WP4YL2YR","conferencePaper","2007","Li, C.; van den Akker, J. M.; Brinkkemper, S.; Diepen, G.","Integrated Requirement Selection and Scheduling for the Release Planning of a Software Product","Requirements Engineering: Foundation for Software Quality","978-3-540-73031-6","","10.1007/978-3-540-73031-6_7","","This paper investigates two integer linear programming models that integrate requirement scheduling into software release planning. The first model can schedule the development of the requirements for the new release exactly in time so that the project span is minimized and the resource and precedence constraints are satisfied. The second model is for combined requirement selection and scheduling, which can not only maximize revenues but also calculates an on-time-delivery project schedule simultaneously. Two simulations are presented to examine the influence of precedence constraints and compare the differences of the traditional prioritization models and the two new ones. The simulation results suggest that requirement dependency can significantly influence the project plan and the combined model for requirement selection and scheduling is better in the sense of efficiency and on-time delivery.","2007","2023-05-07 19:41:32","2023-05-07 19:41:32","","93-108","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\BDL9M7H7\Li et al. - 2007 - Integrated Requirement Selection and Scheduling fo.pdf","","","Simulation; Integer Linear Programming (ILP); Release Planning; Requirement Scheduling; Requirement Selection","Sawyer, Pete; Paech, Barbara; Heymans, Patrick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3PKMUYMS","webpage","","","IEEE Xplore - Page not Found","","","","","https://s3-us-west-2.amazonaws.com/ieeeshutpages/xplore/xplore-shut-page.html","","","2023-05-07 19:41:42","2023-05-07 19:41:42","2023-05-07 19:41:42","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IMH586FJ","journalArticle","2012","Klendauer, Ruth; Berkovich, Marina; Gelvin, Richard; Leimeister, Jan Marco; Krcmar, Helmut","Towards a competency model for requirements analysts","Information Systems Journal","","1365-2575","10.1111/j.1365-2575.2011.00395.x","https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2575.2011.00395.x","Requirements engineering is a software development discipline, executed by requirements analysts (RAs), that includes requirements elicitation, analysis, specification and validation. Its successful outcome is very often essential to overall project success. However, there is a lack of systematically conducted empirical research on the competencies of RAs. This paper addressed this gap by conducting 64 interviews at eight major North American and European financial services companies. Our qualitative research design follows an interpretive approach and uses critical incident technique. We develop a competency model, which specifies 16 critical competencies, and integrates contextual and situational factors as well as results variables. ‘Consulting others’, ‘Testing assumptions and investigating’ and ‘Explaining concepts and opinions’ were the most frequently identified competencies. This indicates that for an effective analyst, close interaction and communication with customers is indeed crucial – but of equally importance is the critical questioning of the expressed needs. Surprisingly, applying specific tools and advanced techniques did not seem to play a significant role from the interviewees' perspective. This study contributes to theory as it is the first to elaborate a competency model for RAs. It also provides a foundation for the development of competency-based training in companies and universities.","2012","2023-05-07 19:41:45","2023-05-07 19:41:45","2023-05-07 19:41:45","475-503","","6","22","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1365-2575.2011.00395.x","","C:\Users\gabra\Zotero\storage\6VRFFY52\Klendauer et al. - 2012 - Towards a competency model for requirements analys.pdf; C:\Users\gabra\Zotero\storage\Z3R5WN6N\j.1365-2575.2011.00395.html","","","requirements engineering; software development; competency model; critical incident technique","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MSLZZT3K","conferencePaper","2011","Knauss, Eric; Houmb, Siv; Schneider, Kurt; Islam, Shareeful; Jürjens, Jan","Supporting Requirements Engineers in Recognising Security Issues","Requirements Engineering: Foundation for Software Quality","978-3-642-19858-8","","10.1007/978-3-642-19858-8_2","","Context & motivation: More and more software projects today are security-related in one way or the other. Many environments are initially not considered security-related and no security experts are assigned. Requirements engineers often fail to recognise indicators for security problems. Question/problem: Ignoring security issues early in a project is a major source of recurring security problems in practice. Identifying security-relevant requirements is labour-intensive and error-prone. Security may be neglected in order to finish on time and in budget. Principal ideas/results: In this paper, we address this problem by presenting a tool-supported method that provides assistance for requirements engineering, with an emphasis on security requirements. We investigate whether security-relevant requirements can be automatically identified using a Bayesian classifier. Our results indicate that this is feasible, in particular if the classifier is trained with domain specific data and documents from previous projects. Contribution: We show how the ability to identify security-relevant requirements can be integrated in a workflow of requirements analysis and reuse of experience. In practice, this can increase security awareness within the software development process. We discuss limitations and potential of this approach.","2011","2023-05-07 19:41:59","2023-05-07 19:41:59","","4-18","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","requirements analysis; empirical study; natural language processing; secure software engineering","Berry, Daniel; Franch, Xavier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4PESVN6Y","journalArticle","","Vestola, Mikko","A Comparison of Nine Basic Techniques for Requirements Prioritization","","","","","","Requirements prioritization is an important activity in software development. Numerous different techniques to prioritize requirements exist. In this paper, we focus on the following research questions: 1) What empirically studied requirements prioritization techniques are presented in the literature? 2) How easy to use, accurate and scalable are these techniques? Total of nine basic requirements prioritization techniques were identiﬁed: 1) Numeral assignment technique, 2) Analytic hierarchy process (AHP), 3) Hierarchy AHP, 4) Minimal spanning tree, 5) Cumulative voting (CV), 6) Hierarchical cumulative voting (HCV), 7) Priority groups, 8) Binary priority list (BPL), 9) Bubble sort. The techniques are presented and analyzed based on the empirical studies from the literature. The results indicate that none of the techniques can be considered the best one. The best prioritization technique depends on the situation (e.g. number of requirements used or desired results scale). This study also reveals that there are several problems with the existing empirical studies, which make it hard to compare their results to each other. Therefore, this paper also presents recommended practices for future empirical studies about requirements prioritization techniques.","","2023-05-07 19:41:59","2023-05-07 19:41:59","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\9R8SJRPQ\Vestola - A Comparison of Nine Basic Techniques for Requirem.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""