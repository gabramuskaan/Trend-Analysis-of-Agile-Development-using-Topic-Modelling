"Key","Item Type","Publication Year","Author","Title","Publication Title","ISBN","ISSN","DOI","Url","Abstract Note","Date","Date Added","Date Modified","Access Date","Pages","Num Pages","Issue","Volume","Number Of Volumes","Journal Abbreviation","Short Title","Series","Series Number","Series Text","Series Title","Publisher","Place","Language","Rights","Type","Archive","Archive Location","Library Catalog","Call Number","Extra","Notes","File Attachments","Link Attachments","Manual Tags","Automatic Tags","Editor","Series Editor","Translator","Contributor","Attorney Agent","Book Author","Cast Member","Commenter","Composer","Cosponsor","Counsel","Interviewer","Producer","Recipient","Reviewed Author","Scriptwriter","Words By","Guest","Number","Edition","Running Time","Scale","Medium","Artwork Size","Filing Date","Application Number","Assignee","Issuing Authority","Country","Meeting Name","Conference Name","Court","References","Reporter","Legal Status","Priority Numbers","Programming Language","Version","System","Code","Code Number","Section","Session","Committee","History","Legislative Body"
"BXYQ93U5","journalArticle","2008","Cao, Lan; Ramesh, Balasubramaniam","Agile Requirements Engineering Practices: An Empirical Study","IEEE Software","","1937-4194","10.1109/MS.2008.1","","An analysis of data from 16 software development organizations reveals seven agile RE practices, along with their benefits and challenges. The rapidly changing business environment in which most organizations operate is challenging traditional requirements-engineering (RE) approaches. Software development organizations often must deal with requirements that tend to evolve quickly and become obsolete even before project completion. Rapid changes in competitive threats, stakeholder preferences, development technology, and time-to-market pressures make prespecified requirements inappropriate.","2008-01","2023-05-03 15:15:13","2023-05-03 15:15:13","","60-67","","1","25","","","Agile Requirements Engineering Practices","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","C:\Users\gabra\Zotero\storage\GFAPEXCU\4420071.html","","","agile software development; Data analysis; Design engineering; Feedback; Programming; Project management; Protection; Quality management; requirements engineering; Software development management; Software quality; Urban areas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z82Y5CP4","webpage","","","Requirements engineering and agile software development | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/1231428","","","2023-05-03 15:16:15","2023-05-03 15:16:15","2023-05-03 15:16:15","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T3FSZ7E5","conferencePaper","2003","Paetsch, F.; Eberlein, A.; Maurer, F.","Requirements engineering and agile software development","WET ICE 2003. Proceedings. Twelfth IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, 2003.","","","10.1109/ENABL.2003.1231428","","This article compares traditional requirements engineering approaches and agile software development. Our paper analyzes commonalities and differences of both approaches and determines possible ways how agile software development can benefit from requirements engineering methods.","2003-06","2023-05-03 15:16:20","2023-05-03 15:16:20","","308-313","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1080-1383","","","","","Programming; Collaboration; Collaborative software; Collaborative work; Context modeling; Customer satisfaction; Documentation; Knowledge engineering; Software engineering; System analysis and design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","WET ICE 2003. Proceedings. Twelfth IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, 2003.","","","","","","","","","","","","","","",""
"IVED7NZ3","webpage","","","Requirements engineering: A systematic mapping study in agile software development - ScienceDirect","","","","","https://www.sciencedirect.com/science/article/abs/pii/S0164121218300141","","","2023-05-03 15:16:37","2023-05-03 15:16:37","2023-05-03 15:16:37","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EGY8R9IP","journalArticle","2010","Lucia, Andrea De; Qusef, Abdallah","Requirements Engineering in Agile Software Development","Journal of Emerging Technologies in Web Intelligence","","1798-0461","10.4304/jetwi.2.3.212-220","http://www.jetwi.us/index.php?m=content&c=index&a=show&catid=161&id=923","Finding out, analyzing, documenting, and checking requirements are important activities in all development approaches, including agile development. This paper discusses problems concerned with the conduction of requirements engineering activities in agile software development processes and suggests some improvements to solve some challenges caused by agile requirements engineering practices in large projects, like properly handling and identifying sensitive (including nonfunctional) requirements, documenting and managing requirements documentation, keeping agile teams in contact with outside customers. The paper also discusses the requirements traceability problem in agile software development and the relationships between the traceability and refactoring processes and their impact on each other.","2010-08-20","2023-05-03 15:16:58","2023-05-03 15:16:59","2023-05-03 15:16:58","212-220","","3","2","","JETWI","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\JMUWZF6X\Lucia and Qusef - 2010 - Requirements Engineering in Agile Software Develop.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K9H33QQM","webpage","","","A Mapping Study on Requirements Engineering in Agile Software Development | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/7302452","","","2023-05-03 15:17:07","2023-05-03 15:17:07","2023-05-03 15:17:07","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"L326B76X","bookSection","2007","Düchting, Markus; Zimmermann, Dirk; Nebe, Karsten","Incorporating User Centered Requirement Engineering into Agile Software Development","Human-Computer Interaction. Interaction Design and Usability","978-3-540-73104-7 978-3-540-73105-4","","","http://link.springer.com/10.1007/978-3-540-73105-4_7","","2007","2023-05-03 15:17:26","2023-05-03 15:17:26","2023-05-03 15:17:26","58-67","","","4550","","","","","","","","Springer Berlin Heidelberg","Berlin, Heidelberg","en","","","","","DOI.org (Crossref)","","Series Title: Lecture Notes in Computer Science DOI: 10.1007/978-3-540-73105-4_7","","C:\Users\gabra\Zotero\storage\JLWB3XN3\Düchting et al. - 2007 - Incorporating User Centered Requirement Engineerin.pdf","","","","Jacko, Julie A.","Hutchison, David; Kanade, Takeo; Kittler, Josef; Kleinberg, Jon M.; Mattern, Friedemann; Mitchell, John C.; Naor, Moni; Nierstrasz, Oscar; Pandu Rangan, C.; Steffen, Bernhard; Sudan, Madhu; Terzopoulos, Demetri; Tygar, Doug; Vardi, Moshe Y.; Weikum, Gerhard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N4SNHIDW","journalArticle","2017","Schön, Eva-Maria; Thomaschewski, Jörg; Escalona, María José","Agile Requirements Engineering: A systematic literature review","Computer Standards & Interfaces","","0920-5489","10.1016/j.csi.2016.08.011","https://www.sciencedirect.com/science/article/pii/S0920548916300708","Nowadays, Agile Software Development (ASD) is used to cope with increasing complexity in system development. Hybrid development models, with the integration of User-Centered Design (UCD), are applied with the aim to deliver competitive products with a suitable User Experience (UX). Therefore, stakeholder and user involvement during Requirements Engineering (RE) are essential in order to establish a collaborative environment with constant feedback loops. The aim of this study is to capture the current state of the art of the literature related to Agile RE with focus on stakeholder and user involvement. In particular, we investigate what approaches exist to involve stakeholder in the process, which methodologies are commonly used to present the user perspective and how requirements management is been carried out. We conduct a Systematic Literature Review (SLR) with an extensive quality assessment of the included studies. We identified 27 relevant papers. After analyzing them in detail, we derive deep insights to the following aspects of Agile RE: stakeholder and user involvement, data gathering, user perspective, integrated methodologies, shared understanding, artifacts, documentation and Non-Functional Requirements (NFR). Agile RE is a complex research field with cross-functional influences. This study will contribute to the software development body of knowledge by assessing the involvement of stakeholder and user in Agile RE, providing methodologies that make ASD more human-centric and giving an overview of requirements management in ASD.","2017-01-01","2023-05-03 15:18:48","2023-05-03 15:18:48","2023-05-03 15:18:48","79-91","","","49","","Computer Standards & Interfaces","Agile Requirements Engineering","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\35IR423I\Schön et al. - 2017 - Agile Requirements Engineering A systematic liter.pdf","","","Agile software development; Human-computer interaction; Requirements Engineering; Systematic literature review; User-centered design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CDF8SQN6","journalArticle","2015","Inayat, Irum; Salim, Siti Salwah; Marczak, Sabrina; Daneva, Maya; Shamshirband, Shahaboddin","A systematic literature review on agile requirements engineering practices and challenges","Computers in Human Behavior","","0747-5632","10.1016/j.chb.2014.10.046","https://www.sciencedirect.com/science/article/pii/S074756321400569X","Unlike traditional software development methods, agile methods are marked by extensive collaboration, i.e. face-to-face communication. Although claimed to be beneficial, the software development community as a whole is still unfamiliar with the role of the requirements engineering practices in agile methods. The term “agile requirements engineering” is used to define the “agile way” of planning, executing and reasoning about requirements engineering activities. Moreover, not much is known about the challenges posed by collaboration-oriented agile way of dealing with requirements engineering activities. Our goal is to map the evidence available about requirements engineering practices adopted and challenges faced by agile teams in order to understand how traditional requirements engineering issues are resolved using agile requirements engineering. We conducted a systematic review of literature published between 2002 and June 2013 and identified 21 papers, that discuss agile requirements engineering. We formulated and applied specific inclusion and exclusion criteria in two distinct rounds to determine the most relevant studies for our research goal. The review identified 17 practices of agile requirements engineering, five challenges traceable to traditional requirements engineering that were overcome by agile requirements engineering, and eight challenges posed by the practice of agile requirements engineering. However, our findings suggest that agile requirements engineering as a research context needs additional attention and more empirical results are required to better understand the impact of agile requirements engineering practices e.g. dealing with non-functional requirements and self-organising teams.","2015-10-01","2023-05-03 15:18:53","2023-05-03 15:18:53","2023-05-03 15:18:53","915-929","","","51","","Computers in Human Behavior","","Computing for Human Learning, Behaviour and Collaboration in the Social and Mobile Networks Era","","","","","","en","","","","","ScienceDirect","","","","","","","Collaboration; Agile requirements engineering; Agile software development methods; Systematic review; Traditional requirements engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BDUIIJVQ","conferencePaper","2014","Wang, Xinyu; Zhao, Liping; Wang, Ye; Sun, Jie","The Role of Requirements Engineering Practices in Agile Development: An Empirical Study","Requirements Engineering","978-3-662-43610-3","","10.1007/978-3-662-43610-3_15","","Requirements Engineering (RE) plays a fundamental role in all sorts of software development processes. Recently, agile software development has been growing in popularity. However, in contrast to the extensive research of RE in traditional software development, the role of RE in agile development has not yet been studied in depth. In this paper, we present a survey with three research questions to explore the treatment of RE in the practical agile development by investigating eight agile groups from four software development organizations. To answer the three research questions, we targeted at 108 participants with rich agile experiences and designed a questionnaire to collect their answers. Our survey shows that agile RE practices play a crucial role in agile development and they are an important prerequisite for projects’ success though many agile methods advocate coding without waiting for formal requirements and design specifications.","2014","2023-05-03 15:19:01","2023-05-03 15:19:01","","195-209","","","","","","The Role of Requirements Engineering Practices in Agile Development","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","agile software development; requirements engineering; requirements analysis; scrum; survey","Zowghi, Didar; Jin, Zhi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FPHQQ7V8","conferencePaper","2011","Bjarnason, Elizabeth; Wnuk, Krzysztof; Regnell, Björn","A case study on benefits and side-effects of agile practices in large-scale requirements engineering","Proceedings of the 1st Workshop on Agile Requirements Engineering","978-1-4503-0890-8","","10.1145/2068783.2068786","https://doi.org/10.1145/2068783.2068786","In the software industry, there is a strong shift from traditional phase-based development towards agile methods and practices. This paper reports on a case study aimed at investigating if, and how, agile Requirements Engineering (RE) can remedy the challenges of traditional RE, and what new challenges agile RE may pose. The results from an initial case study with 9 practitioners from a large software development company, which is transitioning towards agile-inspired processes, show that agile practices address some RE challenges such as communication gaps and overscoping, but also cause new challenges, such as striking a good balance between agility and stability, and ensuring sufficient competence in cross-functional development teams.","2011-07-26","2023-05-03 15:19:03","2023-05-03 15:19:03","2023-05-03","1–5","","","","","","","AREW '11","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\CCTXGCKN\Bjarnason et al. - 2011 - A case study on benefits and side-effects of agile.pdf","","","requirements engineering; agile; case study; empirical study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LCP6YRUV","conferencePaper","2016","Elghariani, Kaiss; Kama, Nazri","Review on Agile requirements engineering challenges","2016 3rd International Conference on Computer and Information Sciences (ICCOINS)","","","10.1109/ICCOINS.2016.7783267","","The popularity of agile methodology has been increased since agile offers further collaboration. Requirements engineering (RE) is one of the software development process in agile approaches. The features of face to face communication is one of agile way which unlike to other traditional software methods. Software developers are using the definition agile way to improve the agile way of activities. Besides, the challenge of dealing with RE practices is not much is known in agile way or model. However, many literature works have been done in RE in agile approaches and challenges faced by teamwork. The aim of this paper is to fill the gap by presenting RE practices in agile methodology also the challenges of RE activities which are faced by agile team members. 80 systematic literature reviews are conducted and 22 research papers are identified. Moreover, the reviews discuss RE in agile methodology approaches. This paper has adopted a systematic literature review and has applied a certain inclusion and exclusion criteria to detect the research studies related to RE in agile methodology to achieve the aim of this research. This research determined most of agile requirements engineering activities, also challenges of requirements engineering in agile methodology. Therefore, the research findings can be a reference to all researchers who are interested in this research area because the paper's findings clarify that RE in agile methodology need to have further attention by researchers and more practical results are needed to gain understandable information about RE practices in Agile methodology.","2016-08","2023-05-03 15:19:30","2023-05-03 15:19:30","","507-512","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Collaboration; Agile methodology; agile requirements engineering; Bibliographies; Databases; Requirements engineering; Search problems; Software; systematic review; Systematics; Teamwork; traditional requirements engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2016 3rd International Conference on Computer and Information Sciences (ICCOINS)","","","","","","","","","","","","","","",""
"SZWSV3WS","conferencePaper","2017","Kasauli, Rashidah; Liebel, Grischa; Knauss, Eric; Gopakumar, Swathi; Kanagwa, Benjamin","Requirements Engineering Challenges in Large-Scale Agile System Development","2017 IEEE 25th International Requirements Engineering Conference (RE)","","","10.1109/RE.2017.60","","Motivated by their success in software development, companies implement agile methods and their practices increasingly for software-intense, large products, such as cars, telecommunication infrastructure, and embedded systems. Such systems are usually subject to safety and regulative concerns as well as different development cycles of hardware and software. Consequently, requirements engineering involves upfront and detailed analysis, which can be at odds with agile (software) development. In this paper, we present results from a multiple case study with two car manufacturers, a telecommunications company, and a technology company that are on the journey to introduce organization wide continuous integration and continuous delivery to customers. Based on 20 qualitative interviews, 5 focus groups, and 2 cross-company workshops, we discuss possible scopes of agile methods within system development, the consequences this has on the role of requirements, and the challenges that arise from the interplay of requirements engineering and agile methods in large-scale system development. These relate in particular to communicating and managing knowledge about a) customer value and b) the system under development. We conclude that better alignment of a holistic requirements model with agile development practices promises rich gains in development speed, flexibility, and overall quality of software and systems.","2017-09","2023-05-03 15:19:31","2023-05-03 15:19:31","","352-361","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","requirements engineering; Software; Automotive engineering; Companies; Conferences; Interviews; large-scale agile; Large-scale systems; system engineering; Telecommunications","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 IEEE 25th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"NH7DR6DE","journalArticle","2018","Ochodek, Mirosław; Kopczyńska, Sylwia","Perceived importance of agile requirements engineering practices – A survey","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2018.05.012","https://www.sciencedirect.com/science/article/pii/S0164121218300955","Context:Requirements Engineering (RE) is one of the key processes in software development. Since Agile software development advocates continuous improvement, the question arises which Agile RE practices are the most essential and shall be adopted/improved at first? Objective:Investigate and rank the Agile RE practices based on how practitioners perceive their importance for a software project. Method:We conducted a survey asking 136 Agile software development practitioners how they perceive the importance of the 31 Agile RE practices that we had identified in a literature study. We used a ranking method based on the PROMETHEE family methods to create the ranking of relative importance of the practices. Results:The opinions of respondents from a wide range of countries around the globe allowed us to determine the perceived importance of the Agile RE practices and create a seven-tier ranking of the practices. Moreover, the analysis concerning demographic data let us identify some relationships between the experience of the respondents and their view on the importance of the Agile RE practices. Conclusions:Our findings suggest the most critical Agile RE practices are those supporting iterative development with emergent requirements and short feedback loop. Moreover, in many cases, the perceived importance of practices seems to depend on the context of the project (e.g., methodology, domain). We also learned that the popularity of the practices is highly correlated with their perceived importance.","2018-09-01","2023-05-03 15:19:32","2023-05-03 15:19:32","2023-05-03 15:19:31","29-43","","","143","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\NBGXHE5P\S0164121218300955.html","","","Requirements engineering; Agile; Importance; Practices; Survey study","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7TFB3SNL","bookSection","2005","Sillitti, Alberto; Succi, Giancarlo","Requirements Engineering for Agile Methods","Engineering and Managing Software Requirements","978-3-540-28244-0","","","https://doi.org/10.1007/3-540-28244-0_14","Collecting, understanding, and managing requirements is a critical aspect in all development methods. This is true for Agile Methods as well. In particular, several agile practices deal with requirements in order to implement them correctly and satisfy the needs of the customer. These practices focus on a continuous interaction with the customer to address the requirements evolution over time, prioritize them, and deliver the most valuable functionalities first. This chapter introduces Agile Methods as the implementation of the principles of the lean production in software development. Therefore, Agile Methods focus on continuous process improvement through the identification and the removal of waste, whatever does not add value for the customer.","2005","2023-05-03 15:19:50","2023-05-03 15:19:50","2023-05-03 15:19:50","309-326","","","","","","","","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","DOI: 10.1007/3-540-28244-0_14","","","","","Agile methods; Lean management; Process management; Requirements management; Variability management","Aurum, Aybüke; Wohlin, Claes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NWVKLVQF","journalArticle","2010","Ramesh, Balasubramaniam; Cao, Lan; Baskerville, Richard","Agile requirements engineering practices and challenges: an empirical study","Information Systems Journal","","1365-2575","10.1111/j.1365-2575.2007.00259.x","https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2575.2007.00259.x","This paper describes empirical research into agile requirements engineering (RE) practices. Based on an analysis of data collected in 16 US software development organizations, we identify six agile practices. We also identify seven challenges that are created by the use of these practices. We further analyse how this collection of practices helps mitigate some, while exacerbating other risks in RE. We provide a framework for evaluating the impact and appropriateness of agile RE practices by relating them to RE risks. Two risks that are intractable by agile RE practices emerge from the analysis. First, problems with customer inability and a lack of concurrence among customers significantly impact agile development. Second, risks associated with the neglecting non-functional requirements such as security and scalability are a serious concern. Developers should carefully evaluate the risk factors in their project environment to understand whether the benefits of agile RE practices outweigh the costs imposed by the challenges.","2010","2023-05-03 15:19:54","2023-05-03 15:19:54","2023-05-03 15:19:54","449-480","","5","20","","","Agile requirements engineering practices and challenges","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1365-2575.2007.00259.x","","C:\Users\gabra\Zotero\storage\Q9A5X4VI\j.1365-2575.2007.00259.html","","","agile software development; requirements engineering; agile practices; requirements engineering risks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BSPT99QW","conferencePaper","2015","Käpyaho, Marja; Kauppinen, Marjo","Agile requirements engineering with prototyping: A case study","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","10.1109/RE.2015.7320450","","The rise of agile software development methods has led to the abandonment of many traditional practices especially in requirements engineering (RE). Agile RE is still a relatively new research area and the growing use of agile methods in large projects is forcing companies to look for more formal practices for RE. This paper describes experiences gained from a case study of a large agile project. The goal of this case study was to explore how prototyping can solve the challenges of agile RE. Our findings indicate that while prototyping can help with some challenges of agile RE such as lack of documentation, motivation for RE work and poor quality communication, it also needs complementary practices to reach its full potential. These practices include reviewing the big picture regularly, keeping track of quality requirements, and using ATDD (Acceptance Test Driven Development).","2015-08","2023-05-03 15:20:15","2023-05-03 15:20:15","","334-343","","","","","","Agile requirements engineering with prototyping","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","requirements engineering; Documentation; Agile software development; Software; Companies; Interviews; agility; good practices; Prototypes; prototyping; RE process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"GQYAEU83","conferencePaper","2009","Adikari, Sisira; McDonald, Craig; Campbell, John","Little Design Up-Front: A Design Science Approach to Integrating Usability into Agile Requirements Engineering","Human-Computer Interaction. New Trends","978-3-642-02574-7","","10.1007/978-3-642-02574-7_62","","In recent years, Design Science has gained wide recognition and acceptance as a formal research method in many disciplines including information systems. Design Science research in Human-Computer Interaction is not so abundant. HCI is a discipline primarily focusing on design, evaluation, and implementation where design plays the role as a process as well as an artefact. In this paper, we present a design science approach using “Little Design Up Front” to integrate the User-Centred Design perspective into Agile Requirements Engineering. We also present the results of two agile projects to validate the proposition that incorporating UCD perspective into Agile Software Development improves the design quality of software systems.","2009","2023-05-03 15:20:15","2023-05-03 15:20:15","","549-558","","","","","","Little Design Up-Front","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\BK2VXTN2\Adikari et al. - 2009 - Little Design Up-Front A Design Science Approach .pdf","","","Agile Requirements Engineering; Design Science; Usability","Jacko, Julie A.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LTV45MGR","conferencePaper","2010","Savolainen, Juha; Kuusela, Juha; Vilavaara, Asko","Transition to Agile Development - Rediscovery of Important Requirements Engineering Practices","2010 18th IEEE International Requirements Engineering Conference","","","10.1109/RE.2010.41","","Many organizations have started to use agile development processes to speed up the development cycle and to improve the ability of the company in reacting to changing requirements. Adopting agile practices may happen as a revolution where all old practices are removed or as a more gradual process. In this paper, we discuss lessons learnt in two agile transition processes. Based on our experience, agile processes can be used in embedded software development for products. The challenges include the varying size of user requirements, the role of system requirements, and architecturally significant requirements. It is difficult for large organizations to be agile. Work allocation for a large number of different teams with different competencies tends to decrease speed, and increase the role of design and management. We conclude that agile development in this context needs very skilled developers and has to be a combination of new and old practices.","2010-09","2023-05-03 15:20:19","2023-05-03 15:20:19","","289-294","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Programming; requirements engineering; Software; Companies; agility; best practices; Computer architecture; Hardware; Software architecture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 18th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"EPGZW33C","book","2022","Laplante, Phillip A.; Kassab, Mohamad H.","Requirements Engineering for Software and Systems","","978-1-00-059379-2","","","","Solid requirements engineering has increasingly been recognized as the key to improved, on-time, and on-budget delivery of software and systems projects. New software tools are emerging that are empowering practicing engineers to improve their requirements engineering habits. However, these tools are not usually easy to use without significant training.  Requirements Engineering for Software and Systems, Fourth Edition is intended to provide a comprehensive treatment of the theoretical and practical aspects of discovering, analyzing, modeling, validating, testing, and writing requirements for systems of all kinds, with an intentional focus on software-intensive systems. It brings into play a variety of formal methods, social models, and modern requirements writing techniques to be useful to practicing engineers. The book is intended for professional software engineers, systems engineers, and senior and graduate students of software or systems engineering. Since the first edition, there have been made many changes and improvements to this textbook. Feedback from instructors, students, and corporate users was used to correct, expand, and improve the materials. The fourth edition features two newly added chapters: ""On Non-Functional Requirements"" and ""Requirements Engineering: Road Map to the Future."" The latter provides a discussion on the relationship between requirements engineering and such emerging and disruptive technologies as Internet of Things, Cloud Computing, Blockchain, Artificial Intelligence, and Affective Computing. All chapters of the book were significantly expanded with new materials that keep the book relevant to current industrial practices. Readers will find expanded discussions on new elicitation techniques, agile approaches (e.g., Kanpan, SAFe, and DEVOps), requirements tools, requirements representation, risk management approaches, and functional size measurement methods. The fourth edition also has significant additions of vignettes, exercises, and references. Another new feature is scannable QR codes linked to sites containing updates, tools, videos, and discussion forums to keep readers current with the dynamic field of requirements engineering.","2022-06-07","2023-05-03 15:20:29","2023-05-03 15:20:29","","","429","","","","","","","","","","CRC Press","","en","","","","","Google Books","","Google-Books-ID: HEpmEAAAQBAJ","","","https://books.google.co.in/books?id=HEpmEAAAQBAJ","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Systems Analysis & Design; Technology & Engineering / Engineering (General)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9ZJYGHRF","journalArticle","2011","Rubin, Eran; Rubin, Hillel","Supporting agile software development through active documentation","Requirements Engineering","","1432-010X","10.1007/s00766-010-0113-9","https://doi.org/10.1007/s00766-010-0113-9","Agile development processes are adaptive rather than predictive. Therefore, agile processes emphasize operational system code rather than its documentation. To overcome the absence of comprehensive documentation artifacts, agile methods require constant interaction between the system stakeholders. Ironically, however, some traditional documentation artifacts come to support this kind of interaction. In this study, we examine the relationship between software and documentation. We develop an approach that enables incorporating domain documentation to agile development, while keeping the processes adaptive. We also provide a system design that actively uses domain knowledge documentation. These ideas have been applied through the implementation and use of agile documentation support components.","2011-06-01","2023-05-03 15:20:32","2023-05-03 15:20:32","2023-05-03 15:20:32","117-132","","2","16","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Agile documentation; Conceptual modeling; Domain knowledge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KYKK8NQZ","journalArticle","2014","Belsis, Petros; Koutoumanos, Anastasios; Sgouropoulou, Cleo","PBURC: a patterns-based, unsupervised requirements clustering framework for distributed agile software development","Requirements Engineering","","1432-010X","10.1007/s00766-013-0172-9","https://doi.org/10.1007/s00766-013-0172-9","Agile software development methodologies are increasingly adopted by organizations because they focus on the client’s needs, thus safeguarding business value for the final product. At the same time, as the economy and society move toward globalization, more organizations shift to distributed development of software projects. From this perspective, while adopting agile techniques seems beneficial, there are still a number of challenges that need to be addressed; among these notable is the effective cooperation between the stakeholders and the geographically distributed development team. In addition, data collection and validation for requirements engineering demands efficient processing techniques in order to handle the volume of data as well as to manage different inconsistencies, when the data are collected using online tools. In this paper, we present “PBURC,” a patterns-based, unsupervised requirements clustering framework, which makes use of machine-learning methods for requirements validation, being able to overcome data inconsistencies and effectively determine appropriate requirements clusters for optimal definition of software development sprints.","2014-06-01","2023-05-03 15:20:37","2023-05-03 15:20:37","2023-05-03 15:20:37","213-225","","2","19","","Requirements Eng","PBURC","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Agile software process; Distributed software development; Requirements clustering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZKMNAHIN","journalArticle","2021","Kasauli, Rashidah; Knauss, Eric; Horkoff, Jennifer; Liebel, Grischa; de Oliveira Neto, Francisco Gomes","Requirements engineering challenges and practices in large-scale agile system development","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2020.110851","https://www.sciencedirect.com/science/article/pii/S0164121220302417","Context: Agile methods have become mainstream even in large-scale systems engineering companies that need to accommodate different development cycles of hardware and software. For such companies, requirements engineering is an essential activity that involves upfront and detailed analysis which can be at odds with agile development methods. Objective: This paper presents a multiple case study with seven large-scale systems companies, reporting their challenges, together with best practices from industry. We also analyze literature about two popular large-scale agile frameworks, SAFe® and LeSS, to derive potential solutions for the challenges. Methods: Our results are based on 20 qualitative interviews, five focus groups, and eight cross-company workshops which we used to both collect and validate our results. Results: We found 24 challenges which we grouped in six themes, then mapped to solutions from SAFe®, LeSS, and our companies, when available. Conclusion: In this way, we contribute a comprehensive overview of RE challenges in relation to large-scale agile system development, evaluate the degree to which they have been addressed, and outline research gaps. We expect these results to be useful for practitioners who are responsible for designing processes, methods, or tools for large scale agile development as well as guidance for researchers.","2021-02-01","2023-05-03 15:20:39","2023-05-03 15:20:39","2023-05-03 15:20:39","110851","","","172","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\EFXELEP9\Kasauli et al. - 2021 - Requirements engineering challenges and practices .pdf","","","Requirements engineering; Large-scale agile; Systems engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2I8D9WQC","journalArticle","2019","Melegati, Jorge; Goldman, Alfredo; Kon, Fabio; Wang, Xiaofeng","A model of requirements engineering in software startups","Information and Software Technology","","0950-5849","10.1016/j.infsof.2019.02.001","https://www.sciencedirect.com/science/article/pii/S095058491930028X","Context Over the past 20 years, software startups have created many products that have changed human life. Since these companies are creating brand-new products or services, requirements are difficult to gather and highly volatile. Although scientific interest in software development in this context has increased, the studies on requirements engineering in software startups are still scarce and mostly focused on elicitation activities. Objective This study overcomes this gap by answering how requirements engineering practices are performed in this context. Method We conducted a grounded theory study based on 17 interviews with software startups practitioners. Results We constructed a model to show that software startups do not follow a single set of practices but, instead, build a custom process, changed throughout the development of the company, combining different practices according to a set of influences (Founders, Software Development Manager, Developers, Market, Business Model and Startup Ecosystem). Conclusion Our findings show that requirements engineering activities in software startups are similar to those in agile teams, but some steps vary as a consequence of the lack of an accessible customer.","2019-05-01","2023-05-03 15:20:45","2023-05-03 15:20:45","2023-05-03 15:20:45","92-107","","","109","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements engineering; Customer development; Empirical software engineering; Product validation; Software startups","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VT5MIJI7","journalArticle","2017","Al-Zewairi, Malek; Biltawi, Mariam; Etaiwi, Wael; Shaout, Adnan","Agile Software Development Methodologies: Survey of Surveys","Journal of Computer and Communications","","","10.4236/jcc.2017.55007","http://www.scirp.org/journal/PaperInformation.aspx?PaperID=75114&#abstract","Agile software design and development methodologies have been gaining rigorous attention in the software engineering research community since their early introduction in the mid-nineties in addition to being highly adopted by the software development industry. In the last 15 years, an excessive number of research studies have been conducted on agile methods, a great number of notable methods have been proposed and various surveys have been presented by many researchers. In this study, the authors intend to conduct a literature survey study of the surveys of the different agile methodologies ranging from January 2000 to December 2015 using an intuitive research methodology called “Compare and Review” (CR). Furthermore, these survey papers were classified into four major categories according to their area of study. Additionally, the newly proposed agile methodologies that have not been addressed yet in any other literature review were reviewed and compared in terms of where the changes that they proposed lay on the SDLC.","2017","2023-05-03 15:20:47","2023-05-03 15:20:47","2023-05-03 15:20:47","74","","05","05","","","Agile Software Development Methodologies","","","","","","","en","","","","","www.scirp.org","","Number: 05 Publisher: Scientific Research Publishing","","C:\Users\gabra\Zotero\storage\4BUKQLVR\Al-Zewairi et al. - 2017 - Agile Software Development Methodologies Survey o.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TRYCJ9FZ","journalArticle","2018","Hoda, Rashina; Salleh, Norsaremah; Grundy, John","The Rise and Evolution of Agile Software Development","IEEE Software","","1937-4194","10.1109/MS.2018.290111318","","Agile software development has dominated the second half of the past 50 years of software engineering. Retrospectives, one of the most common agile practices, enables reflection on past performance, discussion of current progress, and charting forth directions for future improvement. Because of agile’s burgeoning popularity as the software development model of choice and a significant research subdomain of software engineering, it demands a retrospective of its own. This article provides a historical overview of agile’s main focus areas and a holistic synthesis of its trends, their evolution over the past two decades, agile’s current status, and, forecast from these, agile’s likely future. This article is part of a theme issue on software engineering’s 50th anniversary.","2018-09","2023-05-03 15:20:52","2023-05-03 15:20:52","","58-63","","5","35","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","agile software development; Software engineering; Agile software development; agile; Market research; Planning; software development; software engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VAH5V72J","journalArticle","2016","Ramadan, Nagy; Megahed, Salwa","Requirements Engineering in Scrum Framework","International Journal of Computer Applications","","","10.5120/ijca2016911530","","Engineering (RE) plays an important role in the success of software development life cycle. As RE is the starting point of the life cycle, any changes in requirements will be costly and time consuming. Failure in determining accurate requirements leads to errors in specifications and therefore to a mal system architecture. In addition, most of software development environments are characterized by user requests to change some requirements.Scrum as one of agile development methods that gained a great attention because of its ability to deal with the changing environments. This paper presents and discusses the current situation of RE activities in Scrum, how Scrum benefits from RE techniques and future challenges in this respect.","2016-09-15","2023-05-03 15:20:53","2023-05-03 15:20:53","","24-29","","","149","","International Journal of Computer Applications","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\WJN7DIU3\Ramadan and Megahed - 2016 - Requirements Engineering in Scrum Framework.pdf; ","https://www.researchgate.net/profile/Nagy-Ramadan/publication/308186449_Requirements_Engineering_in_Scrum_Framework/links/57de46b008aeea195938d140/Requirements-Engineering-in-Scrum-Framework.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YWWMNLHZ","conferencePaper","2014","Lin, Jun; Yu, Han; Shen, Zhiqi; Miao, Chunyan","Using goal net to model user stories in agile software development","15th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","","","10.1109/SNPD.2014.6888731","","Agile methodologies use user stories to capture software requirements. This often results in team members over emphasizing their understanding of the goals, without proper incorporation of goals from other stakeholders or customers. Existing UML or other goal oriented modeling methods tend to be overly complex for non-technical stakeholders to properly express their goals and communicate them to the agile team. In this paper, we propose a light weight Goal Net based method to model goal requirements in agile software development process to address this problem. It can be used to decompose complex processes into phased goals, and model low level user stories to high level hierarchy goal structures. Our preliminary analysis and studies in educational software engineering contexts show that it can improve agile team's group awareness to project goals and, thus, improve team productivity and artifact quality. The proposed approach was evaluated in university level agile software engineering projects. It has achieved an improvement of over 50 percentage points in terms of the proportion of high quality user stories generated by students compared to the standard user story template used in Scrum,","2014-06","2023-05-03 15:21:05","2023-05-03 15:21:05","","1-6","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Software engineering; Software; Agile Software Development; Educational institutions; Goal Net; Mobile communication; Mobile handsets; Software Engineering; Unified modeling language; Variable speed drives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","15th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)","","","","","","","","","","","","","","",""
"H35TML2H","conferencePaper","2015","Kassab, Mohamad","The changing landscape of requirements engineering practices over the past decade","2015 IEEE Fifth International Workshop on Empirical Requirements Engineering (EmpiRE)","","","10.1109/EmpiRE.2015.7431299","","Even though there is ample information available on solid requirements engineering practices, anecdotal evidence still indicates poor practices in industry. The key issue in implementing an improvement is to first identify the areas that need most improvement. Three surveys were conducted in 2003, 2008 and 2013 on the state of practice of requirements engineering. Surveys data obtained includes characteristics of projects, practices, organizations, and practitioners related to requirements engineering. In this paper we present a comparison and analysis of the responses from the three surveys in order to understand the changing land-scape of requirements engineering industrial practices over the past years.","2015-08","2023-05-03 15:21:07","2023-05-03 15:21:07","","1-8","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2329-6356","","C:\Users\gabra\Zotero\storage\47VVGITG\7431299.html","","","Documentation; Software engineering; Agile software development; Requirements Engineering; agile; Requirements engineering; Software; Companies; common practices; Industries; software development industry; software professionals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE Fifth International Workshop on Empirical Requirements Engineering (EmpiRE)","","","","","","","","","","","","","","",""
"UCZCJ3YF","journalArticle","2016","Dingsøyr, Torgeir; Lassenius, Casper","Emerging themes in agile software development: Introduction to the special section on continuous value delivery","Information and Software Technology","","0950-5849","10.1016/j.infsof.2016.04.018","https://www.sciencedirect.com/science/article/pii/S0950584916300829","The relationship between customers and suppliers remains a challenge in agile software development. Two trends seek to improve this relationship, the increased focus on value and the move towards continuous deployment. In this special section on continuous value delivery, we describe these emerging research themes and show the increasing interest in these topics over time. Further, we discuss implications for future research.","2016-09-01","2023-05-03 15:23:48","2023-05-03 15:23:48","2023-05-03 15:23:47","56-60","","","77","","Information and Software Technology","Emerging themes in agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7AG3D589\Dingsøyr and Lassenius - 2016 - Emerging themes in agile software development Int.pdf","","","Agile software development; Requirements engineering; Continuous deployment; Extreme programming; Lean startup; Scrum; Software process improvement; Value-based software engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"49SPCVY6","journalArticle","2016","Lucassen, Garm; Dalpiaz, Fabiano; van der Werf, Jan Martijn E. M.; Brinkkemper, Sjaak","Improving agile requirements: the Quality User Story framework and tool","Requirements Engineering","","1432-010X","10.1007/s00766-016-0250-x","https://doi.org/10.1007/s00766-016-0250-x","User stories are a widely adopted requirements notation in agile development. Yet, user stories are too often poorly written in practice and exhibit inherent quality defects. Triggered by this observation, we propose the Quality User Story (QUS) framework, a set of 13 quality criteria that user story writers should strive to conform to. Based on QUS, we present the Automatic Quality User Story Artisan (AQUSA) software tool. Relying on natural language processing (NLP) techniques, AQUSA detects quality defects and suggest possible remedies. We describe the architecture of AQUSA, its implementation, and we report on an evaluation that analyzes 1023 user stories obtained from 18 software companies. Our tool does not yet reach the ambitious 100 % recall that Daniel Berry and colleagues require NLP tools for RE to achieve. However, we obtain promising results and we identify some improvements that will substantially improve recall and precision.","2016-09-01","2023-05-03 15:23:59","2023-05-03 15:23:59","2023-05-03 15:23:59","383-403","","3","21","","Requirements Eng","Improving agile requirements","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\9T7EEH2R\Lucassen et al. - 2016 - Improving agile requirements the Quality User Sto.pdf","","","AQUSA; Multi-case study; Natural language processing; QUS framework; Requirements quality; User stories","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5TLT5HDG","conferencePaper","2010","Sohaib, Osama; Khan, Khalid","Integrating usability engineering and agile software development: A literature review","2010 International Conference On Computer Design and Applications","","","10.1109/ICCDA.2010.5540916","","The various agile software development methodologies have promoted since their inception and even demanded high degree to improve the quality of the software product. Usability engineering has made its way into the software mainstream and has caught the attention of software engineers and researchers worldwide due to rapidly growing and volatile internet software industry, despite their different perspectives on creating software both have a major role in making good software. Usability focuses on how the end users will work with the software and agile development focuses on how the software should be developed. The way these two perspectives are being combined in practice is still not well understood. This study is a preliminary literature review that describes the key question that how usability-engineering practices should be integrated with agile software development in order to make stronger and effective usable software system. This paper focuses on identifying the tensions between usability and agile methods. The research aim is to identify the common approach of agile methods and usability engineering by surveying extensive related work on integration of usability and agile methods.","2010-06","2023-05-03 15:24:02","2023-05-03 15:24:02","","V2-32-V2-38","","","2","","","Integrating usability engineering and agile software development","","","","","","","","","","","","IEEE Xplore","","","","","","","Design engineering; Programming; Software quality; Usability; Educational institutions; agile development; Computer industry; extreme programming (XP); Internet; Software systems; Testing; usability; User centered design; user-centered design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 International Conference On Computer Design and Applications","","","","","","","","","","","","","","",""
"FHKVE4B6","conferencePaper","2016","Lombriser, Philipp; Dalpiaz, Fabiano; Lucassen, Garm; Brinkkemper, Sjaak","Gamified Requirements Engineering: Model and Experimentation","Requirements Engineering: Foundation for Software Quality","978-3-319-30282-9","","10.1007/978-3-319-30282-9_12","","[Context & Motivation] Engaging stakeholders in requirements engineering (RE) influences the quality of the requirements and ultimately of the system to-be. Unfortunately, stakeholder engagement is often insufficient, leading to too few, low-quality requirements. [Question/problem] We aim to evaluate the effectiveness of gamification to improve stakeholder engagement and ultimately performance in RE. We focus on agile requirements that are expressed as user stories and acceptance tests. [Principal ideas/results] We develop the gamified requirements engineering model (GREM) that relates gamification, stakeholder engagement, and RE performance. To evaluate GREM, we build an online gamified platform for requirements elicitation, and we report on a rigorous controlled experiment where two independent teams elicited requirements for the same system with and without gamification. The findings show that the performance of the treatment group is significantly higher, and their requirements are more numerous, have higher quality, and are more creative. [Contribution] The GREM model paves the way for further work in gamified RE. Our evaluation provides promising initial empirical insights, and leads us to the hypothesis that competitive game elements are advantageous for RE elicitation, while social game elements are favorable for RE phases where cooperation is demanded.","2016","2023-05-03 15:24:08","2023-05-03 15:24:08","","171-187","","","","","","Gamified Requirements Engineering","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Agile requirements; Empirical study; Gamification; Gamified Requirements Engineering Model; Requirements elicitation","Daneva, Maya; Pastor, Oscar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"XEAGLLQR","journalArticle","2016","Bjarnason, Elizabeth; Unterkalmsteiner, Michael; Borg, Markus; Engström, Emelie","A multi-case study of agile requirements engineering and the use of test cases as requirements","Information and Software Technology","","0950-5849","10.1016/j.infsof.2016.03.008","https://www.sciencedirect.com/science/article/pii/S0950584916300544","Context It is an enigma that agile projects can succeed ‘without requirements’ when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases. Objective We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies. Method We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups. Results The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements. Conclusions The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change.","2016-09-01","2023-05-03 15:24:11","2023-05-03 15:24:11","2023-05-03 15:24:11","61-79","","","77","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\WVP7IGYL\Bjarnason et al. - 2016 - A multi-case study of agile requirements engineeri.pdf","","","Empirical software engineering; Testing; Acceptance test; Agile development; Behaviour-driven development; Case study; Requirements; Test-driven development; Test-first development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6N379TCH","journalArticle","","Eberlein, Armin","Agile Requirements Definition: A View from Requirements Engineering","","","","","","Agile methods are an attractive alternative for those pressured to produce code fast. Many programmers like the hands-on strategy of these approaches which also help them avoid some of the less exciting tasks, such as specification. On the other hand, some people appear to welcome agile methods as an excuse to throw overboard everything that requirements engineering has been teaching. This position paper looks at numerous aspects of requirements engineering and argues about their suitability for agile approaches. The aim is to elicit lessons from requirements engineering that agile methods might consider, if quality is a major concern.","","2023-05-03 15:24:22","2023-05-03 15:24:22","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\NCVZC867\Eberlein - Agile Requirements Definition A View from Require.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R3VPU2XE","conferencePaper","2008","Racheva, Zornitza; Daneva, Maya; Buglione, Luigi","Supporting the Dynamic Reprioritization of Requirements in Agile Development of Software Products","2008 Second International Workshop on Software Product Management","","","10.1109/IWSPM.2008.7","","Agile requirements engineering is the approach of choice for many software producers whose realities include highly uncertain requirements, use of new development technology, and clients willing to explore the ways in which an evolving product can help their business goals. From customer's perspective, the activity of continuous requirements reprioritization forms the very core of today's agile approaches. However, the freedom for clients to do so does not come for free. This paper presents results of a literature review on agile requirements prioritization methods, derives a conceptual model for understanding the inter-iteration prioritization process in terms of inputs and outcomes, and identifies issues and solutions pertinent to agile prioritization. The latter are derived from the authors' experiences and by using empirical data, published earlier by other authors.","2008-09","2023-05-03 15:24:24","2023-05-03 15:24:24","","49-58","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\55PDA4PD\Racheva et al. - 2008 - Supporting the Dynamic Reprioritization of Require.pdf","","","Programming; Project management; Conferences; Computer architecture; Variable speed drives; Application software; Decision making; Delay; Product development; Scalability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 Second International Workshop on Software Product Management","","","","","","","","","","","","","","",""
"W72ITLLK","journalArticle","2004","Lindvall, M.; Muthig, D.; Dagnino, A.; Wallin, C.; Stupperich, M.; Kiefer, D.; May, J.; Kahkonen, T.","Agile software development in large organizations","Computer","","1558-0814","10.1109/MC.2004.231","","The need to see compelling evidence before adopting new methods looms greater in large organizations because of their complexity and the need to integrate new technologies and processes with existing ones. To further evaluate agile methods and their underlying software development practices, several Software Experience Center (SEC) member companies initiated a series of activities to discover if agile practices match their organizations' needs. Although each organization evaluated agile methods according to its specific needs, here we attempt to generalize their findings by analyzing some of their common experiences in the particular context of large organizations with well-established structures and processes. We base this analysis on experience collected and shared among four SEC members namely ABB, DaimlerChrysler, Motorola, and Nokia.","2004-12","2023-05-03 15:24:26","2023-05-03 15:24:26","","26-34","","12","37","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: Computer","","C:\Users\gabra\Zotero\storage\XFGAJML3\Lindvall et al. - 2004 - Agile software development in large organizations.pdf","","","Data analysis; Programming; Software quality; Software engineering; Companies; Costs; Driver circuits; Mission critical systems; Productivity; Software maintenance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UJD6MFCP","conferencePaper","2013","Aitken, Ashley; Ilango, Vishnu","A Comparative Analysis of Traditional Software Engineering and Agile Software Development","2013 46th Hawaii International Conference on System Sciences","","","10.1109/HICSS.2013.31","","Over the last decade (or two) the pendulum of developer mindshare has swung decidedly towards agile software development from a more traditional engineering approach to software development. To ascertain the essential differences and any possible incompatibilities between these two software development paradigms this research investigates a number of traditional and agile methodologies, methods, and techniques. The essential differences between traditional software engineering and agile software development are found not to be (as one may first suspect from a cursory consideration) related to iteration length or project management, but rather more related to other attributes like the variety of models employed, the purpose of the models, and the approach to modeling. In the end though the two approaches are not seen to be incompatible, leading to the future possibility of an Agile Software Engineering (ASE).","2013-01","2023-05-03 15:24:36","2023-05-03 15:24:36","","4751-4760","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1605","","","","","Software engineering; agile; Software; software development; software engineering; Unified modeling language; Variable speed drives; comparative analysis; Crystals; Iterative methods; Problem-solving","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 46th Hawaii International Conference on System Sciences","","","","","","","","","","","","","","",""
"VNSCRJLB","conferencePaper","2013","Martakis, Aias; Daneva, Maya","Handling requirements dependencies in agile projects: A focus group with agile software development practitioners","IEEE 7th International Conference on Research Challenges in Information Science (RCIS)","","","10.1109/RCIS.2013.6577679","","Agile practices on requirements dependencies are a relatively unexplored topic in literature. Empirical studies on it are scarce. This research sets out to uncover concepts that practitioners in companies of various sizes across the globe and in various industries, use for dealing with requirements dependencies in their agile software projects. Concepts were revealed through online focus group research, using an adapted forum for discussion, and grounded theory to analyze the responses. Our study resulted in the following findings: (1) requirements dependencies occur in agile projects and are important to these projects' success just as this is known for `traditional' software projects'; (2) requirements dependencies (i) were considered and treated as part of risk management, (ii) were deemed a responsibility of the individual team members, and (iii) mostly did affect project planning; (3) continuous communication and collaboration - two essential features of any agile method, were found critical to mitigating the risks due to dependencies; (4) a hybrid approach to architecture between agile and plan-driven methods was perceived to yield maximum scalability and help coping with dependencies; (5) `cross-cutting concerns', a category of dependencies, were not uniformly understood in an agile context and require more research.","2013-05","2023-05-03 15:24:44","2023-05-03 15:24:44","","1-11","","","","","","Handling requirements dependencies in agile projects","","","","","","","","","","","","IEEE Xplore","","ISSN: 2151-1357","","","","","agile software development; Software engineering; agile requirements engineering; Software; Companies; Industries; Cognition; Communities; Context; cross-cutting concerns; focus groups; grounded theory; qualitative research; requirements dependencies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IEEE 7th International Conference on Research Challenges in Information Science (RCIS)","","","","","","","","","","","","","","",""
"LHNTC634","conferencePaper","2002","Nawrocki, J.; Jasinski, M.; Walter, B.; Wojciechowski, A.","Extreme programming modified: embrace requirements engineering practices","Proceedings IEEE Joint International Conference on Requirements Engineering","","","10.1109/ICRE.2002.1048543","","Extreme programming (XP) is an agile (lightweight) software development methodology and it becomes more and more popular. XP proposes many interesting practices, but it also has some weaknesses. From the software engineering point of view the most important issues are: maintenance problems resulting from very limited documentation (XP relies on code and test cases only), and lack of wider perspective of a system to be built. Moreover, XP assumes that there is only one customer representative. In many cases there are several representatives (each one with his own view of the system and different priorities) and then some XP practices should be modified. In the paper we assess XP from two points of view: the capability maturity model and the Sommerville-Sawyer model (1997). We also propose how to introduce documented requirements to XP, how to modify the planning game to allow many customer representatives and how to get a wider perspective of a system to be built at the beginning of the project lifecycle.","2002-09","2023-05-03 15:24:49","2023-05-03 15:24:49","","303-310","","","","","","Extreme programming modified","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","","","","Documentation; Software engineering; Software maintenance; Automatic testing; Capability maturity model; Electronic mail; Oral communication; Programming profession; Software testing; System testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE Joint International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"A6YJTZ8C","conferencePaper","2015","Lucassen, Garm; Dalpiaz, Fabiano; van der Werf, Jan Martijn E.M.; Brinkkemper, Sjaak","Forging high-quality User Stories: Towards a discipline for Agile Requirements","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","10.1109/RE.2015.7320415","","User stories are a widely used notation for formulating requirements in agile development projects. Despite their popularity in industry, little to no academic work is available on assessing their quality. The few existing approaches are too generic or employ highly qualitative metrics. We propose the Quality User Story Framework, consisting of 14 quality criteria that user story writers should strive to conform to. Additionally, we introduce the conceptual model of a user story, which we rely on to design the AQUSA software tool. AQUSA aids requirements engineers in turning raw user stories into higher-quality ones by exposing defects and deviations from good practice in user stories. We evaluate our work by applying the framework and a prototype implementation to three user story sets from industry.","2015-08","2023-05-03 15:24:51","2023-05-03 15:24:51","","126-135","","","","","","Forging high-quality User Stories","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\4FC7HZI6\Lucassen et al. - 2015 - Forging high-quality User Stories Towards a disci.pdf","","","requirements engineering; Databases; Software; Unified modeling language; AQUSA; Natural language processing; User stories; Estimation; NLP; QUS Framework; requirements quality; Semantics; Syntactics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE 23rd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"8EE2D3W4","journalArticle","","Peeters, Johan","Agile Security Requirements Engineering","","","","","","Agile processes have been deemed unsuitable for security sensitive software development as the rigors of assurance are seen to conflict with the lightweight and informal nature of agile processes. However, such apparently conflicting demands may be reconciled by introducing the new notion of abuser stories in the requirements domain. These extend the wellestablished concept of user stories to achieve security requirements traceability and thus open the door to excellent security assurance, precisely because of their informal and lightweight nature.","","2023-05-03 15:24:56","2023-05-03 15:24:56","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\QC8F9TV9\Peeters - Agile Security Requirements Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GTF38LE6","conferencePaper","2006","Creighton, Oliver; Ott, Martin; Bruegge, Bernd","Software Cinema-Video-based Requirements Engineering","14th IEEE International Requirements Engineering Conference (RE'06)","","","10.1109/RE.2006.59","","The dialogue between end-user and developer presents several challenges in requirements development. One issue is the gap between the conceptual models of end-users and formal specification/analysis models of developers. This paper presents a novel technique for the video analysis of scenarios, relating the use of video-based requirements to process models of software development. It uses a knowledge model-an RDF graph-based on a semiotic interpretation of film language, which allows mapping conceptual into formal models. It can be queried with RDQL, a query language for RDF. The technique has been implemented with a tool which lets the analyst annotate objects as well as spatial or temporal relationships in the video, to represent the conceptual model. The video can be arranged in a scenario graph effectively representing a multi-path video. It can be viewed in linear time order to facilitate the review of individual scenarios by end-users. Each multi-path scene from the conceptual model is mapped to a UML use case in the formal model. A UML sequence diagram can also be generated from the annotations, which shows the direct mapping of film language to UML. This sequence diagram can be edited by the analyst, refining the conceptual model to reflect deeper understanding of the application domain. The use of the software cinema technique is demonstrated with several prototypical applications. One example is a loan application scenario for a financial services consulting firm which acted as an end-user","2006-09","2023-05-03 15:25:12","2023-05-03 15:25:12","","109-118","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","14th IEEE International Requirements Engineering Conference (RE'06)","","","","","","","","","","","","","","",""
"GSWN6W4E","journalArticle","2007","Hanisch, Jo; Corbitt, Brian","Impediments to requirements engineering during global software development","European Journal of Information Systems","","0960-085X","10.1057/palgrave.ejis.3000723","https://doi.org/10.1057/palgrave.ejis.3000723","Developing software when team members are located in widely distributed geographic locations poses many challenges for developers, particularly during the requirements engineering (RE) phase. Using a case study of a large software development project with users located in the UK and software developers from an international software house based in New Zealand, the paper argues that while global RE using electronic communication media may be desirable in achieving economy of resources, social and cultural aspects of RE need to be considered so that lasting relationships with clients may be formed, and RE activities achieved. The main impediments to the process of RE during global software development are communication resulting from differences in shared meanings and context associated with the following: distribution of the clients and the development team; distribution of the development team; cultural differences between the clients and the development team; and cultural differences among the development team.","2007-12-01","2023-05-03 15:25:15","2023-05-03 15:25:15","2023-05-03 15:25:15","793-805","","6","16","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1057/palgrave.ejis.3000723","","","","","requirements engineering; global software development; global virtual teams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2Z955A5L","journalArticle","2017","Fernández, D. Méndez; Wagner, S.; Kalinowski, M.; Felderer, M.; Mafra, P.; Vetrò, A.; Conte, T.; Christiansson, M.-T.; Greer, D.; Lassenius, C.; Männistö, T.; Nayabi, M.; Oivo, M.; Penzenstadler, B.; Pfahl, D.; Prikladnicki, R.; Ruhe, G.; Schekelmann, A.; Sen, S.; Spinola, R.; Tuzcu, A.; de la Vara, J. L.; Wieringa, R.","Naming the pain in requirements engineering","Empirical Software Engineering","","1573-7616","10.1007/s10664-016-9451-7","https://doi.org/10.1007/s10664-016-9451-7","Requirements Engineering (RE) has received much attention in research and practice due to its importance to software project success. Its interdisciplinary nature, the dependency to the customer, and its inherent uncertainty still render the discipline difficult to investigate. This results in a lack of empirical data. These are necessary, however, to demonstrate which practically relevant RE problems exist and to what extent they matter. Motivated by this situation, we initiated the Naming the Pain in Requirements Engineering (NaPiRE) initiative which constitutes a globally distributed, bi-yearly replicated family of surveys on the status quo and problems in practical RE. In this article, we report on the qualitative analysis of data obtained from 228 companies working in 10 countries in various domains and we reveal which contemporary problems practitioners encounter. To this end, we analyse 21 problems derived from the literature with respect to their relevance and criticality in dependency to their context, and we complement this picture with a cause-effect analysis showing the causes and effects surrounding the most critical problems. Our results give us a better understanding of which problems exist and how they manifest themselves in practical environments. Thus, we provide a first step to ground contributions to RE on empirical observations which, until now, were dominated by conventional wisdom only.","2017-10-01","2023-05-03 15:25:23","2023-05-03 15:25:23","2023-05-03 15:25:23","2298-2338","","5","22","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\RNBIX3BS\Fernández et al. - 2017 - Naming the pain in requirements engineering.pdf","","","Requirements engineering; Survey research","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V2QS9SXY","conferencePaper","2013","Kropp, Martin; Meier, Andreas","Teaching agile software development at university level: Values, management, and craftsmanship","2013 26th International Conference on Software Engineering Education and Training (CSEE&T)","","","10.1109/CSEET.2013.6595249","","Agile methodologies have come a long way over the last decade. Several recent surveys show that agile methodologies like Scrum, Extreme Programming and, more recently, Kanban have been successfully adopted by many companies to develop their software. However, the same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled personnel. Although teaching agile software development has drawn some attention in recent research and has been discussed in several papers, we do not yet seem to be able to “deliver” the appropriately skilled personnel. What is the reason for this, and more importantly, how can we improve the situation? In this paper we propose a more holistic approach for teaching agile software development, in which the required agile practices and values are not only integrated theoretically into our courses but also practically applied and repeated until they become a habit to our graduates. The proposed concept was realized in a new Software Engineering course held at Zurich University of Applied Sciences during 2012. The evaluation shows very encouraging results, but also leaves some challenges and problems to be solved.","2013-05","2023-05-03 15:25:27","2023-05-03 15:25:27","","179-188","","","","","","Teaching agile software development at university level","","","","","","","","","","","","IEEE Xplore","","ISSN: 2377-570X","","","","","Programming; Documentation; Software engineering; Software; Companies; Educational institutions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 26th International Conference on Software Engineering Education and Training (CSEE&T)","","","","","","","","","","","","","","",""
"Y6SRHI6Z","journalArticle","2009","Patel, Chetankumar; Ramachandran, Muthu","Agile Maturity Model (AMM): A Software Process Improvement framework for Agile Software Development Practices","","","","","","Agile software development methodologies have introduced best practices into software development. However we need to adopt and monitor those practices continuously to maximize its benefits. Our research has focused on adaptability, suitability and software maturity model called Agile Maturity Model (AMM) for agile software development environments. This paper introduces a process of adaptability assessment, suitability assessment, and improvement framework for assessing and improving agile best practices. We have also developed a web based automated tool support to assess adaptability, suitability, and improvement for agile practices.","2009","2023-05-03 15:25:34","2023-05-03 15:25:34","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\H6ZDCDGF\Patel and Ramachandran - 2009 - Agile Maturity Model (AMM) A Software Process Imp.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T9UHASW2","book","2012","Chemuturi, Murali","Requirements Engineering and Management for Software Development Projects","","978-1-4614-5376-5","","","","Requirements Engineering and Management for Software Development Projects presents a complete guide on requirements for software development including engineering, computer science and management activities. It is the first book to cover all aspects of requirements management in software development projects. This book introduces the understanding of the requirements, elicitation and gathering, requirements analysis, verification and validation of the requirements, establishment of requirements, different methodologies in brief, requirements traceability and change management among other topics. The best practices, pitfalls, and metrics used for efficient software requirements management are also covered. Intended for the professional market, including software engineers, programmers, designers and researchers, this book is also suitable for advanced-level students in computer science or engineering courses as a textbook or reference.","2012-09-27","2023-05-03 15:25:35","2023-05-03 15:25:35","","","275","","","","","","","","","","Springer Science & Business Media","","en","","","","","Google Books","","","","","https://books.google.co.in/books?id=K3SYPgrZ6-wC","","Computers / Software Development & Engineering / General; Computers / Software Development & Engineering / Systems Analysis & Design; Technology & Engineering / Engineering (General); Computers / Hardware / Cell Phones & Devices; Computers / Hardware / General; Computers / Information Technology; Computers / Operating Systems / General; Computers / Programming / General; Technology & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GPPFFYPP","journalArticle","2017","Alahyari, Hiva; Berntsson Svensson, Richard; Gorschek, Tony","A study of value in agile software development organizations","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2016.12.007","https://www.sciencedirect.com/science/article/pii/S0164121216302539","The Agile manifesto focuses on the delivery of valuable software. In Lean, the principles emphasise value, where every activity that does not add value is seen as waste. Despite the strong focus on value, and that the primary critical success factor for software intensive product development lies in the value domain, no empirical study has investigated specifically what value is. This paper presents an empirical study that investigates how value is interpreted and prioritised, and how value is assured and measured. Data was collected through semi-structured interviews with 23 participants from 14 agile software development organisations. The contribution of this study is fourfold. First, it examines how value is perceived amongst agile software development organisations. Second, it compares the perceptions and priorities of the perceived values by domains and roles. Third, it includes an examination of what practices are used to achieve value in industry, and what hinders the achievement of value. Fourth, it characterises what measurements are used to assure, and evaluate value-creation activities.","2017-03-01","2023-05-03 15:25:38","2023-05-03 15:25:38","2023-05-03 15:25:38","271-288","","","125","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","","","","Agile software development; Empirical; Value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZRW72IG4","journalArticle","2011","Mishra, Deepti; Mishra, Alok","Complex software project development: agile methods adoption","Journal of Software Maintenance and Evolution: Research and Practice","","1532-0618","10.1002/smr.528","https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.528","The Agile Software Development paradigm has become increasingly popular in the last few years, since it claims lower costs, better productivity, better quality and better business satisfaction. Supply chain management (SCM) is a complex software development project. Owing to its scope and uncertain, complex and unstable requirements, it is not possible to develop it with predictable software development process models. Agile methodologies are targeted toward such kinds of problems that involve change and uncertainty, and are adaptive rather than predictive. How an agile process is introduced will significantly impact the implementation success of the process change. The objective of this paper is to analyze the agile development methodologies and management approach used in developing a complex software project. This further demonstrates how to overcome risks and barriers in each development phase of such complex inventive software projects. It also provides a set of guidelines regarding how the agile methodologies can be adopted, combined and used in these kinds of complex software projects. These findings have implications for software engineers and managers developing software by agile methods. Copyright © 2011 John Wiley & Sons, Ltd.","2011","2023-05-03 15:25:43","2023-05-03 15:25:43","2023-05-03 15:25:43","549-564","","8","23","","","Complex software project development","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.528","","","","","Agile software development; Scrum; adaptive development; agile methods; dynamic systems development method (DSDM); eXtreme programming (XP); feature-driven development (FDD); supply chain management (SCM)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S5V4MR3I","journalArticle","2010","Cao, Lan; Ramesh, Balasubramaniam; Abdel-Hamid, Tarek","Modeling dynamics in agile software development","ACM Transactions on Management Information Systems","","2158-656X","10.1145/1877725.1877730","https://doi.org/10.1145/1877725.1877730","Changes in the business environment such as turbulent market forces, rapidly evolving system requirements, and advances in technology demand agility in the development of software systems. Though agile approaches have received wide attention, empirical research that evaluates their effectiveness and appropriateness is scarce. Further, research to-date has investigated individual practices in isolation rather than as an integrated system. Addressing these concerns, we develop a system dynamics simulation model that considers the complex interdependencies among the variety of practices used in agile development. The model is developed on the basis of an extensive review of the literature as well as quantitative and qualitative data collected from real projects in nine organizations. We present the structure of the model focusing on essential agile practices. The validity of the model is established based on extensive structural and behavioral validation tests. Insights gained from experimentation with the model answer important questions faced by development teams in implementing two unique practices used in agile development. The results suggest that due to refactoring, the cost of implementing changes to a system varies cyclically and increases during later phases of development. Delays in refactoring also increase costs and decrease development productivity. Also, the simulation shows that pair programming helps complete more tasks and at a lower cost. The systems dynamics model developed in this research can be used as a tool by IS organizations to understand and analyze the impacts of various agile development practices and project management strategies.","2010-12-10","2023-05-03 15:25:45","2023-05-03 15:25:45","2023-05-03 15:25:45","5:1–5:26","","1","1","","ACM Trans. Manage. Inf. Syst.","","","","","","","","","","","","","ACM Digital Library","","","","","","","Agile software development; process modeling; simulation; system dynamics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I5BXQ3IL","journalArticle","2005","Sommerville, I.","Integrated requirements engineering: a tutorial","IEEE Software","","1937-4194","10.1109/MS.2005.13","","This short tutorial introduces the fundamental activities of RE (requirements engineering) and discusses how it has evolved as a part of the software engineering process. However, rather than focusing on the established RE techniques, the author discusses how the changing nature of software engineering has led to the new challenges in RE. The author then introduces a number of new techniques that helps us to meet these challenges by integrating RE more closely with other systems implementation activities.","2005-01","2023-05-03 15:25:51","2023-05-03 15:25:51","","16-23","","1","22","","","Integrated requirements engineering","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","Software development management; Documentation; Software engineering; Banking; Object oriented modeling; Rail transportation; Railway engineering; Specification languages; Systems engineering and theory; Tutorial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3SA86UR6","conferencePaper","2007","Korkala, Mikko; Abrahamsson, Pekka","Communication in Distributed Agile Development: A Case Study","33rd EUROMICRO Conference on Software Engineering and Advanced Applications (EUROMICRO 2007)","","","10.1109/EUROMICRO.2007.23","","Distributed software development is an increasingly important development approach for software companies as it brings tempting opportunities. Distributed development is already burdened with several problems and agile methods bring further challenges in the form of their reliance on verbal communication and volatile requirements. There is little empirical knowledge on distributed agile software development. We conducted two distributed agile software development case studies and compared our findings against existing recommendations about communication in distributed agile development. Our findings along with existing literature conclude that presented recommendations are worthwhile considering in distributed agile development, but with some caution. Our empirically based findings indicate that the role of a well-defined customer is the key recommendation. The lack of a well-defined customer able to meet responsibilities, as well as volatile requirements and inefficient communication, can cause severe problems even in small-scale distributed agile software development projects. Discussed recommendations are complemented with an additional recommendation.","2007-08","2023-05-03 15:25:53","2023-05-03 15:25:53","","203-210","","","","","","Communication in Distributed Agile Development","","","","","","","","","","","","IEEE Xplore","","ISSN: 2376-9505","","","","","Programming; Software development management; Software quality; Collaboration; Costs; Cities and towns; Communication effectiveness; Cultural differences; Software tools; Teleconferencing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","33rd EUROMICRO Conference on Software Engineering and Advanced Applications (EUROMICRO 2007)","","","","","","","","","","","","","","",""
"FJGEACBI","book","2010","Leffingwell, Dean","Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise","","978-0-321-68540-7","","","","“We need better approaches to understanding and managing software requirements, and Dean provides them in this book. He draws ideas from three very useful intellectual pools: classical management practices, Agile methods, and lean product development. By combining the strengths of these three approaches, he has produced something that works better than any one in isolation.”  –From the Foreword by Don Reinertsen, President of Reinertsen & Associates; author of Managing the Design Factory; and leading expert on rapid product development  Effective requirements discovery and analysis is a critical best practice for serious application development. Until now, however, requirements and Agile methods have rarely coexisted peacefully. For many enterprises considering Agile approaches, the absence of effective and scalable Agile requirements processes has been a showstopper for Agile adoption. In   Agile Software Requirements,   Dean Leffingwell shows exactly how to create effective requirements in Agile environments.    Part I presents the “big picture” of Agile requirements in the enterprise, and describes an overall process model for Agile requirements at the project team, program, and portfolio levels   Part II describes a simple and lightweight, yet comprehensive model that Agile project teams can use to manage requirements   Part III shows how to develop Agile requirements for complex systems that require the cooperation of multiple teams   Part IV guides enterprises in developing Agile requirements for ever-larger “systems of systems,” application suites, and product portfolios   This book will help you leverage the benefits of Agile without sacrificing the value of effective requirements discovery and analysis. You’ll find proven solutions you can apply right now–whether you’re a software developer or tester, executive, project/program manager, architect, or team leader.","2010-12-27","2023-05-03 15:29:20","2023-05-03 15:29:20","","","562","","","","","Agile Software Requirements","","","","","Addison-Wesley Professional","","en","","","","","Google Books","","Google-Books-ID: pTExbNmZwZUC","","","https://books.google.co.in/books?id=pTExbNmZwZUC","","Computers / Software Development & Engineering / General","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DXICVCW4","conferencePaper","2012","Janes, Andrea A.; Succi, Giancarlo","The dark side of agile software development","Proceedings of the ACM international symposium on New ideas, new paradigms, and reflections on programming and software","978-1-4503-1562-3","","10.1145/2384592.2384612","https://doi.org/10.1145/2384592.2384612","We believe, that like most innovations, Agile has followed the Gartner Hype Cycle and it has now reached the Trough of Disillusionment, where it is currently stuck. Moreover, we believe this is due to a ""guru phenomenon."" However, we think that Agile can make a step forward. Our experience lead us to the conviction that through the application of a suitable quality improvement paradigm Agile will be able to reach what Gartner's experts call the Slope of Enlightenment and eventually the Plateau of Productivity.","2012-10-19","2023-05-03 15:29:23","2023-05-03 15:29:23","2023-05-03","215–228","","","","","","","Onward! 2012","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","agile software development; hype cycle; quality improvement paradigm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DV2TB3MP","conferencePaper","2017","Alsaqaf, Wasim; Daneva, Maya; Wieringa, Roel","Quality Requirements in Large-Scale Distributed Agile Projects – A Systematic Literature Review","Requirements Engineering: Foundation for Software Quality","978-3-319-54045-0","","10.1007/978-3-319-54045-0_17","","Context and Motivation: Agile development methods have become increasingly popular in the last years. However, these methods hardly pay attention to quality requirements (QRs), which could undermine the profits of fast delivery by introducing high rework efforts later on. This risk is high especially in agile large-scale distributed settings. Question/problem: Although several publications reported on the insufficient attention to quality requirements in agile methods, still little is known about agile requirements engineering practices and their impact on quality requirements in large-scale distributed settings. However, companies increasingly use agile methods in those settings, where the negative impact of ignoring quality requirements is large. Hence, the goal of this study is to identify the challenges in the engineering of quality requirements in large-scale distributed agile projects that have been researched so far, the agile practices that have contributed to the emergence of these challenges, and the proposed solutions. Principle ideas/results: Following an evidence-based research method, we examined 60 papers on quality requirements in agile. We found that, while there are multiple proposals to engineer quality requirements in agile, none of those has been tried out in real-life settings. Evaluating scalability of these proposals, therefore, is a priority for future research. Contribution: This paper identified 12 challenges in agile projects that harm the quality requirements. Besides, we identified and evaluated 13 proposals for dealing with quality requirements in agile projects, along with implications for practice and research.","2017","2023-05-03 15:29:28","2023-05-03 15:29:28","","219-234","","","","","","","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Systematic literature review; Agile requirements engineering; Large-scale distributed agile projects; Non-functional requirements; Quality requirements","Grünbacher, Paul; Perini, Anna","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"994XHRQP","journalArticle","2020","Alsaqqa, Samar; Sawalha, Samer; Abdel-Nabi, Heba","Agile Software Development: Methodologies and Trends","International Journal of Interactive Mobile Technologies (iJIM)","","1865-7923","10.3991/ijim.v14i11.13269","https://online-journals.org/index.php/i-jim/article/view/13269","Software engineering is a discipline that undergone many improvements that aims to keep up with the new advancements in technologies and the modern business requirements through developing effective approaches to reach the final software product, agile software development is one of these successful approaches. Agile software development is a lightweight approach that was proposed to overcome the convolutional development methods’ limitations and to reduce the overhead and the cost while providing flexibility to adopt the changes in requirements at any stage, this is done by managing the tasks and their coordination through a certain set of values and principles. In this work, a comprehensive review that outlines the main agile values and principles, and states the key differences that distinguish agile methods over the traditional ones are presented. Then a discussion of the most popular agile methodologies; their life cycles, their roles, and their advantages and disadvantages are outlined. The recent state of art trends that adopts agile development especially in cloud computing, big data, and coordination are also explored. And finally, this work highlights how to choose the best suitable agile methodology that must be selected according to the task at hand, how sensitive the product is and the organization structure.","2020-07-10","2023-05-03 15:29:35","2023-05-03 15:29:35","2023-05-03 15:29:35","246","","11","14","","Int. J. Interact. Mob. Technol.","Agile Software Development","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\KQJ7CG7R\Alsaqqa et al. - 2020 - Agile Software Development Methodologies and Tren.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R9SKJVIK","conferencePaper","2019","Belani, Hrvoje; Vukovic, Marin; Car, Željka","Requirements Engineering Challenges in Building AI-Based Complex Systems","2019 IEEE 27th International Requirements Engineering Conference Workshops (REW)","","","10.1109/REW.2019.00051","","This paper identifies and tackles the challenges of the requirements engineering discipline when applied to development of AI-based complex systems. Due to their complex behaviour, there is an immanent need for a tailored development process for such systems. However, there is still no widely used and specifically tailored process in place to effectively and efficiently deal with requirements suitable for specifying a software solution that uses machine learning. By analysing the related work from software engineering and artificial intelligence fields, potential contributions have been recognized from agent-based software engineering and goal-oriented requirements engineering research, as well as examples from large product development companies. The challenges have been discussed, with proposals given how and when to tackle them. RE4AI taxonomy has also been outlined, to inform the tailoring of development process.","2019-09","2023-05-03 15:29:36","2023-05-03 15:29:36","","252-255","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\QH3DE2NP\Belani et al. - 2019 - Requirements Engineering Challenges in Building AI.pdf","","","Software; Adaptation models; Analytical models; Artificial intelligence; Complex systems; Data models; requirements-engineering,-software-development,-artificial-intelligence,-complex-systems,-data-science,-machine-learning,-deep-learning,-development-process; Taxonomy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2019 IEEE 27th International Requirements Engineering Conference Workshops (REW)","","","","","","","","","","","","","","",""
"JAR7BKBJ","conferencePaper","2007","Livermore, Jeffrey A.","Factors that impact implementing an agile software development methodology","Proceedings 2007 IEEE SoutheastCon","","","10.1109/SECON.2007.342860","","The Internet economy has altered the rules of software engineering. Traditional development methodologies are too cumbersome to meet the rapidly changing requirements and short product cycles demanded by business. To meet these changing requirements, software developers have developed agile software development methodologies (SDMs) utilizing iterative development, prototyping, and templates. This research project investigated agile SDM implementation using an online survey sent to practitioners worldwide. This survey data were used to identify factors related to agile SDM implementation. Factors that included training, management involvement, access to external resources, and corporate size were found to impact implementation of an agile software development methodology. Factors such as using models, having an implementation plan, collocating the development team, and developing software for Internet or intranet use did not impact the implementation of an agile software development methodology. Several of the factors that impact the implementation of an agile development methodology are under the control of management. Organizations considering the implementation of an agile methodology may wish to manipulate some of these factors to increase the opportunities for success of their methodology.","2007-03","2023-05-03 15:29:39","2023-05-03 15:29:39","","82-86","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1558-058X","","","","","Programming; Software development management; Software engineering; Educational institutions; Internet; Testing; Iterative methods; Management training; Resource management; Software prototyping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings 2007 IEEE SoutheastCon","","","","","","","","","","","","","","",""
"FMXHLSYT","book","2013","Babar, Muhammad Ali; Brown, Alan W.; Mistrik, Ivan","Agile Software Architecture: Aligning Agile Processes and Software Architectures","","978-0-12-407885-7","","","","Agile software development approaches have had significant impact on industrial software development practices. Today, agile software development has penetrated to most IT companies across the globe, with an intention to increase quality, productivity, and profitability. Comprehensive knowledge is needed to understand the architectural challenges involved in adopting and using agile approaches and industrial practices to deal with the development of large, architecturally challenging systems in an agile way.  Agile Software Architecture focuses on gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox. Readers will learn how agile and architectural cultures can co-exist and support each other according to the context. Moreover, this book will also provide useful leads for future research in architecture and agile to bridge such gaps by developing appropriate approaches that incorporate architecturally sound practices in agile methods. Presents a consolidated view of the state-of-art and state-of-practice as well as the newest research findings  Identifies gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox  Explains whether or not and how agile and architectural cultures can co-exist and support each other depending upon the context  Provides useful leads for future research in both architecture and agile to bridge such gaps by developing appropriate approaches, which incorporate architecturally sound practices in agile methods","2013-11-27","2023-05-03 15:29:42","2023-05-03 15:29:42","","","433","","","","","Agile Software Architecture","","","","","Newnes","","en","","","","","Google Books","","Google-Books-ID: wJb9pG1gcUsC","","","https://books.google.co.in/books?id=wJb9pG1gcUsC","","Computers / Software Development & Engineering / General; Computers / Business & Productivity Software / Business Intelligence; Computers / Interactive & Multimedia","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X6QMB2MW","journalArticle","2015","Matharu, Gurpreet Singh; Mishra, Anju; Singh, Harmeet; Upadhyay, Priyanka","Empirical Study of Agile Software Development Methodologies: A Comparative Analysis","ACM SIGSOFT Software Engineering Notes","","0163-5948","10.1145/2693208.2693233","https://doi.org/10.1145/2693208.2693233","In today's software industry, technological prowess and ever-evolving customer requirements have led to more complex software demands. Agile based software development is increasingly being adopted by the software practitioners as it assures early software development and high quality software products. Also, it offers responsiveness to changes in user requirements, providing for their quick absorption during software development. In this paper, we elaborate the significance, benefits and increasing adoption of Agile methodologies in context of today's complex and evolving software demands. The main objective of this paper is to conduct an empirical study into the choice among the most popular Agile methodologies, Scrum, Extreme Programming and Kanban. Further, this paper provides for a comparative analysis among various agile software development methodologies. Our survey results reveal higher adoption of Scrum based development in present-day software industry as compared to Extreme Programming and Kanban methodologies.","2015-02-06","2023-05-03 15:29:46","2023-05-03 15:29:46","2023-05-03 15:29:46","1–6","","1","40","","SIGSOFT Softw. Eng. Notes","Empirical Study of Agile Software Development Methodologies","","","","","","","","","","","","ACM Digital Library","","","","","","","Scrum; Agile Methodologies; Extreme Programming (XP); Kanban; Lean; Software Development Life Cycle (SDLC)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4Z2E5EFZ","journalArticle","2013","Vetterli, Christophe; Brenner, Walter; Uebernickel, Falk; Petrie, Charles","From Palaces to Yurts: Why Requirements Engineering Needs Design Thinking","IEEE Internet Computing","","1941-0131","10.1109/MIC.2013.32","","Requirements engineering methods are geared for developing information systems and aren't what's needed for today's world of rapidly changing, app-enabled products. Today's apps are more and more an integrated and central part of service delivery of new products. Requirements engineering for this new world can greatly benefit from design thinking. Merging design thinking with requirements engineering will integrate the strongly diverging human-oriented perspective as well as the more technically driven perspective. Overall, this results in a holistic perspective to develop a more customer-oriented solution, incorporating functional and nonfunctional requirements.","2013-03","2023-05-03 15:29:49","2023-05-03 15:29:49","","91-94","","2","17","","","From Palaces to Yurts","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Internet Computing","","C:\Users\gabra\Zotero\storage\HASXPY6B\Vetterli et al. - 2013 - From Palaces to Yurts Why Requirements Engineerin.pdf","","","requirements engineering; apps; design thinking; paradigm shift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WP8Q7DH9","journalArticle","2003","Neill, C.J.; Laplante, P.A.","Requirements engineering: the state of the practice","IEEE Software","","1937-4194","10.1109/MS.2003.1241365","","Little contemporary data exists for document actual practices of software professionals for software requirements elicitation, requirements specification, document development, and specification validation. This exploratory survey and its quantitative results offer opportunities for further interpretation and comparison.","2003-11","2023-05-03 15:29:51","2023-05-03 15:29:51","","40-45","","6","20","","","Requirements engineering","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Software","","","","","Project management; Software quality; Prototypes; Educational institutions; Computer industry; Application software; Productivity; Data systems; Inspection; Mars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6ZF222MF","conferencePaper","2017","Darrin, M. Ann Garrison; Devereux, William S.","The Agile Manifesto, design thinking and systems engineering","2017 Annual IEEE International Systems Conference (SysCon)","","","10.1109/SYSCON.2017.7934765","","New and non-traditional movements in the engineering fields potentially have a positive impact on classical systems engineering models in terms of promoting innovation. These movements include off shoots of the Agile Manifesto such as Agile Software Engineering, Agile Software Systems Engineering and Agile Project Management, the rise and popularity of Design Thinking as practiced by IDEO and others and the success in new software programs of redefining basic engineering principles such as the Zen of Python. This paper discusses two of these movements and assesses the potential of incorporating them in generic system engineering steps. The viability and strength of systems engineering models (Classic V, Waterfall, Spiral and others) has been proven by their sheer longevity and the wealth of successful outcomes. However, today's external environment including what has been termed the technology explosion has dramatically truncated time to market requiring consideration of increasing agility in our process steps. It is agility that is the common thread in these new movements.","2017-04","2023-05-03 15:30:33","2023-05-03 15:30:33","","1-5","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2472-9647","","","","","Software; Prototypes; Complex systems; Agile Manifesto; Agile Systems Engineering; Design Thinking; Modeling; Robustness; Uncertainty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 Annual IEEE International Systems Conference (SysCon)","","","","","","","","","","","","","","",""
"54P6N7U2","journalArticle","2011","Vlaanderen, Kevin; Jansen, Slinger; Brinkkemper, Sjaak; Jaspers, Erik","The agile requirements refinery: Applying SCRUM principles to software product management","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.08.004","https://www.sciencedirect.com/science/article/pii/S0950584910001539","Context Although agile software development methods such as SCRUM and DSDM are gaining popularity, the consequences of applying agile principles to software product management have received little attention until now. Objective In this paper, this gap is filled by the introduction of a method for the application of SCRUM principles to software product management. Method A case study research approach is employed to describe and evaluate this method. Results This has resulted in the ‘agile requirements refinery’, an extension to the SCRUM process that enables product managers to cope with complex requirements in an agile development environment. A case study is presented to illustrate how agile methods can be applied to software product management. Conclusions The experiences of the case study company are provided as a set of lessons learned that will help others to apply agile principles to their software product management process.","2011-01-01","2023-05-03 15:30:33","2023-05-03 15:30:33","2023-05-03 15:30:33","58-70","","1","53","","Information and Software Technology","The agile requirements refinery","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements management; Agile development; Requirements refinery; SCRUM; Software product management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VQTCBMZX","conferencePaper","2012","Farid, Weam M.; Mitropoulos, Frank J.","NORMATIC: A visual tool for modeling Non-Functional Requirements in agile processes","2012 Proceedings of IEEE Southeastcon","","","10.1109/SECon.2012.6196989","","There is consensus in the research community that agile software development methodologies, such as Scrum, are becoming more and more popular in delivering quality Functional Requirements (FRs). However, agile methodologies have not adequately modeled Non-Functional Requirements (NFRs) and their potential solutions (operationalizations) with FRs in early development phases-let alone having tools to support such initiatives. This research proposes NORMATIC, a Java-based simulation tool for modeling non-functional requirements for semi-automatic agile processes. NORMATIC is the semi-automatic tool that supports the more general Non-Functional Requirements Modeling for Agile Processes (NORMAP) Methodology. Early results show that the tool can potentially help agile software development teams in reasoning about and visually modeling NFRs as first-class artifacts early on during requirements gathering and analysis phases. The tool can also aid project managers and Scrum teams in user story estimate and risk calculations as well as risk-driven planning and visualization of the proposed plans.","2012-03","2023-05-03 15:30:40","2023-05-03 15:30:40","","1-8","","","","","","NORMATIC","","","","","","","","","","","","IEEE Xplore","","ISSN: 1558-058X","","","","","Programming; Project management; Software; Planning; Scrum; Agile Choose Case; Agile Loose Case; Agile Requirements Modeling; Agile Use Case; Encryption; Measurement; NFRs; NORMAP Methodology; NORMATIC; Visualization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 Proceedings of IEEE Southeastcon","","","","","","","","","","","","","","",""
"ETERW2D3","conferencePaper","2009","Ktata, Oualid; Lévesque, Ghislain","Agile development: issues and avenues requiring a substantial enhancement of the business perspective in large projects","Proceedings of the 2nd Canadian Conference on Computer Science and Software Engineering","978-1-60558-401-0","","10.1145/1557626.1557636","https://doi.org/10.1145/1557626.1557636","Large-scale projects, are often delivering low value software to businesses due to stakeholders' misunderstanding. Evolutionary software development represents an alternative to plan-driven development in order to tackle today's turbulent environments. In agile development, a type of evolutionary development, the product owner (P.O.) who is the customer representative---real accountable role---is ill-equipped to identify and prioritize the stakeholders' most success-critical expectations and potential sources of business value. Furthermore, the tools he can use have their own scalability issues that question their underlying principles. Moreover, without a substantial involvement to take into account all stakeholders, software providers are more likely acting as commodity-utility providers than real business partners. In today's business context, there is a clear need for a value-driven development which embraces changes along with higher visibility and understanding of business transformations. The current problems of software crisis could be condensed in a twofold business perspective dilemma: Doing the right product and providing efficient guidance to the development project. Approaches based on goals have been successfully used in Requirements Engineering (RE) and IT governance to address issues similar to the current software crisis. Commonalities in motivations behind the use of goals in both domains can open new avenues for improving the business perspective in Scrum. A goal-value oriented approach is then proposed as a candidate approach to balance the stakeholders' needs and expectations for large-scale agile developments and ensure focus on delivering high value functionalities.","2009-05-19","2023-05-03 15:30:41","2023-05-03 15:30:41","2023-05-03","59–66","","","","","","Agile development","C3S2E '09","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements engineering; agile development; decision making; goal oriented approaches; project management; scrum and business modeling; software valuation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P39BBZTE","book","2005","Pressman, Roger S.","Software Engineering: A Practitioner's Approach","","978-0-07-301933-8","","","","Presents an engineering approach for the analysis, design, and testing of web applications. This book provides information on software tools, specific work flow for specific kinds of projects, and information on various topics. It includes resources for both instructors and students such as checklists, 700 categorized web references, and more.","2005","2023-05-03 15:30:49","2023-05-03 15:30:49","","","924","","","","","Software Engineering","","","","","Palgrave Macmillan","","en","","","","","Google Books","","Google-Books-ID: bL7QZHtWvaUC","","","https://books.google.co.in/books?id=bL7QZHtWvaUC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M5SEPGLF","journalArticle","2013","Khan, Muhammad Naeem Ahmed; Khalid, Muhammad; Haq, Sami Ul","Review of Requirements Management Issues in Software Development","International Journal of Modern Education and Computer Science","","20750161, 2075017X","10.5815/ijmecs.2013.01.03","http://www.mecs-press.org/ijmecs/ijmecs-v5-n1/v5n1-3.html","A requirement is a capability to which a product or service should conform to. A meticulous consideration to requirements engineering acts as a backbone of software projects. Ambiguous and unrealistic requirements are major source of failure in the software-intensive systems. Requirements engineering processes are complex as most of the requirements engineering documentation is written in natural languages which are less formal and often distract the designers and developers. Requirements management is a continuous process throughout the project lifecycle and relates to documenting, analyzing, tracing and prioritizing requirements and then finally controlling changes. The main issues related to requirements management are usually social, political and cultural. Software requirement engineers who gather the requirements generally consider that such issues are beyond the scope of their profession as they deem them within the project management ambit. In this study, we highlight the management issues that arise in the requirements engineering process and explore the possibilities to tackle them amicably. The study is supplemented with a critical review of the existing methodologies for resolving and managing software requirements.","2013-01-15","2023-05-03 15:30:52","2023-05-03 15:30:53","2023-05-03 15:30:52","21-27","","1","5","","IJMECS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\ECWEJV9D\Khan et al. - 2013 - Review of Requirements Management Issues in Softwa.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FXBL9ZWU","journalArticle","2010","Alves, Vander; Niu, Nan; Alves, Carina; Valença, George","Requirements engineering for software product lines: A systematic literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2010.03.014","https://www.sciencedirect.com/science/article/pii/S0950584910000625","Context Software product line engineering (SPLE) is a growing area showing promising results in research and practice. In order to foster its further development and acceptance in industry, it is necessary to assess the quality of the research so that proper evidence for adoption and validity are ensured. This holds in particular for requirements engineering (RE) within SPLE, where a growing number of approaches have been proposed. Objective This paper focuses on RE within SPLE and has the following goals: assess research quality, synthesize evidence to suggest important implications for practice, and identify research trends, open problems, and areas for improvement. Method A systematic literature review was conducted with three research questions and assessed 49 studies, dated from 1990 to 2009. Results The evidence for adoption of the methods is not mature, given the primary focus on toy examples. The proposed approaches still have serious limitations in terms of rigor, credibility, and validity of their findings. Additionally, most approaches still lack tool support addressing the heterogeneity and mostly textual nature of requirements formats as well as address only the proactive SPLE adoption strategy. Conclusions Further empirical studies should be performed with sufficient rigor to enhance the body of evidence in RE within SPLE. In this context, there is a clear need for conducting studies comparing alternative methods. In order to address scalability and popularization of the approaches, future research should be invested in tool support and in addressing combined SPLE adoption strategies.","2010-08-01","2023-05-03 15:30:52","2023-05-03 15:30:52","2023-05-03 15:30:52","806-820","","8","52","","Information and Software Technology","Requirements engineering for software product lines","","","","","","","en","","","","","ScienceDirect","","","","","","","Systematic literature review; Requirements engineering; Software product lines","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RA6FDXGJ","journalArticle","2017","Serna M., Edgar; Bachiller S., Oscar; Serna A., Alexei","Knowledge meaning and management in requirements engineering","International Journal of Information Management","","0268-4012","10.1016/j.ijinfomgt.2017.01.005","https://www.sciencedirect.com/science/article/pii/S0268401216306582","It is traditionally assumed that requirements specification, as a product of requirements engineering, has a high impact on the ensuing software development stages. Therefore, the knowledge management used to construct the requirements specification should be performed in a structured manner to discover, analyze and understand the data–information–knowledge chain, both tacit and explicit, that the interested parties possess. In this article, the results of a literature review are presented, seeking to answer the following questions: (1) What is the meaning of knowledge in requirements engineering? (2) What approaches are proposed to manage knowledge in requirements engineering? (3) Can the efficiency and the efficacy of knowledge management models be evidenced in requirements engineering? Thirty-six works were chosen for analysis out of a total 83 found in our search. The analysis showed that (1) knowledge has a central significance at this stage, but the authors have yet to agree on the best methods to impart and apply that knowledge; (2) no general framework has emerged as a validated approach to manage knowledge for requirements engineering; and (3) the evaluation marks for model efficiency and efficacy are low, consisting mostly of personal interpretations.","2017-06-01","2023-05-03 15:34:28","2023-05-03 15:34:28","2023-05-03 15:34:28","155-161","","3","37","","International Journal of Information Management","","","","","","","","en","","","","","ScienceDirect","","","","","","","Software engineering; Requirements elicitation; Knowledge management; Knowledge meaning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5CWM33UC","blogPost","","","Software Requirements Course | IEEE Computer Society","","","","","https://www.computer.org/product/education/software-requirements-course/","Empowering the People who Drive Technology","","2023-05-03 15:36:41","2023-05-03 15:36:41","2023-05-03 15:36:41","","","","","","","","","","","","","","en-US","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DAPFTSA2","conferencePaper","2005","Belani, H.; Pripuzic, K.; Kobas, K.","Implementing web-surveys for software requirements elicitation","Proceedings of the 8th International Conference on Telecommunications, 2005. ConTEL 2005.","978-953-184-081-1 978-953-184-084-2","","10.1109/CONTEL.2005.185931","http://ieeexplore.ieee.org/document/1458610/","This paper presents a practical approach to a survey as one of requirements elicitation techniques. A fundamental goal in requirements engineering is to discover the stakeholders’ real needs. Conducting a good survey enables acquiring the appropriate information from the stakeholders.","2005","2023-05-03 15:36:50","2023-05-03 15:36:51","2023-05-03 15:36:50","465-469","","","","","","","","","","","IEEE","Zagreb, Croatia","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\5TQMK8WP\Belani et al. - 2005 - Implementing web-surveys for software requirements.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2005 Proceedings of the 8th International Conference on Telecommunications","","","","","","","","","","","","","","",""
"44DFUBWI","conferencePaper","2008","Nakatani, Takako; Hori, Shouzo; Ubayashi, Naoyasu; Katamine, Keiichi; Hashimoto, Masaaki","A Case Study: Requirements Elicitation Processes throughout a Project","","978-0-7695-3309-4","","10.1109/RE.2008.46","https://www.computer.org/csdl/proceedings-article/re/2008/3309a241/12OmNBOlljL","Requirements changes sometimes cause a project to fail. A lot of projects now follow incremental development processes so that new requirements and requirements changes can be incorporated as soon as possible.These processes are called integrated requirements processes which integrate requirements processes with other development processes. We have investigated the requirements processes of a project from beginning to end, both quantitatively and qualitatively. Our focus is to clarify the types of requirements based on the components contained within a certain portion of the software architecture. Each type reveals its typical requirements processes through its rationale. The case studied is a system to manage the orders and services of a restaurant. In this paper, we introduce the case and describe the types of requirements processes. Then we discuss the reasons why we could not elicit all the requirements in the early development processes.","2008-09-01","2023-05-03 15:38:04","2023-05-03 15:38:04","2023-05-03 15:38:04","241-246","","","","","","A Case Study","","","","","IEEE Computer Society","","English","","","","","www.computer.org","","ISSN: 1090-705X","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 16th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"KM9GCPB4","conferencePaper","2006","Gall, Mark; Berenbach, Brian","Towards a Framework for Real Time Requirements Elicitation","","978-0-7695-2713-0","","10.1109/MERE.2006.6","https://www.computer.org/csdl/proceedings-article/mere/2006/27130004/12OmNCbCrTE","Eliciting complete and correct requirements is a major  challenge in software engineering and incorrect requirements  are a constant source of defects. It often happens that  requirements are either recorded only partially or not at all.  Also, commonly, the rationale behind the requirements is  not recorded or may be recorded, but is not accessible for  the developers who need this information to support the decision  making process when requirements change or need  clarification. Our proposed framework is designed to solve those problems  by using video to record the requirements elicitation  meetings and automatically extract important stakeholder  statements. Those statements are made available to the  project members as video clips by using an RE database  to access the statements and/or by the integration with the  Sysiphus system.","2006-09-01","2023-05-03 15:38:06","2023-05-03 15:38:06","2023-05-03 15:38:06","4-4","","","","","","","","","","","IEEE Computer Society","","English","","","","","www.computer.org","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2006 First International Workshop on Multimedia Requirements Engineering (MERE'06 - RE'06 Workshop)","","","","","","","","","","","","","","",""
"JVGM5IU6","journalArticle","","Khan, Shadab; Dulloo, Aruna B; Verma, Meghna","Systematic Review of Requirement Elicitation Techniques","","","","","","Requirement Elicitation is one of the important factors in developing any new application. Most of systems fail just because of wrong elicitation practice. A requirement may be defined as a demand or need. In software engineering, a requirement is a description of what a system should do. System may have dozen to thousands of requirements. Without the elicitation techniques it is impossible to find out requirements and the needs of the developing system. It provides base to the developer to construct a structure of proposed system keeping in view the wish list of stake holders. This research paper is based on understanding elicitation techniques and their usage in real time applications, by implementing the Elicitation techniques for knowing the needs of stakeholder so that system developer can get clear view of requirement for the developing system.","","2023-05-03 15:41:54","2023-05-03 15:41:54","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\9WF5Q474\Khan et al. - Systematic Review of Requirement Elicitation Techn.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U92WLC5K","journalArticle","2017","Wong, Lenis R; Mauricio, David S; Rodriguez, Glen D","A SYSTEMATIC LITERATURE REVIEW ABOUT SOFTWARE REQUIREMENTS ELICITATION","","","","","","Requirements Elicitation is recognized as one of the most important activity in software development process as it has direct impact on its success. Although there are many proposals for improving this task, still there are issues which have to be solved. This paper aims to identify the current status of the latest researches related to software requirements elicitation through general framework for literature review, in order to answer the following research questions: Q1) What aspects have been covered by different proposal of requirements elicitation? Q2) What activities of the requirements elicitation process have been covered? And Q3) What factors influence on requirements elicitation and how? A cross-analysis of the outcome was performed. One of the results showed that requirements elicitation process needs improvements.","2017","2023-05-03 15:42:04","2023-05-03 15:42:04","","","","","12","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\S759STE4\Wong et al. - 2017 - A SYSTEMATIC LITERATURE REVIEW ABOUT SOFTWARE REQU.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4EDY9S6I","journalArticle","2013","Meth, Hendrik; Brhel, Manuel; Maedche, Alexander","The state of the art in automated requirements elicitation","Information and Software Technology","","0950-5849","10.1016/j.infsof.2013.03.008","https://www.sciencedirect.com/science/article/pii/S0950584913000827","Context In large software development projects a huge number of unstructured text documents from various stakeholders becomes available and needs to be analyzed and transformed into structured requirements. This elicitation process is known to be time-consuming and error-prone when performed manually by a requirements engineer. Consequently, substantial research has been done to automate the process through a plethora of tools and technologies. Objective This paper aims to capture the current state of automated requirements elicitation and derive future research directions by identifying gaps in the existing body of knowledge and through relating existing works to each other. More specifically, we are investigating the following research question: What is the state of the art in research covering tool support for automated requirements elicitation from natural language documents? Method A systematic review of the literature in automated requirements elicitation is performed. Identified works are categorized using an analysis framework comprising tool categories, technological concepts and evaluation approaches. Furthermore, the identified papers are related to each other through citation analysis to trace the development of the research field. Results We identified, categorized and related 36 relevant publications. Summarizing the observations we made, we propose future research to (1) investigate alternative elicitation paradigms going beyond a pure automation approach (2) compare the effects of different types of knowledge on elicitation results (3) apply comparative evaluation methods and multi-dimensional evaluation measures and (4) strive for a closer integration of research activities across the sub-fields of automatic requirements elicitation. Conclusion Through the results of our paper, we intend to contribute to the Requirements Engineering body of knowledge by (1) conceptualizing an analysis framework for works in the area of automated requirements elicitation, going beyond former classifications (2) providing an extensive overview and categorization of existing works in this area (3) formulating concise directions for future research.","2013-10-01","2023-05-03 15:42:05","2023-05-03 15:42:05","2023-05-03 15:42:03","1695-1709","","10","55","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements Engineering; Automation; Requirements Elicitation; Requirements Reuse; Systematic Review","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5XP8SN5V","report","","","Issues in Requirements Elicitation","","","","","https://apps.dtic.mil/sti/citations/ADA258932","There are many problems associated with requirements engineering, including problems in defining the system scope, problems in fostering understanding among the different communities affected by the development of a given system, and problems in dealing with the volatile nature of requirements. These problems may lead to poor requirements and the cancellation of system development, or else the development of a system that is later judged unsatisfactory or unacceptable, has high maintenance costs, or undergoes frequent changes. By improving requirements elicitation, the requirements engineering process can be improved, resulting in enhanced system requirements and potentially a much better system. Requirements engineering can be decomposed into the activ- ities of requirements elicitation, specification, and validation. Most of the requirements techniques and tools today focus on specification, i.e., the representation of the requirements. This report concentrates instead on elicitation concerns, those problems with requirements engineering that are not adequately addressed by specification techniques. An elicitation methodology is proposed to handle these concerns. This new elicitation methodology strives to incorporate the advantages of existing elicitation techniques while comprehensively addressing the activities performed during requirements elicitation. These activities include fact-finding, requirements gathering, evaluation and rationalization, prioritization, and integration. Taken by themselves, existing elicitation techniques are lacking in one or more of these areas.","","2023-05-03 15:42:10","2023-05-03 15:42:10","2023-05-03 15:42:11","","","","","","","","","","","","","","en","","","","","apps.dtic.mil","","Section: Technical Reports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZB2X677X","conferencePaper","2003","Hickey, A.M.; Davis, A.M.","Requirements elicitation and elicitation technique selection: model for two knowledge-intensive software development processes","36th Annual Hawaii International Conference on System Sciences, 2003. Proceedings of the","","","10.1109/HICSS.2003.1174229","","By its very nature, software development consists of many knowledge-intensive processes. One of the most difficult to model, however, is requirements elicitation. This paper presents a mathematical model of the requirements elicitation process that clearly shows the critical role of knowledge in its performance. One meta-process of requirements elicitation, selection of an appropriate elicitation technique, is also captured in the model. The values of this model are: (1) improved understanding of what needs to be performed during elicitation helps analysts improve their elicitation efforts, (2) improved understanding of how elicitation techniques are selected helps less experienced analysts be as successful as more experienced analysts, and (3) as we improve our ability to perform elicitation, we improve the likelihood that the systems we create meet their intended customers' needs. Many papers have been written that promulgate specific elicitation methods. A few have been written that model elicitation in general. However, none have yet to model elicitation in a way that makes clear the critical role played by knowledge. This paper's model captures the critical roles played by knowledge in both elicitation and elicitation technique selection.","2003-01","2023-05-03 15:42:21","2023-05-03 15:42:21","","10 pp.-","","","","","","Requirements elicitation and elicitation technique selection","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Documentation; Software systems; Knowledge based systems; Mathematical model; Performance analysis; Springs; Writing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","36th Annual Hawaii International Conference on System Sciences, 2003. Proceedings of the","","","","","","","","","","","","","","",""
"MYLMH47V","journalArticle","2004","HICKEY, ANN M.; DAVIS, ALAN M.","A Unified Model of Requirements Elicitation","Journal of Management Information Systems","","0742-1222","10.1080/07421222.2004.11045786","https://doi.org/10.1080/07421222.2004.11045786","Effective requirements elicitation is essential to the success of software development projects. Many papers have been written that promulgate specific elicitation methods. A few model elicitation in general. However, none have yet modeled elicitation in a way that makes clear the critical role played by situational knowledge. This paper presents a unified model of the requirements elicitation process that emphasizes the iterative nature of elicitation as it transforms the current state of the requirements and the situation to an improved understanding of the requirements and, potentially, a modified situation. One meta-process of requirements elicitation, selection of an appropriate elicitation technique, is also captured in the model. The values of this model are: (1) an improved understanding of elicitation helps analysts improve their elicitation efforts and (2) as we improve our ability to perform elicitation, we improve the likelihood that systems we create will meet their intended cus-tomers' needs.","2004-03-01","2023-05-03 15:42:28","2023-05-03 15:42:28","2023-05-03 15:42:28","65-84","","4","20","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Routledge _eprint: https://doi.org/10.1080/07421222.2004.11045786","","","","","requirements analysis; requirements elicitation; systems analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZDA93RM4","book","2005","Zowghi, D.; Coulin, C.","Requirements elicitation: A survey of techniques, approaches, and tools","","978-3-540-25043-2","","","https://opus.lib.uts.edu.au/handle/10453/11626","Requirements elicitation is the process of seeking, uncovering, acquiring, and elaborating requirements for computer based systems. It is generally understood that requirements are elicited rather than just captured or collected. This implies there are discovery, emergence, and development elements in the elicitation process. Requirements elicitation is a complex process involving many activities with a variety of available techniques, approaches, and tools for performing them. The relative strengths and weaknesses of these determine when each is appropriate depending on the context and situation. The objectives of this chapter are to present a comprehensive survey of important aspects of the techniques, approaches, and tools for requirements elicitation, and examine the current issues, trends, and challenges faced by researchers and practitioners in this field. © 2005 Springer-Verlag Berlin Heidelberg.","2005-12-01","2023-05-03 15:42:33","2023-05-03 15:42:33","2023-05-03 15:42:33","","","","","","","Requirements elicitation","","","","","","","","","","","","opus.lib.uts.edu.au","","","","C:\Users\gabra\Zotero\storage\N5WQFL42\Zowghi and Coulin - 2005 - Requirements elicitation A survey of techniques, .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SY54UKX3","journalArticle","2014","Carrizo, Dante; Dieste, Oscar; Juristo, Natalia","Systematizing requirements elicitation technique selection","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.01.009","https://www.sciencedirect.com/science/article/pii/S0950584914000202","Context This research deals with requirements elicitation technique selection for software product requirements and the overselection of open interviews. Objectives This paper proposes and validates a framework to help requirements engineers select the most adequate elicitation techniques at any time. Method We have explored both the existing underlying theory and the results of empirical research to build the framework. Based on this, we have deduced and put together justified proposals about the framework components. We have also had to add information not found in theoretical or empirical sources. In these cases, we drew on our own experience and expertise. Results A new validated approach for requirements technique selection. This new approach selects techniques other than open interview, offers a wider range of possible techniques and captures more requirements information. Conclusions The framework is easily extensible and changeable. Whenever any theoretical or empirical evidence for an attribute, technique or adequacy value is unearthed, the information can be easily added to the framework.","2014-06-01","2023-05-03 15:42:37","2023-05-03 15:42:37","2023-05-03 15:42:37","644-669","","6","56","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\CRBWDXNB\Carrizo et al. - 2014 - Systematizing requirements elicitation technique s.pdf","","","Requirements elicitation; Context attributes; Elicitation techniques; Requirements process; Selecting techniques","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7CIPU3K9","journalArticle","2019","Ferreira Martins, Hugo; Carvalho de Oliveira Junior, Antônio; Dias Canedo, Edna; Dias Kosloski, Ricardo Ajax; Ávila Paldês, Roberto; Costa Oliveira, Edgard","Design Thinking: Challenges for Software Requirements Elicitation","Information","","2078-2489","10.3390/info10120371","https://www.mdpi.com/2078-2489/10/12/371","Agile methods fit well for software development teams in the requirements elicitation activities. It has brought challenges to organizations in adopting the existing traditional methods, as well as new ones. Design Thinking has been used as a requirements elicitation technique and immersion in the process areas, which brings the client closer to the software project team and enables the creation of better projects. With the use of data triangulation, this paper brings a literature review that collected the challenges in software requirements elicitation in agile methodologies and the use of Design Thinking. The result gave way to a case study in a Brazilian public organization project, via user workshop questionnaire with 20 items, applied during the study, in order to identify the practice of Design Thinking in this context. We propose here an overview of 13 studied challenges, from which eight presented strong evidence of contribution (stakeholders involvement, requirements definition and validation, schedule, planning, requirement details and prioritization, and interdependence), three presented partial evidence of contribution and two were not eligible for conclusions (non-functional requirements, use of artifacts, and change of requirements). The main output of this work is to present an analysis of the use of Design Thinking to see if it fits properly to be used as a means of solving the challenges of elicitation of software requirements when using agile methods.","2019-12","2023-05-03 15:42:46","2023-05-03 15:42:46","2023-05-03 15:42:46","371","","12","10","","","Design Thinking","","","","","","","en","http://creativecommons.org/licenses/by/3.0/","","","","www.mdpi.com","","Number: 12 Publisher: Multidisciplinary Digital Publishing Institute","","C:\Users\gabra\Zotero\storage\6G4MV7XG\Ferreira Martins et al. - 2019 - Design Thinking Challenges for Software Requireme.pdf","","","design thinking; requirements elicitation; agile methodology; software evaluation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T5EBJIZ6","conferencePaper","1998","Sommerville, I.; Sawyer, P.; Viller, S.","Viewpoints for requirements elicitation: a practical approach","Proceedings of IEEE International Symposium on Requirements Engineering: RE '98","","","10.1109/ICRE.1998.667811","","The paper introduces an approach to multi perspective requirements engineering (PREview) which has been designed for industrial use and discusses our practical experience in applying PREview. We have developed a flexible model of viewpoints and using examples from an industrial application, show how this can be used to organise system requirements derived from radically different sources. We show how 'concerns', which are key business drivers of the requirements elicitation process, may be used to elicit and validate system requirements. They are decomposed into questions which must be answered by system stakeholders. We briefly describe the process of using PREview which has been designed to allow incremental requirements elicitation. Finally, we discuss some practical considerations which emerged when the approach was applied in industry.","1998-04","2023-05-03 15:42:57","2023-05-03 15:42:57","","74-81","","","","","","Viewpoints for requirements elicitation","","","","","","","","","","","","IEEE Xplore","","","","","","","Design engineering; Collaborative work; Computer industry; Rail transportation; Railway engineering; Aerospace engineering; Aerospace industry; Job shop scheduling; Read only memory; Terminology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of IEEE International Symposium on Requirements Engineering: RE '98","","","","","","","","","","","","","","",""
"YNZ99GZ4","journalArticle","2012","Pacheco, Carla; Garcia, Ivan","A systematic literature review of stakeholder identification methods in requirements elicitation","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2012.04.075","https://www.sciencedirect.com/science/article/pii/S0164121212001288","This paper presents a systematic review of relevant published studies related to topics in Requirements Engineering, specifically, concerning stakeholder identification methods in requirements elicitation, dated from 1984 to 2011. Addressing four specific research questions, this systematic literature review shows the following evidence gathered from these studies: current status of stakeholder identification in software requirement elicitation, the best practices recommended for its performance, consequences of incorrect identification in requirements quality, and, aspects which need to be improved. Our findings suggest that the analyzed approaches still have serious limitations in terms of covering all aspects of stakeholder identification as an important part of requirements elicitation. However, through correctly identifying and understanding the stakeholders, it is possible to develop high quality software.","2012-09-01","2023-05-03 15:43:11","2023-05-03 15:43:11","2023-05-03 15:43:11","2171-2181","","9","85","","Journal of Systems and Software","","Selected papers from the 2011 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2011)","","","","","","en","","","","","ScienceDirect","","","","","","","Software engineering; Systematic review; Requirements engineering; Requirements elicitation; Stakeholder identification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"N3VQ82Q2","journalArticle","","Abbasi, Mateen Ahmed; Jabeen, Javeria; Hafeez, Yasir; Batool, Dur-e-Benish; Fareen, Naila","Assessment of Requirement Elicitation Tools and Techniques by Various Parameters","Software Engineering","","","","","Software development cycle is based on the software requirements. Requirement elicitation is first and most important activity in the requirement engineering. If the requirements are efficiently elicited and managed then the stakeholders application can be accomplished within time and budget. If the requirements are not complete, consistent and correct then projects fail because they not meet the user needs. Requirement is define as the needs of customer. Requirement elicitation techniques and tools are used for correct and complete requirement gathering. Many requirement elicitation techniques and tools are available. This study based on the understanding of requirement gathering techniques and tools. The paper also summarizes the comparison of the requirement elicitation techniques and software requirement tools. Comparison of requirement elicitation techniques and tools are based on the various parameters.","","2023-05-03 15:43:13","2023-05-03 15:43:13","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\EDPAQHZ5\Abbasi et al. - Assessment of Requirement Elicitation Tools and Te.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"A9QJ3F62","journalArticle","2010","Fuentes-Fernández, Rubén; Gómez-Sanz, Jorge J.; Pavón, Juan","Understanding the human context in requirements elicitation","Requirements Engineering","","1432-010X","10.1007/s00766-009-0087-7","https://doi.org/10.1007/s00766-009-0087-7","The human context within which a software system will operate is fundamental for its requirements. It may not appear to be very much related to the system, but it is very relevant in achieving its successful adoption. However, requirements engineers have usually a background in Software Engineering and are not trained to elicit this kind of information. This situation raises the need for analytical tools to deal with these features. These tools should enable collaborative work between requirements engineers, who use them in development, social practitioners, who provide the knowledge and processes underlying these tools, and the customers, who know the domain and intended application of the projects. The framework presented in this paper is based on the socio-psychological Activity Theory and its analysis of human contexts. It includes a repository of social properties and a process to perform this elicitation using it. The paper illustrates its application through a case study on the impact of a new system in the organization of a firm.","2010-09-01","2023-05-03 15:43:15","2023-05-03 15:43:15","2023-05-03 15:43:15","267-283","","3","15","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Activity Checklist; Activity Theory; Conflicts; Elicitation methods; Human context; Software psychology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YPWL8MNA","journalArticle","2012","Fernandes, João; Duarte, Diogo; Ribeiro, Claudia; Farinha, Carla; Pereira, João Madeiras; Silva, Miguel Mira da","iThink: A Game-Based Approach Towards Improving Collaboration and Participation in Requirement Elicitation","Procedia Computer Science","","1877-0509","10.1016/j.procs.2012.10.059","https://www.sciencedirect.com/science/article/pii/S1877050912008216","Requirements are the heart of Information Systems development because they determine how the system will operate. There- fore, requirements elicitation is a critical activity of the information systems development life cycle. Recognizing the im- portance of collaborative work and the huge difficulty of gathering stakeholders at the same time and place, researches have been proposing web collaborative tools to elicit requirements. In this article we present a game-based collaborative tool called iThink that aims at improving the participation in a requirement elicitation process. iThink takes advantage of the associa- tion between “gamification” concepts and the six hats of thinking method for collecting both new requirements and feedback about existing ones and for presenting the requirement elicitation process in a form of a collaborative game. Two case-studies, involving several stakeholders, are also presented with the purpose of evaluating the effectiveness and acceptance of this tool.","2012-01-01","2023-05-03 15:43:18","2023-05-03 15:43:18","2023-05-03 15:43:17","66-77","","","15","","Procedia Computer Science","iThink","4th International Conference on Games and Virtual Worlds for Serious Applications(VS-GAMES’12)","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7CZTKUX3\Fernandes et al. - 2012 - iThink A Game-Based Approach Towards Improving Co.pdf","","","Gamification; Requirements Elicitation; Colaboration; Serious Games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VR62DW37","journalArticle","2013","Sharma, Shreta; K. Pandey, S.","Revisiting Requirements Elicitation Techniques","International Journal of Computer Applications","","09758887","10.5120/13166-0889","http://research.ijcaonline.org/volume75/number12/pxc3890889.pdf","The importance of Requirements Engineering (RE) has been well recognized by the research community in the last decade. There is no doubt to say that requirements phase is the foundation of the entire Software Development Life Cycle (SDLC) on which the entire software is built. With the proper management of various activities falling under requirements phase, a project can deliver the right solution within the time and budget. Requirement elicitation, requirement specification, and requirement validation are the important stages to assure the quality of requirement documentations. Out of these, elicitation is the first major activity, which requires proper attention by Requirement Engineers and other related stakeholders. Literature reveals various elicitation techniques, which can be used for the purpose depending upon the nature of project/s. In this paper, an attempt is made to cover all the major elicitation techniques along with their significant aspects at one place. Such a review would enable the concerned stakeholders to understand and select the most appropriate technique to be used for their project/s.","2013-08-23","2023-05-03 15:43:24","2023-05-03 15:43:25","2023-05-03 15:43:24","35-39","","12","75","","IJCA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\TEMJMM7S\Sharma and K. Pandey - 2013 - Revisiting Requirements Elicitation Techniques.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"94JNYJMX","journalArticle","2015","Yousuf, Masooma; M.Asger, M.Asger","Comparison of Various Requirements Elicitation Techniques","International Journal of Computer Applications","","09758887","10.5120/20322-2408","http://research.ijcaonline.org/volume116/number4/pxc3902408.pdf","No requirements elicitation technique has capability of finding all of the software requirements so we have to use variety of techniques that will help us to cover all the requirements, resulting in more effective elicitation. Each technique has its features which makes it different from all other techniques and which make it suitable for a particular condition. The important thing is to use the most appropriate technique. Before using any technique we should have thorough knowledge of that technique. In this paper, we present an in-depth review of different requirements elicitation techniques. We also present Pros and Cons of different elicitation techniques.","2015-04-22","2023-05-03 15:43:33","2023-05-03 15:43:34","2023-05-03 15:43:33","8-15","","4","116","","IJCA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\2DJLZ94K\Yousuf and M.Asger - 2015 - Comparison of Various Requirements Elicitation Tec.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UF89YUET","journalArticle","2010","Chakraborty, Suranjan; Sarker, Saonee; Sarker, Suprateek","An Exploration into the Process of Requirements Elicitation: A Grounded Approach","Journal of the Association for Information Systems","","1536-9323","10.17705/1jais.00225","https://aisel.aisnet.org/jais/vol11/iss4/1","","2010-04-30","2023-05-03 15:43:43","2023-05-03 15:43:43","","","","4","11","","","An Exploration into the Process of Requirements Elicitation","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\V4MYEVSM\Chakraborty et al. - 2010 - An Exploration into the Process of Requirements El.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KRLCFAHK","bookSection","2004","Cysneiros, Luiz Marcio; Yu, Eric","Non-Functional Requirements Elicitation","Perspectives on Software Requirements","978-1-4615-0465-8","","","https://doi.org/10.1007/978-1-4615-0465-8_6","Software developers are constantly under pressure to deliver code on time and on budget. As a result, many projects focus on delivering functionalities at the expense of meeting non-functional requirements such as reliability, security, maintainability, portability, accuracy, among others. As software complexity grows and clients demand higher and higher quality software, non-functional properties can no longer be considered to be of secondary importance. Many systems fail or fall into disuse precisely because of inadequacies in these properties. These nonfunctional aspects have been treated as properties or attributes after the fact. While these properties have always been a concern among software engineering researchers, early work have tended to view them as properties or attributes of the finished software product to be evaluated and measured. Recent work offer the complementary view that they should be treated as requirements to be dealt with from the earliest stages of the software development process [6][7], and then throughout the entire life cycle.","2004","2023-05-03 15:43:51","2023-05-03 15:43:51","2023-05-03 15:43:51","115-138","","","","","","","The Springer International Series in Engineering and Computer Science","","","","Springer US","Boston, MA","en","","","","","Springer Link","","DOI: 10.1007/978-1-4615-0465-8_6","","","","","Behavioral Response; Functional Requirement; Requirement Engineer; Software Development Process; Software Requirement","do Prado Leite, Julio Cesar Sampaio; Doorn, Jorge Horacio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WPELTC84","journalArticle","2000","Thanasankit, Theerasak; Corbitt, Brian","Cultural Context and its Impact on Requirements Elicitation in Thailand","THE ELECTRONIC JOURNAL OF INFORMATION SYSTEMS IN DEVELOPING COUNTRIES","","1681-4835","10.1002/j.1681-4835.2000.tb00002.x","https://onlinelibrary.wiley.com/doi/abs/10.1002/j.1681-4835.2000.tb00002.x","This paper reports one part of an ethnographic study of how software analysts in Thai software houses undertake the requirements engineering process. In this paper the impact of Thai culture on the elicitation of requirements in information systems developed will be reported. The important role of requirements for software and systems development can be traced to the early study of software engineering. Software developers realised that errors during the requirements phase caused high cost in fixing systems and often led to rejection of systems (Laudon and Laudon 1995). This paper compares the nature of elicitation of requirements by systems analysts in Thailand with standard descriptions of elicitation in requirements engineering research. Detailed descriptions of elicitation processes and an evaluation of text are used to suggest that elicitation in Thailand is affected by different use of analytical and elicitation tools, different adaptation of those tools to the elicitation process, an inability to gain full access to all users where requirements can be identified, increased time needed to uncover requirements and an inability to develop requirements specification. This has important implications for Software Houses using western consultants or organisations employing consultants not familiar with Thai Culture. Understanding the nature of the impact of Thai culture on Requirements engineering processes should ensure that project failure due to poor understanding of requirements for systems would be lessened.","2000","2023-05-03 15:43:54","2023-05-03 15:43:54","2023-05-03 15:43:54","1-19","","1","1","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/j.1681-4835.2000.tb00002.x","","C:\Users\gabra\Zotero\storage\UETL9KYB\Thanasankit and Corbitt - 2000 - Cultural Context and its Impact on Requirements El.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BF2NTQ76","journalArticle","2018","Dar, Hafsa; Lali, M. Ikramullah; Ashraf, Humaira; Ramzan, Muhammad; Amjad, Tehmina; Shahzad, Basit","A Systematic Study on Software Requirements Elicitation Techniques and its Challenges in Mobile Application Development","IEEE Access","","2169-3536","10.1109/ACCESS.2018.2874981","","Software Requirements Engineering has paved its roots in both industry and academia, as today's complex systems are programmed to provide efficient user-centric functionalities. This also refers to the emergence of challenges in Requirements Elicitation techniques, approaches, and tools while performing them. Particularly, in the area of Requirements Engineering for software development, a number of techniques and approaches have been observed in literature but for mobile application development, which is different from the traditional software development, has not been discussed much in past studies. Short development cycle, device limitations, and less development time for mobile application development are some of the issues to which there is no `silver bullet' available. Therefore, the Requirement Analysts are in dire need of defined guidelines for Requirement Elicitation in mobile application development. With this study, we aim to provide a detailed overview of Requirements Elicitation techniques and its challenges. We have conducted a systematic literature review by surveying 4507 initial and 36 primary studies. A comprehensive set of 22 elicitation techniques were measured based on quality assessment criteria, including time and cost factors, resource effectiveness, and domain understanding. Furthermore, the challenges in Requirements Elicitation were also grouped into eight different categories based on their applicability. Our study effectively contributes in highlighting Software Requirements Elicitation Techniques and its challenges in mobile application development.","2018","2023-05-03 15:43:58","2023-05-03 15:43:58","","63859-63867","","","6","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Access","","C:\Users\gabra\Zotero\storage\DK5RGDDQ\Dar et al. - 2018 - A Systematic Study on Software Requirements Elicit.pdf","","","requirements engineering; Requirements engineering; Software; software engineering; Mobile communication; android application; Application programming interfaces; Guidelines; Mobile applications; Requirement elicitation; requirement gathering; software development life cycle; Stakeholders","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J89MNXJ8","conferencePaper","2010","Noll, John; Liu, Wei-Ming","Requirements elicitation in open source software development: a case study","Proceedings of the 3rd International Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development","978-1-60558-978-7","","10.1145/1833272.1833279","https://doi.org/10.1145/1833272.1833279","A growing body of empirical research has examined large, successful open source software projects such as the Linux kernel, Apache web server, and Mozilla web browser. Do these results extend to small open source efforts involving a handful of developers? A study of the OpenEMR open source electronic medical record project was conducted, with the goal of understanding how requirements are elicited, documented, agreed, and validated in a small open source software project The results show that the majority of features are asserted by developers, based on either their personal experience, or knowledge of users' needs. Relatively few were requested directly by users. Validation and documentation took the form of informal discussions via the project's developer mailing list. These results are consistent with an earlier study of the Firefox web browser, suggesting that there is a common open source requirements approach that is independent of project size.","2010-05-08","2023-05-03 15:47:15","2023-05-03 15:47:15","2023-05-03","35–40","","","","","","Requirements elicitation in open source software development","FLOSS '10","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\9M9HWIVV\Noll and Liu - 2010 - Requirements elicitation in open source software d.pdf","","","electronic health record; electronic medical record; open source software; software requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z5XMR347","journalArticle","2019","Aldave, Ainhoa; Vara, Juan M.; Granada, David; Marcos, Esperanza","Leveraging creativity in requirements elicitation within agile software development: A systematic literature review","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2019.110396","https://www.sciencedirect.com/science/article/pii/S0164121219301712","Agile approaches tend to focus solely on scoping and simplicity rather than on problem solving and discovery. This hampers the development of innovative solutions. Additionally, little has been said about how to capture and represent the real user needs. To fill this gap, some authors argue in favor of the application of “Creative thinking” for requirements elicitation within agile software development. This synergy between creativeness and agility has arisen as a new means of bringing innovation and flexibility to increasingly demanding software. The aim of the present study is therefore to employ a systematic review to investigate the state-of-the-art of those approaches that leverage creativity in requirements elicitation within Agile Software Development, as well as the benefits, limitations and strength of evidence of these approaches. The review was carried out by following the guidelines proposed by Dr. Kitchenham. The search strategy identified 1451 studies, 17 of which were eventually classified as primary studies. The selected studies contained 13 different and unique proposals. These approaches provide evidence that enhanced creativity in requirements elicitation can be successfully implemented in real software projects. We specifically observed that projects related to user interface development, such as those for mobile or web applications, are good candidates for the use of these approaches. We have also found that agile methodologies such as Scrum, Extreme Programming or methodologies based on rapid modelling are preferred when introducing creativity into requirements elicitation. Despite this being a new research field, there is a mixture of techniques, tools and processes that have already been and are currently being successfully tested in industry. Finally, we have found that, although creativity is an important ingredient with which to bring about innovation, it is not always sufficient to generate new requirements because this needs to be followed by user engagement and a specific context in which proper conditions, such as flexibility, time or resources, have to be met.","2019-11-01","2023-05-03 15:47:22","2023-05-03 15:47:22","2023-05-03 15:47:22","110396","","","157","","Journal of Systems and Software","Leveraging creativity in requirements elicitation within agile software development","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\IUV942PH\Aldave et al. - 2019 - Leveraging creativity in requirements elicitation .pdf","","","Systematic review; Requirements elicitation; Agile methodologies; Creative thinking; Software development; Software project management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GB9A4STN","journalArticle","2005","Razali, Rozilawati; Anwar, Fares","SELECTING THE RIGHT STAKEHOLDERS FOR REQUIREMENTS ELICITATION: A SYSTEMATIC APPROACH",". Vol.","","","","","Requirements elicitation is the most critical phase in software development as it captures the required functionality of a software system. The elicitation process is indeed resource intensive. It involves a number of dedicated stakeholders who are deliberately gathered to confer and stipulate software requirements. The effectiveness of the process is greatly influenced by the credibility and suitability of the stakeholders involved. Correct and complete requirements could only be achieved if they are gathered from the right stakeholders. Therefore, there is a need of systematic approach that could help in identifying and choosing the appropriate stakeholders. As stakeholder participation can be enormous, the approach should also embrace prioritization. This study addresses this issue by collating important elements that contribute to an effective selection of stakeholders for requirement elicitation purposes. The elements were identified through reviews of related work, which were analyzed by using content analysis. The elements were then integrated as a conceptual framework that consists of a step-by-step procedure. The framework can be used by practitioners to execute the selection process. To researchers, the study proposes several mechanisms to support the approach as a guide for future research.","2005","2023-05-03 15:47:23","2023-05-03 15:47:23","","","","","33","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\39GHRI2P\Razali and Anwar - 2005 - SELECTING THE RIGHT STAKEHOLDERS FOR REQUIREMENTS .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WCBEDWBS","journalArticle","2001","Browne, Glenn J.; Rogich, Michael B.","An Empirical Investigation of User Requirements Elicitation: Comparing the Effectiveness of Prompting Techniques","Journal of Management Information Systems","","0742-1222","10.1080/07421222.2001.11045665","https://doi.org/10.1080/07421222.2001.11045665","Eliciting requirements from users and other stakeholders is of central importance to information systems development. Despite this importance, surprisingly little research has measured the effectiveness of various requirements elicitation techniques. The present research first discusses theory relevant to information requirements determination in general and elicitation in particular.We then develop a model of the requirements elicitation process. This model and its underlying theory were then used to construct a new requirements elicitation prompting technique. To provide a context for testing the relative effectiveness of the new technique, two other questioning methodologies were also operationalized as prompting techniques: (1) the interrogatories technique, which involves asking ""who,"" ""what,"" ""when,"" ""where,"" ""how,"" and ""why""; questions; and (2) a semantic questioning scheme, which involves asking questions based on a theoretical model of knowledge structures. To measure the usefulness of the prompting techniques in eliciting requirements, a set of generic requirements categories was adapted from previous research to capture requirements evoked by users. The effectiveness of the three methods in eliciting requirements for a software application was then tested in an experiment with users. Results showed that the new prompting technique elicited a greater quantity of requirements from users than did the other two techniques. Implications of the findings for research and systems analysis practice are discussed.","2001-03-01","2023-05-03 15:47:26","2023-05-03 15:47:26","2023-05-03 15:47:25","223-249","","4","17","","","An Empirical Investigation of User Requirements Elicitation","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Routledge _eprint: https://doi.org/10.1080/07421222.2001.11045665","","","","","INFORMATION SYSTEMS DEVELOPMENT PROMPTING TECHNIQUES REQUIREMENTS ELICITATION SYSTEMS ANALYSIS","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WBM2KSJ2","journalArticle","2014","Iqbal, Tabbassum; Suaib, Mohammad","Requirement Elicitation Technique: -A Review Paper","International Journal of Computer & Mathematical Sciences","","","","","Requirement Elicitation is important for developing any new application. Due to wrong elicitation decision most of the system fails. It is impossible to find out requirements and the needs of the users without help of elicitation technique. The most common challenge for analysts during elicitation process is to ensure effective communication between analyst and the users. Most of the error comes in the system because of poor communication between user and analyst. This research paper is based on understanding elicitation techniques and their usage in real time applications, by implementing the Elicitation techniques in a new application. According to this research paper we cover the gap between analyst and the users by implementing requirement elicitation technique.","2014-12-01","2023-05-03 15:47:31","2023-05-03 15:47:31","","1","","","3","","International Journal of Computer & Mathematical Sciences","Requirement Elicitation Technique","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\JAIFD9FY\Iqbal and Suaib - 2014 - Requirement Elicitation Technique -A Review Paper.pdf; ","https://www.researchgate.net/profile/Mohammad-Suaib/publication/272944882_Requirement_Elicitation_Technique_-A_Review_Paper/links/54f412140cf2f9e34f08d5b2/Requirement-Elicitation-Technique-A-Review-Paper.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QIAFQYDR","journalArticle","","Tuunanen, Tuure","A New Perspective on Requirements Elicitation Methods","","","","","","We open a new area of discussion in requirements elicitation and we argue that a new category of end-users is emerging: wide-audience end-users (WAEU). We propose that current literature does not acknowledge the elicitation needs of WAEUs. To support our argument, we develop a framework consisting of two dimensions, reach and communication, in order to review the literature. Using this framework, we form a perspective on the state of research in the area, and determine that academia is moving in the right direction in the development of new elicitation methods. However, we argue that at the moment, no one method or technique presents an integrated solution. To fill this gap, we present three studies that enable us to argue that WAEUs are reachable, but that more work is needed in the field. We propose some suggestions on how this could be done, and identify three areas needing further research: selection of the participants, representation of requirements across stakeholders, and integration of risk in selecting the elicitation method.","","2023-05-03 15:47:33","2023-05-03 15:47:33","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\2T2F5ITJ\Tuunanen - A New Perspective on Requirements Elicitation Meth.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V5KAIHNY","journalArticle","1999","Durán Toro, Amador; Bernárdez Jiménez, Beatriz; Ruiz Cortés, Antonio; Toro Bonilla, Miguel","A Requirements Elicitation Approach Based in Templates and Patterns","","","","","https://idus.us.es/handle/11441/26374","One of the main problems of requirements elicitation is expressing customer requirements in a form that can be understood not only by requirements engineers but also by noncomputer professional customers and users. The usual choice for expressing elicited requirements is natural language, since it is frequently the only common language to all participants. Problems of natural language are well–known, but using more formal notations too early is a risky choice that can make requirements impossible to understand for customers and users. Moreover, requirements engineers do not usually have good writing skills, and sometimes semantically correct requirements, expressed in natural language, are not understood because of the way they are written. in this paper, we present requirements templates that can improve requirements elicitation and expression, and two kinds of patterns: linguistic patterns, which are very used sentences in natural language requirements descriptions that can be parameterized and integrated into templates, and requirements patterns, which are generic requirements templates that are found very often during the requirements elicitation process and that can be reused with some adaptation.","1999","2023-05-03 15:47:37","2023-05-03 15:47:37","2023-05-03 15:47:37","","","","","","","","","","","","","","eng","Atribución-NoComercial-SinDerivadas 4.0 España","","","","idus.us.es","","Accepted: 2015-06-29T14:55:33Z","","C:\Users\gabra\Zotero\storage\JXJIFK5A\Durán Toro et al. - 1999 - A Requirements Elicitation Approach Based in Templ.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WMIV2LWL","journalArticle","2018","Mishra, Deepti; Aydin, Seçil; Mishra, Alok; Ostrovska, Sofiya","Knowledge management in requirement elicitation: Situational methods view","Computer Standards & Interfaces","","0920-5489","10.1016/j.csi.2017.09.004","https://www.sciencedirect.com/science/article/pii/S092054891630229X","In small-scale software development organizations, software engineers are beginning to realize the significance of adapting software development methods according to project conditions. There is a requirement to proliferate this know-how to other developers, who may be facing the same settings/context, so that they too can benefit from others’ experiences. In this paper, the application of situational method engineering in requirements elicitation phase is investigated. A novel, simple and dynamic web-based tool, Situational Requirement Method System (SRMS), is developed which can aid in conception/formulation, repository, and elicitation/derivation of methods related with this stage. The proposed approach and tool are validated by distributing a questionnaire among software professionals working in large software companies, and making SRMS accessible to them. The results indicate that a majority of the participants finds SRMS useful and provides various suggestions to improve it.","2018-02-01","2023-05-03 15:47:43","2023-05-03 15:47:43","2023-05-03 15:47:43","49-61","","","56","","Computer Standards & Interfaces","Knowledge management in requirement elicitation","","","","","","","en","","","","","ScienceDirect","","","","","","","Knowledge management; Requirement elicitation; Requirement engineering; Situational method engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IHBL77LB","journalArticle","2015","Ghanbari, Hadi; Similä, Jouni; Markkula, Jouni","Utilizing online serious games to facilitate distributed requirements elicitation","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2015.07.017","https://www.sciencedirect.com/science/article/pii/S0164121215001491","Requirements elicitation is one of the most important and challenging activities in software development projects. A variety of challenges related to requirements elicitation are reported in the literature, of which the lack of proper communication and knowledge transfer between software stakeholders are among the most important. Communication and knowledge transfer are becoming even bigger challenges with the current increase in globally distributed software development projects due to the temporal, geographic, and sociocultural diversity among software stakeholders. In this study, we propose a new approach to requirements elicitation, which employs online serious games for gathering requirements from distributed software stakeholders. The feasibility and effectiveness of the proposed approach were evaluated in an empirical study with encouraging results. These results especially reveal that our suggested approach enables less-experienced individuals to identify a higher number of requirements. Our results also reveal that for the majority of subjects, especially individuals with less technical experience, this approach was a pleasant and easy way of participating in requirements elicitation. Based on these results we suggest that using online serious games not only enhances innovation and creativity among end-users but also facilitates collaboration and communication among software stakeholders. Implications for both research and practice are considered.","2015-11-01","2023-05-03 15:47:49","2023-05-03 15:47:49","2023-05-03 15:47:49","32-49","","","109","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\CK8MILLG\Ghanbari et al. - 2015 - Utilizing online serious games to facilitate distr.pdf","","","Global software development; Innovative requirements elicitation; Serious games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"37XRU6DY","journalArticle","","Zhang, Zheying","Effective Requirements Development - A Comparison of Requirements Elicitation techniques","","","","","","","","2023-05-03 15:47:51","2023-05-03 15:47:51","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\ZKF7QQ2P\Zhang - Effective Requirements Development - A Comparison .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6L9B39NB","journalArticle","1990","Holbrook, H.","A scenario-based methodology for conducting requirements elicitation","ACM SIGSOFT Software Engineering Notes","","0163-5948","10.1145/382294.382725","https://dl.acm.org/doi/10.1145/382294.382725","Requirements analysis is the process of identifying a user's needs and determining what to build in an a system. Within requirements analysis is the process of requirements elicitation in which tacit information about ""what to build"" is obtained from the user and his environment. Here, we will describe a methodology, dubbed Scenario Based Requirements Elicitation (SBRE), which structures the early interaction between users and designers in order to quickly develop a set of initial requirements. The methodology features the parallel development of requirements and a high-level design, the use of scenarios to communicate the behavior of a design, an evaluation function to assess the suitability of the design, and an issue base with which to maintain the issues that arise during the elicitation process.","1990-01-01","2023-05-03 15:47:53","2023-05-03 15:47:53","2023-05-03 15:47:53","95–104","","1","15","","SIGSOFT Softw. Eng. Notes","","","","","","","","","","","","","ACM Digital Library","","","","C:\Users\gabra\Zotero\storage\H4G3JY6Q\Holbrook - 1990 - A scenario-based methodology for conducting requir.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JHBK4YF4","journalArticle","2020","Saeeda, Hina; Dong, Junyu; Wang, Yong; Abid, Muhammmad Adil","A proposed framework for improved software requirements elicitation process in SCRUM: Implementation by a real-life Norway-based IT project","Journal of Software: Evolution and Process","","2047-7481","10.1002/smr.2247","https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.2247","Software requirement engineering (SRE) is the initial stage of the software engineering process and entails several challenges relating to the identification, implementation, evolution, and management of requirements for the development of software systems that meet the desired functionality quality standards. Agile software development (ASD) is a well-known software development process that follows a lightweight and adaptive methodology to support the incremental development of software systems. Since the ASD follows an adaptive procedure (ie, a flexible, nanostructured, and dynamic approach) of software development, it becomes challenging to perform SRE that follows a structured approach for managing software requirements throughout the life cycle of software development. The primary challenges for SRE, while pursuing an ASD, include, but are not limited to, identification of incomplete requirements, implementation of vague requirements, prioritization of secondary functional requirements, and compromise on users' involvement that negatively impacts the software system's functionality and quality. To overcome these challenges, some of the recent research efforts have focused on managing different phases of SRE during software development using the ASD. However, there is a lack of solutions that provide software engineers/practitioners with a solution. Besides, frameworks to effectively manage all the phases of SRE as per the needs of the ASD are needed. We propose a framework that unifies joint requirements document (JRD) and SCRUM to incrementally (a) identify, (b) implement, (c) evolve, and (d) manage system requirements throughout the software development cycle. We have used the action research method to qualitatively validate the proposed framework based on data and user requirements collected from a product-focused (multinational) Norway-based software company. The results of the validation are based on statistical analysis that reflects the usefulness of the proposed framework for SRE in ASD-based software engineering and development. Future research is the possible application of a machine learning approach (es) in the intended context for agile requirements elicitations.","2020","2023-05-03 15:47:56","2023-05-03 15:47:56","2023-05-03 15:47:56","e2247","","7","32","","","A proposed framework for improved software requirements elicitation process in SCRUM","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.2247","","","","","SCRUM; agile software engineering; joint requirements development; mind mapping; software requirement engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HU8NCQ7L","journalArticle","2019","Garcia, Ivan; Pacheco, Carla; León, Andrés; Calvo-Manzano, Jose A.","Experiences of using a game for improving learning in software requirements elicitation","Computer Applications in Engineering Education","","1099-0542","10.1002/cae.22072","https://onlinelibrary.wiley.com/doi/abs/10.1002/cae.22072","Many recent studies have demonstrated that the traditional methods used in teaching software requirements elicitation are ineffective because they frequently produce unskilled graduates who are inappropriately trained to apply their practical knowledge in the workplace. Therefore, the combination of traditional teaching approaches and modern learning tools has been used to better prepare undergraduate students. Biyubi is a game that has been developed to complement traditional teaching in order to facilitate the learning of requirements elicitation activities on an undergraduate Software Engineering course. Biyubi provides a simulated environment for students so that they can explore, analyze, and discover the wishes and needs of the correct stakeholders. This game has been tested and validated by undergraduate students from the NovaUniversitas University, Mexico. The use of Biyubi achieved an increase in the motivation, satisfaction, and learning experience of students in requirements elicitation. The game has the potential to better explain the proper use of a requirements elicitation technique while the technical skills of the students are also improved.","2019","2023-05-03 15:48:02","2023-05-03 15:48:02","2023-05-03 15:48:02","249-265","","1","27","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cae.22072","","C:\Users\gabra\Zotero\storage\Z8RD26ZW\Garcia et al. - 2019 - Experiences of using a game for improving learning.pdf","","","requirements elicitation; education; game; learning-by-doing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZD3ZESAL","journalArticle","2014","Ribeiro, Claudia; Farinha, Carla; Pereira, João; Mira da Silva, Miguel","Gamifying requirement elicitation: Practical implications and outcomes in improving stakeholders collaboration","Entertainment Computing","","1875-9521","10.1016/j.entcom.2014.04.002","https://www.sciencedirect.com/science/article/pii/S1875952114000135","The requirements engineering process is a key phase of the Information System development since it determines its functionalities and its operation. Before requirements can be analyzed, modeled, or specified they must be gathered through an elicitation process. Requirements elicitation is non-trivial because you can never be sure you get all requirements from the user or stakeholder by just asking them what the system should do. Requirements elicitation practices include interviews, questionnaires, user observation, workshops, brainstorming, use cases, role playing and prototyping. However, these common procedures are still prone to be ambiguous or incorrect which can lead the Information Systems to failure. It is consensual that one of the major problem of this activity relates to the communication and collaboration between different and distant stakeholders. Thus, recent studies have been proposing web collaborative tools to gather these stakeholders in order to elicit requirements. The paper aims to evaluate the effectiveness and acceptance of such a collaborative tool which was developed by using a gamification approach and the Six Thinking Hats method. The document also makes a discussion of the implication and outcomes of improving stakeholders collaboration.","2014-12-01","2023-05-03 15:48:05","2023-05-03 15:48:05","2023-05-03 15:48:04","335-345","","4","5","","Entertainment Computing","Gamifying requirement elicitation","","","","","","","en","","","","","ScienceDirect","","","","","","","Collaboration; Gamification; Requirements elicitation; Communication; Cooperation; Six Thinking Hats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T25K8U9Z","conferencePaper","2009","Castro-Herrera, Carlos; Duan, Chuan; Cleland-Huang, Jane; Mobasher, Bamshad","A recommender system for requirements elicitation in large-scale software projects","Proceedings of the 2009 ACM symposium on Applied Computing","978-1-60558-166-8","","10.1145/1529282.1529601","https://doi.org/10.1145/1529282.1529601","In large and complex software projects, the knowledge needed to elicit requirements and specify the functional and behavioral properties can be dispersed across many thousands of stakeholders. Unfortunately traditional requirements engineering techniques, which were primarily designed to support face-to-face meetings, do not scale well to handle the needs of larger projects. We therefore propose a semi-automated requirements elicitation framework which uses data-mining techniques and recommender system technologies to facilitate stakeholder collaboration in a large-scale, distributed project. Our proposed recommender model is a hybrid one designed to manage the placement of stakeholders into highly focused discussion forums, where they can work collaboratively to generate requirements. In our approach, statements of need are first gathered from the project stakeholders; unsupervised clustering techniques are then used to identify cohesive and finely-grained themes and a users' profile is constructed according to the interests of the stakeholders in each of these themes. This profile feeds information to a collaborative recommender, which predicts stakeholders' interests in additional forums. The validity and effectiveness of the proposed recommendation framework is evaluated through a series of experiments using feature requests from three software systems.","2009-03-08","2023-05-03 15:48:08","2023-05-03 15:48:08","2023-05-03","1419–1426","","","","","","","SAC '09","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","collaborative recommender systems; large-scale software engineering; requirements clustering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T2CKMDXK","journalArticle","2013","Azadegan, Aida; Papamichail, K. Nadia; Sampaio, Pedro","Applying collaborative process design to user requirements elicitation: A case study","Computers in Industry","","0166-3615","10.1016/j.compind.2013.05.001","https://www.sciencedirect.com/science/article/pii/S0166361513000961","User requirements play a central role in software development processes by bridging the needs of business to the software. In many cases stakeholders who have different perspectives and expectations about the future system need to collaborate to clarify, capture and uncover user requirements in an efficient and effective manner. Many industry experts have admitted that collaboration among stakeholders in a facilitated workshop, aimed at defining and articulating user requirements, is one of the most difficult tasks in software development. The aim of the research described in this paper is to present a process that can address the challenges of collaborative user requirements elicitation workshops. The process contains activities that correspond to a pattern of collaboration. Developed on a pattern-based architecture, the process is reusable and can be applied to similar user requirements elicitation workshops. To achieve this goal, the principles of Collaboration Engineering (CE) are applied to design collaborative processes that consist of ThinkLets, a set of facilitation scripts and process-building blocks, bundled together. The process is evaluated in practice by running facilitated workshops as well as by collecting experts’ comments and opinions. The results indicate that the approach is usable and useful. The paper concludes with further elaboration and discussions on research contribution and potential future work in the field.","2013-09-01","2023-05-03 15:49:09","2023-05-03 15:49:09","2023-05-03 15:49:09","798-812","","7","64","","Computers in Industry","Applying collaborative process design to user requirements elicitation","","","","","","","en","","","","","ScienceDirect","","","","","","","Requirements elicitation; Collaboration Engineering; Group facilitation; ThinkLet; Workshop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VCG2E6YG","conferencePaper","2011","Umber, Ashfa; Bajwa, Imran Sarwar; Asif Naeem, M.","NL-Based Automated Software Requirements Elicitation and Specification","Advances in Computing and Communications","978-3-642-22714-1","","10.1007/978-3-642-22714-1_4","","This paper presents a novel approach to automate the process of software requirements elicitation and specification. The software requirements elicitation is perhaps the most important phase of software development as a small error at this stage can result in absurd software designs and implementations. The automation of the initial phase (such as requirement elicitation) phase can also contribute to a long standing challenge of automated software development. The presented approach is based on Semantic of Business Vocabulary and Rules (SBVR), an OMG’s recent standard. We have also developed a prototype tool SR-Elicitor (an Eclipse plugin), which can be used by software engineers to record and automatically transform the natural language software requirements to SBVR software requirements specification. The major contribution of the presented research is to demonstrate the potential of SBVR based approach, implemented in a prototype tool, proposed to improve the process of requirements elicitation and specification.","2011","2023-05-03 15:49:12","2023-05-03 15:49:12","","30-39","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\YCJHY4AJ\Umber et al. - 2011 - NL-Based Automated Software Requirements Elicitati.pdf","","","Requirements Elicitation; Natural Language Processing; Requirement Engineering; Requirements Specification","Abraham, Ajith; Lloret Mauri, Jaime; Buford, John F.; Suzuki, Junichi; Thampi, Sabu M.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LF8NZ9M9","journalArticle","2021","Lim, Sachiko; Henriksson, Aron; Zdravkovic, Jelena","Data-Driven Requirements Elicitation: A Systematic Literature Review","SN Computer Science","","2661-8907","10.1007/s42979-020-00416-4","https://doi.org/10.1007/s42979-020-00416-4","Requirements engineering has traditionally been stakeholder-driven. In addition to domain knowledge, widespread digitalization has led to the generation of vast amounts of data (Big Data) from heterogeneous digital sources such as the Internet of Things (IoT), mobile devices, and social networks. The digital transformation has spawned new opportunities to consider such data as potentially valuable sources of requirements, although they are not intentionally created for requirements elicitation. A challenge to data-driven requirements engineering concerns the lack of methods to facilitate seamless and autonomous requirements elicitation from such dynamic and unintended digital sources. There are numerous challenges in processing the data effectively to be fully exploited in organizations. This article, thus, reviews the current state-of-the-art approaches to data-driven requirements elicitation from dynamic data sources and identifies research gaps. We obtained 1848 hits when searching six electronic databases. Through a two-level screening and a complementary forward and backward reference search, 68 papers were selected for final analysis. The results reveal that the existing automated requirements elicitation primarily focuses on utilizing human-sourced data, especially online reviews, as requirements sources, and supervised machine learning for data processing. The outcomes of automated requirements elicitation often result in mere identification and classification of requirements-related information or identification of features, without eliciting requirements in a ready-to-use form. This article highlights the need for developing methods to leverage process-mediated and machine-generated data for requirements elicitation and addressing the issues related to variety, velocity, and volume of Big Data for the efficient and effective software development and evolution.","2021-01-04","2023-05-03 15:49:22","2023-05-03 15:49:22","2023-05-03 15:49:22","16","","1","2","","SN COMPUT. SCI.","Data-Driven Requirements Elicitation","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\U68FQBBW\Lim et al. - 2021 - Data-Driven Requirements Elicitation A Systematic.pdf","","","Requirements engineering; Requirements elicitation; Automation; Big Data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MGRDYN2Z","journalArticle","2012","Mulla, Nilofar","A New Approach to Requirement Elicitation Based on Stakeholder Recommendation andCollaborative Filtering","International Journal of Software Engineering & Applications","","09762221","10.5121/ijsea.2012.3305","http://www.airccse.org/journal/ijsea/papers/3312ijsea05.pdf","The customers' needs in a software project are identified in the process of Software requirements elicitation. For building a software system this process is considered as one of the most important parts. In this part it is decided precisely what will be built. A close interaction between developers and end-users of the system is needed by requirements’ gathering. Meetings can be costly, inconvenient and infrequent if developers and end-users are in different organizations or different cities. The quality of the elicited requirements can greatly be impacted if there is a problem of communication. Requirement elicitation is a process difficult to scale to large software projects with many stakeholders which involves identifying and prioritizing requirements. A stakeholder is an individual or a group who can influence or be influenced by the success or failure of a project. Existing methods to identify and prioritize requirements do not scale well to large projects. Large projects tend to be beset by three problems: information overload, inadequate stakeholder input, and biased prioritization of requirements. Existing methods to identify and prioritize requirements do not scale well to large projects. Existing requirements prioritization methods require substantial efforts from the requirements engineers when there are many requirements. To address the problems Stakeholder recommender model will contain steps:-Identify the large project, Analysis of requirements, Identify and prioritize stakeholders, Predict requirements, Prioritize requirements. For making predictions, our approach will use one of the most well known algorithms that is k-Nearest Neighbor (kNN) algorithm. KNN is used to identify like-minded users with similar rating histories in order to predict ratings for unobserved users-item pairs. A unique subset of the community for each user is found out by KNN by identifying those with similar interests. To do so, every pair of user profile is compared to measure the degree of similarity. A neighbourhood is created for each user by selecting the k most similar users. The similarity between each pair of user profiles for users in the neighbourhood is used to compute predicted ratings. Finally, the predicted ratings for the items are sorted according to the predicted value, and the top-N items are proposed to the user as recommendations, where N is the number of items recommended to the user.","2012-05-31","2023-05-03 15:49:24","2023-05-03 15:49:25","2023-05-03 15:49:24","51-60","","3","3","","IJSEA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\HDGDY5EY\Mulla - 2012 - A New Approach to Requirement Elicitation Based on.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KHW3EVQD","journalArticle","2019","Ali, Zahid; Yaseen, Muhammad; Ahmed, Salman","Effective communication as critical success factor during requirement elicitation in global software development","","","","","","Requirements implementation is difficult phase of software engineering. In Global Software Development (GSD) it becomes more difficult to collect user requirements. Effective and proper communication between clients and vendors in GSD has significant role in successful collection of requirements. There is need to analyze how role of effective communication varies for different company sizes, time period experimental methods and from continent to continent. Systematic Literature Review (SLR) is applied to achieve goals and objectives.","2019","2023-05-03 15:49:30","2023-05-03 15:49:30","","","","","8","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\7SDGTSHK\Ali et al. - 2019 - Effective communication as critical success factor.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BJL2TG3J","journalArticle","1997","Goldin, Leah; Berry, Daniel M.","AbstFinder, A Prototype Natural Language Text Abstraction Finder for Use in Requirements Elicitation","Automated Software Engineering","","1573-7535","10.1023/A:1008617922496","https://doi.org/10.1023/A:1008617922496","Abstraction identification is named as a key problem in requirements analysis. Typically, the abstrac-tions must be found among the large mass of natural language text collected from the clients and users. This paper motivates and describes a new approach, based on traditional signal processing methods. for finding abstractions in natural language text and offers a new tool, AbstFinder as an implementation of this approach. The advantages and disadvantages of the approach and the design of the tool are discussed in detail. Various scenarios for use of the tool are offered. Some of these scenarios were used in case study of the effectiveness of rhe tool on an industrial-strength example of finding abstractions in a request for proposals.","1997-10-01","2023-05-03 15:49:36","2023-05-03 15:49:36","2023-05-03 15:49:36","375-412","","4","4","","Automated Software Engineering","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\N5VZLYHF\Goldin and Berry - 1997 - AbstFinder, A Prototype Natural Language Text Abst.pdf","","","requirements elicitation; abstraction finder; evaluation of tool; natural language text; tool use method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ESR2I4US","journalArticle","2020","Li, Jinyu; Ullah, Asif; Li, Jun; Nazir, Shah; Khan, Habib Ullah; Ur Rehman, Hanif; Haq, Amin Ul","Attributes-Based Decision Making for Selection of Requirement Elicitation Techniques Using the Analytic Network Process","Mathematical Problems in Engineering","","1024-123X","10.1155/2020/2156023","https://www.hindawi.com/journals/mpe/2020/2156023/","Requirement engineering is the first phase of software engineering. In requirement engineering, the first phase is requirement elicitation (RE), which is the most critical and error-prone activity. In this phase, the requirements are extracted from various sources; after extraction, they are analyzed and documented for a specific purpose of software development. In RE, process requirements from stakeholders are gathered, upon which the entire software product failure and success are dependent. In order to accomplish the goal of requirement elicitation, various techniques are used. However, the selection of these techniques is a very challenging task, as one technique may suit a situation but may not be suited for other situations. Besides this, project attributes such as documentation culture of organization, degree of relationship among stakeholders, and familiarity to domain also have a great impact on the process of technique selection. The reason is that there is no empirical value of the techniques that provide help in techniques selection to analyze the basis software project attributes. This study proposed the analytic network process, which is one of the multicriteria decision making processes for the elicitation technique selection process with respect to criterion attributes of project. The motivation toward the use of the ANP approach for the selection of requirement selection technique is that there are dependencies existing among attributes of the project elements. So, the ANP approach is capable of dealing with such situations where dependencies and complexity occur. Results of the proposed study demonstrate that the technique helps in complex situations where decision making is difficult based on the alternatives.","2020-09-08","2023-05-03 15:51:32","2023-05-03 15:51:32","2023-05-03 15:51:32","e2156023","","","2020","","","","","","","","","","en","","","","","www.hindawi.com","","Publisher: Hindawi","","C:\Users\gabra\Zotero\storage\VABZVUSB\Li et al. - 2020 - Attributes-Based Decision Making for Selection of .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6ZAZX5MZ","journalArticle","2017","Ali, Naveed; Lai, Richard","A method of requirements elicitation and analysis for Global Software Development","Journal of Software: Evolution and Process","","2047-7481","10.1002/smr.1830","https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1830","To perform requirements elicitation and analysis, effective communication and collaboration between stakeholders are necessary. Global Software Development (GSD), where software teams are located in different parts of the world, has become increasingly popular. However, geographical distance, cultural diversity, differences in time zones, and language barriers create difficulties for GSD stakeholders in engaging in effective communication. Taking into consideration the factors involved in GSD, previous research showed that the ways by which requirements are gathered and analyzed for collocated software development cannot be used effectively for GSD. Thus, in this paper, we present a method of requirements elicitation and analysis for GSD. The method consists of 4 stages: (1) data collection; (2) educating stakeholders about GSD issues; (3) post-education assessment; and (4) requirements elicitation and analysis. Past researchers used student groups in a university environment to play the roles of stakeholders in experiments in GSD studies. Likewise, we preliminarily validate our method by applying it to a case study of an online shopping system, where the roles of client, requirements engineer, project analyst, and designers were played by a group of students.","2017","2023-05-03 15:51:38","2023-05-03 15:51:38","2023-05-03 15:51:38","e1830","","4","29","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1830","","","","","requirements analysis; requirements elicitation; distributed teams; Global Software Development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R3CS33JS","journalArticle","2010","Aranda, Gabriela N.; Vizcaíno, Aurora; Piattini, Mario","A framework to improve communication during the requirements elicitation process in GSD projects","Requirements Engineering","","1432-010X","10.1007/s00766-010-0105-9","https://doi.org/10.1007/s00766-010-0105-9","Achieving a shared understanding of requirements is difficult in any situation, even more so in global software development projects. In such environments, people must deal not only with the lack of face to face communication, but also with other issues such as time difference, cultural diversity and a large amount of information originating from different sources throughout the world. Obtaining the right requirements therefore implies extra effort. In order to minimize such problems, we propose a framework that focuses on analyzing the factors that may be problematic in global software development and which suggests a set of strategies to improve the requirements elicitation process in such environments. In this paper, we describe the different phases of our framework and present the results of an experiment that test part of this framework. The results indicate that applying some of the strategies proposed in the framework seems to positively affect the stakeholders’ satisfaction with regard to communication. Moreover, the quality of the written software requirements specifications seems to be better as well when using those strategies.","2010-11-01","2023-05-03 15:51:41","2023-05-03 15:51:41","2023-05-03 15:51:41","397-417","","4","15","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Global software development; Cognitive informatics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3FEIAN3S","journalArticle","","Kassel, Neil W; Malloy, Brian A","AN APPROACH TO AUTOMATE REQUIREMENTS ELICITATION AND SPECIFICATION","","","","","","This paper presents an approach to partially automate the requirements elicitation and specification processes. Because human interaction is of vital importance in requirements elicitation, it is almost impossible and impractical to fully automate the elicitation process. Our approach, combined with other established techniques, will increase the probability that the customer states real and nearly complete requirements. We have developed a prototype tool to support our approach, which can be used independently or jointly by customers, users, software engineers, and domain experts. The ultimate goal of our approach is to demonstrate the potential for this automated tool to improve the requirements elicitation and specification processes.","","2023-05-03 15:51:49","2023-05-03 15:51:49","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\6574CW7X\Kassel and Malloy - AN APPROACH TO AUTOMATE REQUIREMENTS ELICITATION A.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4HWI9T4X","conferencePaper","2014","Przybylek, Adam","A business-oriented approach to requirements elicitation","2014 9th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)","","","","","""The hardest single part of building a software system is deciding precisely what to build"" (Brooks, 1987). Faulty requirements analysis is a major reason for project failure or unsatisfactory information systems that do not fulfill business needs. Although it has been long recognized that system requirements can only be understood within the context of the business processes and business modeling has become the initial phase of most software processes, the transition between business modeling and requirements gathering is still a challenge for research. Moreover, existing work in this area tends to introduce accidental difficulties. This paper reports the results of an action research conducted for elaborating a Business-Oriented approach to Requirements Elicitation. Our approach integrates Requirements Engineering with Business Process Engineering and derives system requirements based on business process models. This ensures that system requirements meet real business needs. The proposed approach is illustrated by a real-world example.","2014-04","2023-05-03 15:51:50","2023-05-03 15:51:50","","1-12","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Conferences; Unified modeling language; Software systems; Requirements; Analytical models; Activity Diagram; BPM; Business Process Modeling; Computational modeling; Organizations; Traceability; UCDA; UML; Use Cases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 9th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)","","","","","","","","","","","","","","",""
"2EWJPLCB","journalArticle","2006","Tsumaki, Toshihiko; Tamai, Tetsuo","Framework for matching requirements elicitation techniques to project characteristics","Software Process: Improvement and Practice","","1099-1670","10.1002/spip.293","https://onlinelibrary.wiley.com/doi/abs/10.1002/spip.293","One of the most difficult jobs for requirements engineers is to select an appropriate RE method for the project at hand. Good engineers make good choices and have skills in applying selected techniques appropriately. Poor engineers usually have a narrow choice range limited by their training and biased by their experience. Once a RE technique that does not fit the current project is selected, the project is doomed to fail. In this article, we propose a framework to characterize typical RE techniques and use it as a base for selecting appropriate techniques at the time a project is started, as well as at the time a change in the nature of the project is recognized, or an obstacle is encountered in defining a suitable set of requirements. Copyright © 2006 John Wiley & Sons, Ltd.","2006","2023-05-03 15:51:56","2023-05-03 15:51:56","2023-05-03 15:51:56","505-519","","5","11","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spip.293","","","","","brainstorming; domain decomposition; goal oriented; project characteristics; requirements engineering techniques; scenario based; situation change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NVGMPKFT","journalArticle","2012","Anwar, Fares; Razali, Rozilawati","A Practical Guide to Requirements Elicitation Techniques Selection - An Empirical Study","","","","","","Requirements elicitation (RE) is the most critical phase in requirement engineering. It is the moment in which analysts elicit, understand and validate the requirements of a system from stakeholders. RE process is resource-intensive and it is therefore accomplished with the support of predetermined techniques. The advancement of technology has introduced many RE techniques and thus analysts are provided with various possible options. The options however are not always obvious. It is uncertain on how to select the right techniques for specific situations under certain conditions. Although several selection guidelines do exist, they are mainly theoretical rather than pragmatic. This study addressed this issue by conducting in-depth interviews with five experienced practitioners from four Middle-Eastern software organisations. The objective of the study was to identify the important factors that contribute to RE techniques selection from the perspective of practitioners in the industry. Four factors were identified by using content analysis, namely technique features, stakeholder characteristics, requirements sources and project environment. The factors form a practical guide that could help analysts to determine the appropriate RE techniques for a given project.","2012","2023-05-03 15:52:02","2023-05-03 15:52:02","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\6RMZ64NX\Anwar and Razali - 2012 - A Practical Guide to Requirements Elicitation Tech.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QF8YA47F","journalArticle","2002","Coughlan, Jane; Macredie, Robert D.","Effective Communication in Requirements Elicitation: A Comparison of Methodologies","Requirements Engineering","","1432-010X","10.1007/s007660200004","https://doi.org/10.1007/s007660200004","The elicitation or communication of user requirements comprises an early and critical but highly error-prone stage in system development. Socially oriented methodologies provide more support for user involvement in design than the rigidity of more traditional methods, facilitating the degree of user–designer communication and the ‘capture’ of requirements. A more emergent and collaborative view of requirements elicitation and communication is required to encompass the user, contextual and organisational factors. From this accompanying literature in communication issues in requirements elicitation, a four-dimensional framework is outlined and used to appraise comparatively four different methodologies seeking to promote a closer working relationship between users and designers. The facilitation of communication between users and designers is subject to discussion of the ways in which communicative activities can be ‘optimised’ for successful requirements gathering, by making recommendations based on the four dimensions to provide fruitful considerations for system designers.","2002-06-01","2023-05-03 15:52:05","2023-05-03 15:52:05","2023-05-03 15:52:05","47-60","","2","7","","Requirements Eng","Effective Communication in Requirements Elicitation","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\YQRMVNV7\Coughlan and Macredie - 2002 - Effective Communication in Requirements Elicitatio.pdf","","","Communication –; Context –; Elicitation –; Requirements –; Socially oriented methodologies –; User–designer interaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GT2UZIJU","conferencePaper","1991","Dardenne, A.; Fickas, S.; Lamsweerde, A. van","Goal-directed concept acquisition in requirements elicitation","","","","10.1109/IWSSD.1991.213081","https://www.computer.org/csdl/proceedings-article/iwssd/1991/00213081/12OmNwoPtx5","Requirements analysis includes an acquisition step where a global model for the specification of the system and its environment is elaborated. This model involves concepts that are usually not found in the final formal specification, such as goals to be achieved, agents and their responsibilities, etc. The authors present an approach for model acquisition which is driven by such goals. They describe a conceptual meta-model in terms of which requirements models are acquired. The acquisition strategy can be viewed as a systematic way to traversing this meta-model backwards from the goals. The goal-directed acquisition strategy and the use of the meta-model are illustrated with a case study, the specification of a simple elevator system.","1991-01-01","2023-05-03 15:52:10","2023-05-03 15:52:10","2023-05-03 15:52:10","14,15,16,17,18,19,20,21-14,15,16,17,18,19,20,21","","","","","","","","","","","IEEE Computer Society","","English","","","","","www.computer.org","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the Sixth International Workshop on Software Specification and Design","","","","","","","","","","","","","","",""
"RFCFASLB","conferencePaper","1993","Goguen, J.A.; Linde, C.","Techniques for requirements elicitation","[1993] Proceedings of the IEEE International Symposium on Requirements Engineering","","","10.1109/ISRE.1993.324822","","The authors survey and evaluate techniques for eliciting requirements of computer-based systems, paying particular attention to dealing with social issues. The methods surveyed include introspection, interviews, questionnaires, and protocol, conversation, interaction, and discourse analyses. The last three techniques grew out of ethnomethodology and sociolinguistics. They can elicit tacit knowledge by observing actual interactions in the workplace, and can also be applied to the system development process itself.<>","1993-01","2023-05-03 15:52:16","2023-05-03 15:52:16","","152-164","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Knowledge engineering; Bibliographies; Hardware; Software systems; Programming profession; Cultural differences; Contracts; Employment; Protocols; Telecommunication computing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","[1993] Proceedings of the IEEE International Symposium on Requirements Engineering","","","","","","","","","","","","","","",""
"DXQBP4XJ","book","2009","Zin, Abdullah; Che Pa, Noraini","Measuring communication gap in software requirements elicitation process","","","","","","Requirements elicitation is a process of seeking, uncovering, acquiring and elaborating requirements for developing a computer-based system. These processes involve communication between customers and developers. Techniques of communication that are normally used includes verbal, written and interpersonal. According to previous researches, there are numerous communication problems occurred between customers and developers during the requirement elicitation process. This study describes a technique for measuring communication gap between customers and developers during requirements elicitation. This technique is constructed by using Iterative Triangulation method. Five variables are proposed in this measurement: input, communication skills, personality, medium and procedures. The evaluation indicates that the proposed technique is able to produce the right measurement of the communication gap between customers and developers during requirements elicitation.","2009-02-21","2023-05-03 15:52:18","2023-05-03 15:52:18","","","66","","","","","","","","","","","","","","","","","ResearchGate","","Pages: 71","","C:\Users\gabra\Zotero\storage\EJUKUG85\Zin and Che Pa - 2009 - Measuring communication gap in software requiremen.pdf; ","https://www.researchgate.net/profile/Abdullah-Zin-2/publication/262166560_Measuring_communication_gap_in_software_requirements_elicitation_process/links/5604cc1d08ae5e8e3f31095f/Measuring-communication-gap-in-software-requirements-elicitation-process.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PKW94D6S","conferencePaper","2006","Geisser, Michael; Hildenbrand, Tobias","A Method for Collaborative Requirements Elicitation and Decision-Supported Requirements Analysis","Advanced Software Engineering: Expanding the Frontiers of Software Technology","978-0-387-34831-5","","10.1007/978-0-387-34831-5_9","","As software systems become more and more complex with a multitude of stakeholders involved in development activities, novel ways of conducting the process of requirements elicitation and analysis are to be found. Therefore, this paper introduces a method for collaborative requirements elicitation and decision-supported requirements analysis. Accompanying this method, appropriate tools and techniques, both existing and custom-made, are referred to. The method is designed for a geographically distributed collaborative environment in order to support software manufacturers as well as IT departments which develop software solutions for multiple users or even consortiums of customers.","2006","2023-05-03 15:52:21","2023-05-03 15:52:21","","108-122","","","","","","","IFIP International Federation for Information Processing","","","","Springer US","Boston, MA","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\WPNCDCWX\Geisser and Hildenbrand - 2006 - A Method for Collaborative Requirements Elicitatio.pdf","","","Software Engineering; Requirement Engineering; Analytic Hierarchy Process; Requirement Elicitation; Spiral Model","Ochoa, Sergio F.; Roman, Gruia-Catalin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4PCEJ6GP","conferencePaper","2011","Farfeleder, Stefan; Moser, Thomas; Krall, Andreas; Stålhane, Tor; Omoronyia, Inah; Zojer, Herbert","Ontology-Driven Guidance for Requirements Elicitation","The Semanic Web: Research and Applications","978-3-642-21064-8","","10.1007/978-3-642-21064-8_15","","Requirements managers aim at keeping their sets of requirements well-defined, consistent and up to date throughout a project’s life cycle. Semantic web technologies have found many valuable applications in the field of requirements engineering, with most of them focusing on requirements analysis. However the usability of results originating from such requirements analyses strongly depends on the quality of the original requirements, which often are defined using natural language expressions without meaningful structures. In this work we present the prototypic implementation of a semantic guidance system used to assist requirements engineers with capturing requirements using a semi-formal representation. The semantic guidance system uses concepts, relations and axioms of a domain ontology to provide a list of suggestions the requirements engineer can build on to define requirements. The semantic guidance system is evaluated based on a domain ontology and a set of requirements from the aerospace domain. The evaluation results show that the semantic guidance system effectively supports requirements engineers in defining well-structured requirements.","2011","2023-05-03 15:52:38","2023-05-03 15:52:38","","212-226","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\XVU4FZVZ\Farfeleder et al. - 2011 - Ontology-Driven Guidance for Requirements Elicitat.pdf","","","requirements engineering; requirements elicitation; domain ontology; elicitation guidance","Antoniou, Grigoris; Grobelnik, Marko; Simperl, Elena; Parsia, Bijan; Plexousakis, Dimitris; De Leenheer, Pieter; Pan, Jeff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"69WLEUP5","conferencePaper","1996","Hudlicka, E.","Requirements elicitation with indirect knowledge elicitation techniques: comparison of three methods","Proceedings of the Second International Conference on Requirements Engineering","","","10.1109/ICRE.1996.491424","","In this paper we describe a case study comparing the effectiveness of three indirect knowledge elicitation techniques: repertory grid analysis, multi-dimensional scaling, and hierarchical clustering. These techniques are used in situations where it is difficult for the expert to articulate their knowledge in response to direct questions. The techniques were compared in terms of the number of attributes elicited, the ease with which these data were obtained, and the degree of post-analysis and interpretation required. The study was conducted in the domain of airline safety inspections and the objective was to define inspection indicators. The results of this study indicate that the repertory grid analysis method generates all of the attributes produced by the other two methods, that it is easy to apply in the field, and is useful without complex analysis and re-interpretation of the results.","1996-04","2023-05-03 15:52:50","2023-05-03 15:52:50","","4-11","","","","","","Requirements elicitation with indirect knowledge elicitation techniques","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\T4DVMBN4\491424.html","","","Programming; Knowledge engineering; Application software; Costs; Problem-solving; Inspection; Knowledge based systems; Laboratories; Mesh generation; Psychology","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the Second International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"7FGZSGL4","conferencePaper","2006","Jaramillo, Carlos Mario Zapata; Gelbukh, Alexander; Isaza, Fernando Arango","Pre-conceptual Schema: A Conceptual-Graph-Like Knowledge Representation for Requirements Elicitation","MICAI 2006: Advances in Artificial Intelligence","978-3-540-49058-6","","10.1007/11925231_3","","A simple representation framework for ontological knowledge with dynamic and deontic characteristics is presented. It represents structural relationships (is-a, part/whole), dynamic relationships (actions such as register, pay, etc.), and conditional relationships (if-then-else). As a case study, we apply our representation language to the task of requirements elicitation in software engineering. We show how our pre-conceptual schemas can be obtained from controlled natural language discourse and how these diagrams can be then converted into standard UML diagrams. Thus our representation framework is shown to be a useful intermediate step for obtaining UML diagrams from natural language discourse.","2006","2023-05-03 15:53:06","2023-05-03 15:53:06","","27-37","","","","","","Pre-conceptual Schema","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirement Elicitation; Conceptual Graph; Dynamic Relationship; Knowledge Representation; Semantic Network","Gelbukh, Alexander; Reyes-Garcia, Carlos Alberto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"HLRZWDHZ","conferencePaper","2004","Tuunanen, T.; Rossi, M.","Engineering a method for wide audience requirements elicitation and integrating it to software development","37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the","","","10.1109/HICSS.2004.1265420","","Consumer oriented information systems development has become increasingly important matter, as more and more complex information systems are targeted towards consumer markets. We argue that developing IS for non-organizational users creates new problems, which IS and requirement engineering (RE) community should attend to. First of all, the elicitation of requirements becomes more difficult as usually consumers do not explicitly know what they want, and it is difficult for them to express their ideas. To support different views of product development, such as project management and design, the method should present requirements in a 'rich enough' way to avoid overloading management, but in the same time giving designers the detailed information they need. Last but not the least, the results of requirements engineering should be easy to integrate to the software development process. To this end, we have constructed a new RE method and its support environment within Metaedit+ Meta CASE tool. We based our method on critical success chains (CSC) method, which supports top-down approach for planning, but also provides for wide participation of IS customers to get rich information. CSC aggregates the results of many individual interviews into meaningful graphical models of what is critically important about a potential system. In our work, CSC is extended with customer segmentation and lead user concepts from marketing.","2004-01","2023-05-03 15:57:00","2023-05-03 15:57:00","","10 pp.-","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Project management; Product development; Aggregates; Computer aided software engineering; Design methodology; Environmental economics; Information systems; Java; Power engineering and energy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the","","","","","","","","","","","","","","",""
"ISTCGPHE","conferencePaper","2007","Schneider, Kurt","Generating Fast Feedback in Requirements Elicitation","Requirements Engineering: Foundation for Software Quality","978-3-540-73031-6","","10.1007/978-3-540-73031-6_12","","Getting feedback fast is essential during early requirements activities. Requirements analysts need to capture interpret and validate raw requirements and information. In larger projects, a series of interviews and workshops is conducted. Stakeholder feedback for validation purposes is often collected in a second series of interviews, which may take weeks to complete. However, this may (1) delay the entire project, (2) cause stakeholders to lose interest and commitment, and (3) result in outdated, invalid requirements. Based on our “By Product-Approach”, we developed the “Fast Feedback” technique to collect additional information during initial interviews. User interface mock-ups are sketched and animated during the first interview and animated using the use case steps as guidance. This shortcut saves one or two interview cycles. A large admin istra tive software project was the trigger for this work.","2007","2023-05-03 15:57:01","2023-05-03 15:57:01","","160-174","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirements elicitation; by-product approach; feedback; interview technique; requirements validation; support tool","Sawyer, Pete; Paech, Barbara; Heymans, Patrick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2BKC8DDJ","conferencePaper","2013","Kumari.S, Neetu; Pillai, Anitha S.","A study on the software requirements elicitation issues - its causes and effects","2013 Third World Congress on Information and Communication Technologies (WICT 2013)","","","10.1109/WICT.2013.7113143","","Software requirements elicitation is an important and essential pre-requisite to the subsequent phases in software development lifecycle. There is an increasing focus on how industry performs elicitation as this has a direct influence on the overall project success. It is important to understand broader elicitation issues and challenges, and address them on a large-scale, especially on geographically distributed software development. There are studies focusing on elicitation, but they are relatively small. There is no substantial research related to providing a comprehensive view of elicitation issues along with its causes and effects. This paper attempts to provide a summary of the systematic literature review (SLR) findings from 81 papers. The findings are based on causes of poor elicitation, elicitation issues and challenges, consequences of poor elicitation, advisable practices and classification of elicitation issues. The authors have leveraged cause-and-effect diagrams to draw conclusions on SLR.","2013-12","2023-05-03 15:57:06","2023-05-03 15:57:06","","245-252","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Taxonomy; cause-and-effect; elicitation issues; Human factors; software requirements elicitation; software requirements engineering; systematic literarture review","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 Third World Congress on Information and Communication Technologies (WICT 2013)","","","","","","","","","","","","","","",""
"22YSAT5H","journalArticle","2018","Maria, Hafiza; Ali, Zulfiqar","Requirement Elicitation Techniques for Open Source Systems: A Review","International Journal of Advanced Computer Science and Applications","","","10.14569/IJACSA.2018.090145","","The trend of Open Source Software development has been increased from the past few years. It has gained much attention of developers in the industry. The development of open source software systems is slightly different from traditional software development. In open source software development, requirement elicitation is a very complex and critical process as developers from different regions of the world develop the system so it's really difficult to gather requirements for such systems. A variety of available tools, techniques, and approaches are used to perform the process of requirement elicitation. The purpose of this study is to focus on how the process of requirement elicitation is carried out for open source software and the different ways which are used to simplify the process of requirement elicitation. This paper comprehensively describes the techniques which are available and are used for requirement elicitation in open source software development. To do so, a literature survey of the existing techniques of requirement elicitation is conducted and different techniques are found that can be used for requirement elicitation in open source software systems.","2018-01-01","2023-05-03 15:57:07","2023-05-03 15:57:07","","","","","9","","International Journal of Advanced Computer Science and Applications","Requirement Elicitation Techniques for Open Source Systems","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\62HL2BPS\Maria and Ali - 2018 - Requirement Elicitation Techniques for Open Source.pdf; ","https://www.researchgate.net/profile/Zulfiqar-Ali-3/publication/322873661_Requirement_Elicitation_Techniques_for_Open_Source_Systems_A_Review/links/5d958e3a458515c1d38ee875/Requirement-Elicitation-Techniques-for-Open-Source-Systems-A-Review.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TH7XSQ3M","conferencePaper","2014","Taheri, L.; Pa, N. C.; Abdullah, R.; Abdullah, S.; Shafazand, M. Y.","Identifying knowledge components in software requirement elicitation","2014 IEEE International Conference on Industrial Engineering and Engineering Management","","","10.1109/IEEM.2014.7058645","","This paper considers the importance of knowledge in software development organizations which are highly knowledge-intensive and focuses on knowledge audit in their requirement elicitation process. Requirement elicitation process involves a great deal of knowledge and there are several problems regarding eliciting and using the knowledge in this process. Misunderstanding, undefined scope, conflicting information and constant changes of requirements are some of the problems of requirement elicitation. A knowledge audit model is proposed in this paper to improve the requirement elicitation process by identifying knowledge components and knowledge sources existing in the requirement elicitation process as well as their relationships. A survey is then conducted to prove the validity of the model. The results support that the proposed knowledge components and knowledge audit model improves requirement elicitation.","2014-12","2023-05-03 15:57:13","2023-05-03 15:57:13","","286-291","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2157-362X","","","","","Collaboration; Software; Iterative methods; Semantics; Organizations; Iterative Triangulation Method; Knowledge Audit; Ontologies; Requirement Elicitation Process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE International Conference on Industrial Engineering and Engineering Management","","","","","","","","","","","","","","",""
"ZHSBTPAK","journalArticle","2021","Wang, Zuoxu; Chen, Chun-Hsien; Zheng, Pai; Li, Xinyu; Khoo, Li Pheng","A graph-based context-aware requirement elicitation approach in smart product-service systems","International Journal of Production Research","","0020-7543","10.1080/00207543.2019.1702227","https://doi.org/10.1080/00207543.2019.1702227","The paradigm of Smart product-service systems (Smart PSS) has emerged recently owing to the edge-cutting Information and Communication Technology (ICT) and artificial intelligence (AI) techniques. The unique features of Smart PSS including smartness and connectedness, value co-creation and data-driven design manner, enable the collection and analysis of large volume and heterogeneous contextual data to extract useful knowledge. Therefore, requirement elicitation, as a critical process for new solution (i.e. product-service) design, can be conducted in a rather context-aware manner, assured by those massive user-generated data and product-sensed data during the usage stage. Nevertheless, despite a few works on semantic modelling, scarcely any reports on such mechanism in today's smart, connected environment. Aiming to fill this gap, for the first time, a graph-based context-aware requirement elicitation approach considering contextual information within the Smart PSS is proposed. It leverages the pre-defined product, service, and condition ontologies together with Deepwalk technique, to formulate those concepts as nodes and their relationships as the edge of the proposed requirement graph. Implicit stakeholder requirements within a specific context can be further derived based on such interrelationships in a data-driven manner. To demonstrate its feasibility and effectiveness, an example of smart bike share system is addressed to illustrate the requirement elicitation process. It is hoped that this explorative study can offer valuable insights for the service providers who would like to extract requirements not only from the voice of customers but also from the user-generated data and product-sensed data.","2021-01-17","2023-05-03 15:57:20","2023-05-03 15:57:20","2023-05-03 15:57:20","635-651","","2","59","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/00207543.2019.1702227","","","","","context-awareness; graph embedding; information modelling; ontology; product-service systems; requirement elicitation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S8LRJEHS","conferencePaper","2016","Mohanan, Murali; Samuel, Philip","Software Requirement Elicitation Using Natural Language Processing","Innovations in Bio-Inspired Computing and Applications","978-3-319-28031-8","","10.1007/978-3-319-28031-8_17","","Software requirements are usually written in natural language or speech language which is asymmetric and irregular. This paper presents a suitable method for transforming user software requirement specifications (SRS) and business designs written in natural language into useful object oriented models. For sentence detection, tokenization, parts of speech tagging and parsing of requirement specifications we incorporate an open natural language processing (OpenNLP)tool. It provides very relevant parts of speech (POS) tags. This parts of speech tagging of the SRS is quite useful for further identification of object oriented elements like classes, objects, attributes, relationships etc. After obtaining the required and relative information, Semantic Business Vocabulary and Rules (SBVR) are applied to identify and to extract the object oriented elements from the requirement specification.","2016","2023-05-03 15:57:22","2023-05-03 15:57:22","","197-208","","","","","","","Advances in Intelligent Systems and Computing","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Requirement elicitation; Class model generation; OpenNLP; SBVR; Software requirement specification","Snášel, Václav; Abraham, Ajit; Krömer, Pavel; Pant, Millie; Muda, Azah Kamilah","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S6BTZZPW","journalArticle","2011","Morkevičius, Aurelijus; Gudas, Saulius","Enterprise Knowledge Based Software Requirements Elicitation","Information Technology and Control","","2335-884X","10.5755/j01.itv.40.3.626","https://itc.ktu.lt/index.php/ITC/article/view/626","One of the ways to capture enterprise knowledge is Enterprise Architecture (EA). EA allows indentifying the majority of software ""to-be"" requirements for information systems (IS) engineering. However, the transition between enterprise architecture model and IT resource design still lacks a clear approach and tools for implementing it in practice. The paper presents an approach for the enterprise knowledge based software requirements elicitation. The suggested approach is based on the Unified profile for Ministry of Defence Architecture Framework (MODAF) and Department of Defense Architecture Framework (DoDAF), System Modeling Language (SysML) requirements model, and a Semantics of Business Vocabulary and Business Rules (SBVR) standard as a formal background for elicited software requirements. A real world example is presented to validate the suitability of the approach.http://dx.doi.org/10.5755/j01.itc.40.3.626","2011-09-12","2023-05-03 15:57:26","2023-05-03 15:57:26","2023-05-03 15:57:26","181-190","","3","40","","","","","","","","","","en","Copyright (c)","","","","www.itc.ktu.lt","","Number: 3","","C:\Users\gabra\Zotero\storage\QP2KD8PZ\Morkevičius and Gudas - 2011 - Enterprise Knowledge Based Software Requirements E.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BA25EWKS","conferencePaper","2016","Karras, Oliver; Kiesling, Stephan; Schneider, Kurt","Supporting Requirements Elicitation by Tool-Supported Video Analysis","2016 IEEE 24th International Requirements Engineering Conference (RE)","","","10.1109/RE.2016.10","","Workshops are an established technique for requirements elicitation. A lot of information is revealed during a workshop, which is generally captured via textual minutes. The scribe suffers from a cognitive overload due to the difficulty of gathering all information, listening and writing at the same time. Video recording is used as additional option to capture more information, including non-verbal gestures. Since a workshop can take several hours, the recorded video will be long and may be disconnected from the scribe's notes. Therefore, the weak and unclear structure of the video complicates the access to the recorded information, for example in subsequent requirements engineering activities. We propose the combination of textual minutes and video with a software tool. Our objective is connecting textual notes with the corresponding part of the video. By highlighting relevant sections of a video and attaching notes that summarize those sections, a more useful structure can be achieved. This structure allows an easy and fast access to the relevant information and their corresponding video context. Thus, a scribe's overload can be mitigated and further use of a video can be simplified. Tool-supported analysis of such an enriched video can facilitate the access to all communicated information of a workshop. This allows an easier elicitation of high-quality requirements. We performed a preliminary evaluation of our approach in an experimental set-up with 12 participants. They were able to elicit higher-quality requirements with our software tool.","2016-09","2023-05-03 15:57:30","2023-05-03 15:57:30","","146-155","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Requirements engineering; Conferences; Requirements elicitation; Context; requirements quality; Software tools; Stakeholders; Streaming media; video analysis; Video recording; workshop video","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2016 IEEE 24th International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"I9TRXPJD","journalArticle","2017","Younas, M.; Jawawi, D. N. A.; Ghani, I.; Kazmi, R.","Non-Functional Requirements Elicitation Guideline for Agile Methods","Journal of Telecommunication, Electronic and Computer Engineering (JTEC)","","2289-8131","","https://jtec.utem.edu.my/jtec/article/view/2933","One of the essential activities in software development is elicitation of requirement. Majority of the studies has pointed out that less attention is given to the NonFunctional Requirement (NFR). The negligence of NFR elicitation is due to lack of knowledge of the user and developer about NFR. Our study presents elicitation guidelines for NFRs in agile methods. This guideline will helps developers as well as users in agile methods. A case study is conducted on the group of master students for eliciting NFR with the help of elicitation guidelines. In addition, the initial results were obtained by extracting NFRs from eProcurement document that carries requirements of major European Union projects. The result of the case study is positive and encouraging for the new developers and users having less awareness about NFRs. Furthermore, the study describes the role of cloud computing in agile methods, especially in elicitation activity.","2017-10-20","2023-05-03 15:57:43","2023-05-03 15:57:43","2023-05-03 15:57:43","137-142","","3-4","9","","","","","","","","","","en","Copyright (c)","","","","jtec.utem.edu.my","","Number: 3-4","","C:\Users\gabra\Zotero\storage\WYHA9GGX\Younas et al. - 2017 - Non-Functional Requirements Elicitation Guideline .pdf","","","Agile; Cloud Computing; Elicitation; Guideline; Non-Functional Requirement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"G2V9JL9R","journalArticle","2014","Sadiq, Mohd; Jain, S. K.","Applying fuzzy preference relation for requirements prioritization in goal oriented requirements elicitation process","International Journal of System Assurance Engineering and Management","","0976-4348","10.1007/s13198-014-0236-3","https://doi.org/10.1007/s13198-014-0236-3","Goal oriented requirements elicitation processes are used to identify the requirements of software according to the need of stakeholders. A system may have thousands of requirements and it is difficult to prioritize such a large number of requirements when several stakeholders participate in requirements elicitation process. In literature, we identify that existing goal oriented requirements elicitation processes like KAOS, i*, AGORA do not support to prioritize the requirements when stakeholder’s preferences are in the form of linguistic variable and multi-criteria decision making approach is used in requirements elicitation process. Therefore, to address this issue, we present a method for prioritization of requirements using fuzzy based approach in goal oriented requirements elicitation process by combining α-level weighted F-preference relation and extent fuzzy analytic hierarchy process in group decision making process; and then we use binary tree sort method to get the prioritized list of requirements. Finally, the utilization of the proposed approach is demonstrated with the help of an example.","2014-12-01","2023-05-03 15:57:52","2023-05-03 15:57:52","2023-05-03 15:57:52","711-723","","4","5","","Int J  Syst  Assur  Eng  Manag","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Decision making process; Fuzzy set theory; Requirements prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C5ELH9BA","thesis","2010","Lim, Soo Ling","Social networks and collaborative filtering for large-scale requirements elicitation","","","","","http://hdl.handle.net/1959.4/50210","Within the field of software engineering, requirements elicitation is the activity in which stakeholder needs are understood. In large-scale software projects, requirements elicitation tends to be beset by three problems: information overload, inadequate stakeholder input, and biased prioritisation of requirements. The work described in this thesis addresses these problems using social networks and collaborative filtering. The work has developed StakeNet, a novel method that uses social networks to identify and prioritise stakeholders. Using StakeNet, the requirements engineer asks an initial list of stakeholders to recommend other stakeholders and stakeholder roles, builds a social network with stakeholders as nodes and their recommendations as links, and prioritises the stakeholders using a variety of social network measures. The work has also developed StakeRare, a novel method that uses social networks and collaborative filtering to identify and prioritise requirements. Using StakeRare, the requirements engineer asks the stakeholders identified by StakeNet to rate an initial list of requirements and suggest other requirements, recommends other relevant requirements to the stakeholders using collaborative filtering, and prioritises the requirements using the ratings and the stakeholders’ priority from StakeNet. Finally, to support the methods, this work has developed StakeSource, a novel software tool that automates the manual processes in StakeNet. StakeSource collects recommendations from stakeholders, builds the social network, and prioritises the stakeholders automatically. The methods and tool have been evaluated using real large-scale software projects. The empirical evaluation of both StakeNet and StakeRare using a real large-scale software project demonstrates that the methods identify a highly complete set of stakeholders and their requirements, and prioritise the stakeholders and their requirements accurately. These methods outperform the existing methods used in the project, and require significantly less time from the stakeholders and requirements engineers. StakeSource has been evaluated with real large-scale projects by practitioners. The tool is now used in major software projects, and organisations are adopting it. The methods, tool, and evaluation described in this thesis provide evidence that social networks and collaborative filtering can effectively support requirements elicitation in large-scale software projects.","2010","2023-05-03 15:57:55","2023-05-03 15:57:55","2023-05-03 15:57:55","","","","","","","","","","","","UNSW Sydney","","English","","Thesis","","","unsworks.unsw.edu.au","","DOI: 10.26190/unsworks/23395","","C:\Users\gabra\Zotero\storage\4WM3XUJI\Lim - 2010 - Social networks and collaborative filtering for la.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ITGNENC8","conferencePaper","2009","Renault, Samuel; Mendez-Bonilla, Oscar; Franch, Xavier; Quer, Carme","PABRE: Pattern-based Requirements Elicitation","2009 Third International Conference on Research Challenges in Information Science","","","10.1109/RCIS.2009.5089271","","This paper presents our PABRE method for facilitating requirements elicitation on the basis of requirement patterns with the goal of saving time and reducing errors during this activity. The process presented applies for elicitation in off-the-shelf selection projects driven by call for tenders processes and uses a requirement patterns catalogue. The process selects patterns from the catalogue that apply to the particular selection project, and convert them into the real requirements that finally configure the project requirements book. We show some benefits of the pattern approach for requirements engineers and IT consultants, as well as for customers. Finally we discuss the strengths and weaknesses of the proposal and identify some future work.","2009-04","2023-05-03 15:57:59","2023-05-03 15:57:59","","81-92","","","","","","PABRE","","","","","","","","","","","","IEEE Xplore","","ISSN: 2151-1357","","C:\Users\gabra\Zotero\storage\P2YTIBYF\Renault et al. - 2009 - PABRE Pattern-based Requirements Elicitation.pdf","","","Design engineering; requirements engineering; Knowledge engineering; Companies; Information systems; Books; Business; Information analysis; Information technology; off-the-shelf components selection; Open source software; Proposals; requirement patterns; requirements reuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 Third International Conference on Research Challenges in Information Science","","","","","","","","","","","","","","",""
"YS4QANQS","journalArticle","2020","Souza, Anderson; Ferreira, Bruna; Valentim, Natasha; Correa, Lauriane; Marczak, Sabrina; Conte, Tayana","Supporting the teaching of design thinking techniques for requirements elicitation through a recommendation tool","IET Software","","1751-8814","10.1049/iet-sen.2019.0300","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0300","The development of systems with different features becomes increasingly challenging, given the actual context, implying on the search for new approaches for requirements elicitation. One of these approaches is design thinking (DT), a process of encouraging innovation used by designers, which presents itself as fundamental in the success of new products. This scenario motivates the importance of knowing DT concepts and their techniques, which can support requirements elicitation. In this context, the authors present DTA4RE (DT assistant for requirements elicitation), a tool that suggests DT techniques for requirements elicitation, which can be used by both students and professionals who would like to adopt DT in their projects. The DTA4RE is composed of a set of 27 techniques that could be suggested to the user through a recommendation questionnaire as well as an open repository with material to support the application of these techniques. Results from the authors’ two empirical studies with software engineering undergraduate and graduate students and industry professionals indicate that DTA4RE has helped in the selection of and in the learning of DT techniques when considering real problems. Most participants considered the questions from the recommendation questionnaire easy to answer, and the techniques suggested by the tool useful.","2020","2023-05-03 15:58:00","2023-05-03 15:58:00","2023-05-03 15:58:00","693-701","","6","14","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0300","","C:\Users\gabra\Zotero\storage\QP3PYN5J\Souza et al. - 2020 - Supporting the teaching of design thinking techniq.pdf","","","software engineering; decision making; project management; requirements elicitation; computer aided instruction; computer science education; design engineering; design thinking techniques; DT assistant; DT techniques; DTA4RE; educational courses; engineering education; formal specification; innovation management; knowing DT concepts; recommendation questionnaire; teaching","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CS49JJKJ","conferencePaper","2017","Garg, Nikita; Sadiq, Mohd.; Agarwal, Pankaj","GOASREP: Goal Oriented Approach for Software Requirements Elicitation and Prioritization Using Analytic Hierarchy Process","Proceedings of the 5th International Conference on Frontiers in Intelligent Computing: Theory and Applications","978-981-10-3156-4","","10.1007/978-981-10-3156-4_28","","Software requirements elicitation is a valuable process for the identification of software requirements according to the need of different types of stakeholders. There are different methods for the elicitation of software requirements like traditional methods, group elicitation methods, goal oriented methods, etc. Among these methods, goal oriented methods have received much recognition by software requirements engineering community. On the basis of our literature review, we identify that “goal oriented requirements elicitation processes do not support how to select and prioritize the requirements using analytic hierarchy process on the basis of the cost and effort criteria”. Therefore, in-order to address this issue, we proposed a method, i.e. GOASREP, for the elicitation of software requirements using “goal oriented approach” and the prioritization of the elicited requirements using “analytic hierarchy process”. In the proposed method, we used function point analysis approach for the estimation of the cost of each requirement. COCOMO model has been applied to estimate the effort of each requirement. Finally, the usage of the GOASREP is explained using Institute Examination System.","2017","2023-05-03 16:01:32","2023-05-03 16:01:32","","281-287","","","","","","GOASREP","Advances in Intelligent Systems and Computing","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Requirements elicitation; Analytic hierarchy process; COCOMO model; Function point analysis; Goal oriented requirements elicitation process","Satapathy, Suresh Chandra; Bhateja, Vikrant; Udgata, Siba K.; Pattnaik, Prasant Kumar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PDHECRPX","conferencePaper","2007","Laporti, Viviane; Borges, Marcos R. S.; Braganholo, Vanessa P.","A Collaborative Approach to Requirements Elicitation","2007 11th International Conference on Computer Supported Cooperative Work in Design","","","10.1109/CSCWD.2007.4281527","","The requirements elicitation of a system is a complex task. The different viewpoints and the need for negotiation make this stage of the software development process risky and susceptible to failures. The traditional elicitation approach based on interviews and questionnaires do not help. This paper proposes an approach founded on collective knowledge to progressively build the system requirements from a narrative of use stories to the definition of use cases. The proposed solution consists of a knowledge model based on stories about the system, a collective construction method, and a tool to support interaction.","2007-04","2023-05-03 16:01:34","2023-05-03 16:01:34","","734-739","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Collaborative work; Internet; Software tools; Information analysis; Cognitive science; Collaborative Design; Collaborative tools; CSCW; Informatics; International collaboration; Vocabulary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2007 11th International Conference on Computer Supported Cooperative Work in Design","","","","","","","","","","","","","","",""
"WDWBV7T7","conferencePaper","2014","Fotrousi, Farnaz; Fricker, Samuel A.; Fiedler, Markus","Quality requirements elicitation based on inquiry of quality-impact relationships","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","10.1109/RE.2014.6912272","","Quality requirements, an important class of non-functional requirements, are inherently difficult to elicit. Particularly challenging is the definition of good-enough quality. The problem cannot be avoided though, because hitting the right quality level is critical. Too little quality leads to churn for the software product. Excessive quality generates unnecessary cost and drains the resources of the operating platform. To address this problem, we propose to elicit the specific relationships between software quality levels and their impacts for given quality attributes and stakeholders. An understanding of each such relationship can then be used to specify the right level of quality by deciding about acceptable impacts. The quality-impact relationships can be used to design and dimension a software system appropriately and, in a second step, to develop service level agreements that allow re-use of the obtained knowledge of good-enough quality. This paper describes an approach to elicit such quality-impact relationships and to use them for specifying quality requirements. The approach has been applied with user representatives in requirements workshops and used for determining Quality of Service (QoS) requirements based the involved users' Quality of Experience (QoE). The paper describes the approach in detail and reports early experiences from applying the approach.","2014-08","2023-05-03 16:01:38","2023-05-03 16:01:38","","303-312","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\KNTM27AA\Fotrousi et al. - 2014 - Quality requirements elicitation based on inquiry .pdf","","","Conferences; Prototypes; Software systems; Decision making; Requirement elicitation; Diabetes; non-functional requirements; quality attributes; quality of experience (QoE); Quality of service; quality of service (QoS)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"IPLL4XDI","conferencePaper","2012","Duarte, Diogo; Farinha, Carla; da Silva, Miguel Mira; da Silva, Alberto Rodrigues","Collaborative Requirements Elicitation with Visualization Techniques","2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises","","","10.1109/WETICE.2012.14","","Requirements elicitation is one of the first activities that tries to define the project scope and elicit user requirements. This activity relies in communication and cooperation between stakeholders which makes collaboration crucial for the success of this activity, especially in global software development projects with distributed teams and stakeholders. Despite the need for collaboration, lack of user input is still one of the problems of requirements elicitation, having negative consequences on project success. In this paper we present a proposal to involve stakeholders during requirements elicitation through the support of online collaboration and the usage of visualization techniques to stimulate stakeholders and increase their awareness about requirements. We are following action research methodology and present the results of a recent case study.","2012-06","2023-05-03 16:01:40","2023-05-03 16:01:40","","343-348","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1524-4547","","","","","Collaboration; Prototypes; Communities; Visualization; requirements elicitation; Proposals; action research; Color; Data visualization; online collaboration; requirements visualization; user involvement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises","","","","","","","","","","","","","","",""
"28EF3T9N","conferencePaper","2008","Miyazaki, Seiya; Mead, Nancy; Zhan, Justin","Computer-Aided Privacy Requirements Elicitation Technique","2008 IEEE Asia-Pacific Services Computing Conference","","","10.1109/APSCC.2008.263","","The legislative penalties and economic penalties for privacy violations are more serious for a service provider these days. In spite of demonstrating that it is willing and able to protect the privacy of information, a service provider developing a privacy-compliant system faces two challenges; technical complexities and legal complexities. In this paper, we propose a computer-aided privacy requirements elicitation technique (PRET) that helps software developers elicit privacy requirements more efficiently in the early stages of software development. The goal of the PRET tool is to accelerate the elicitation process and prevent privacy requirements leaks by using a general privacy requirements database derived from privacy laws and empirical privacy requirements. We also show the results of integrating the PRET tool with the security quality requirements engineering (SQUARE) methodology and provide evidence of the efficacy of the resultant tool.","2008-12","2023-05-03 16:01:49","2023-05-03 16:01:49","","367-372","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Protection; Costs; Guidelines; Acceleration; Data privacy; Information security; Law; Legal factors; Legislation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 IEEE Asia-Pacific Services Computing Conference","","","","","","","","","","","","","","",""
"DUKQZ64D","journalArticle","2008","Aranda, Gabriela N; Vizcaíno, Aurora; Cechich, Alejandra; Piattini, Mario","Strategies to Minimize Problems in Global Requirements Elicitation","CLEI Electronic Journal","","0717-5000","10.19153/cleiej.11.1.3","http://192.168.10.19:8080/cleiej/index.php/cleiej/article/view/277","Many challenges arise in global software development projects, most of which are related to the lack of face-to-face communication and people’s need to feel comfortable with the technology that they use. In this paper we introduce a methodology to detect the problems which may occur during the global requirement elicitation process and propose solutions to reduce them.","2008-06-01","2023-05-03 16:01:59","2023-05-03 16:02:00","2023-05-03 16:01:59","","","1","11","","CLEIej","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\SG2UW46V\Aranda et al. - 2008 - Strategies to Minimize Problems in Global Requirem.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LDYXEXG8","book","2010","Sajjad, Umar; Hanif, Muhammad Qaisar","Issues and Challenges of Requirement Elicitation in Large Web Projects","","","","","https://urn.kb.se/resolve?urn=urn:nbn:se:bth-3216","DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.","2010","2023-05-03 16:02:13","2023-05-03 16:02:13","2023-05-03 16:02:13","","","","","","","","","","","","","","eng","","","","","www.diva-portal.org","","","","C:\Users\gabra\Zotero\storage\IFPSNN7E\Sajjad and Hanif - 2010 - Issues and Challenges of Requirement Elicitation i.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IQVGSZ23","conferencePaper","2012","Zapata, Sergio; Torres, Estela; Sevilla, Gustavo; Aballay, Laura; Reus, Marcelo","Effectiveness of traditional software requirement elicitation techniques applied in distributed software development scenarios","2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)","","","10.1109/CLEI.2012.6427200","","In the last years, global software development has grown as a business model and this trend is accentuated. Benefits of these new processes of building distributed software are constrained by difficulties associated with the geographic and cultural distance between team members. In this context, the software requirement elicitation, key activity in the software engineering process, supports perhaps the greatest challenges due to high communicational flow required at this stage of software process. This paper presents a preliminary comparative study of the effectiveness of traditional elicitation techniques applied to distributed scenarios of software construction.","2012-10","2023-05-03 16:02:15","2023-05-03 16:02:15","","1-7","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Collaborative software; Collaborative work; Software engineering; Software; Electronic mail; Cultural differences; Distributed Requirement Elicitation; IP networks; Requirement Software Engineering; Software Distributed Development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)","","","","","","","","","","","","","","",""
"GCC6W3BV","conferencePaper","2008","Britos, Paola; Dieste, Oscar; García-Martínez, Ramón","Requirements Elicitation in Data Mining for Business Intelligence Projects","Advances in Information Systems Research, Education and Practice","978-0-387-09682-7","","10.1007/978-0-387-09682-7-9_12","","There are data mining methodologies for business intelligence (DM-BI) projects that highlight the importance of planning an ordered, documented, consistent and traceable requirement’s elicitation throughout the entire project. However, the classical software engineering approach is not completely suitable for DM-BI projects because it neglects the requirements specification aspects of projects. This article focuses on identifying concepts for understand DM-BI project domain from DM-BI field experience, including how requirements can be educed by a proposed DM-BI project requirements elicitation process and how they can be documented by a template set.","2008","2023-05-03 16:02:17","2023-05-03 16:02:17","","139-150","","","","","","","IFIP – The International Federation for Information Processing","","","","Springer US","Boston, MA","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\TAV7DPLZ\Britos et al. - 2008 - Requirements Elicitation in Data Mining for Busine.pdf","","","Requirement Engineer; Requirement Elicitation; Business Intelligence; Contingency Plan; General Task","Avison, David; Kasper, George M.; Pernici, Barbara; Ramos, Isabel; Roode, Dewald","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C82G5Y2T","report","","","Lecture Notes on Requirements Elicitation","","","","","https://apps.dtic.mil/sti/citations/ADA278536","Requirements elicitation is the first of the four steps in software requirements engineering the others being analysis, specification, and validation. Software engineers use several elicitation techniques. To facilitate teaching these techniques, materials are provided to support an introductory lecture and four lectures on specific techniques joint application design, brainstorming, interviewing, and the PIECES framework. A role-playing exercise is provided that allows students to experience each of the techniques. Information for instructors includes educational objectives, pedagogical considerations, additional exercises, and a bibliography. Joint application design, Software engineering education, Requirements, Requirements elicitation, Software requirements.","","2023-05-03 16:02:20","2023-05-03 16:02:20","2023-05-03 16:02:20","","","","","","","","","","","","","","en","","","","","apps.dtic.mil","","Section: Technical Reports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TM55LT5D","journalArticle","2017","Taheri, Laleh; Shafazand, Mohammad Yasser; Pa, Noraini Che; Abdullah, Rusli; Abdullah, Salfarina","A knowledge audit model for requirement elicitation: A case study to assess knowledge in requirement elicitation","Knowledge and Process Management","","1099-1441","10.1002/kpm.1553","https://onlinelibrary.wiley.com/doi/abs/10.1002/kpm.1553","This paper aims to develop a knowledge audit (KA) model with the focus on knowledge assessment in the requirements elicitation process (REP) to allay the problems of REP regarding knowledge communication. The principal problems with REP are knowledge conflict and the failure to mention a variety of knowledge and requirements changes. Despite of many existing studies relating to KA, inadequate effort has been directed towards investigating the full part played by the KA process in REP. The purpose of this paper is to bridge this gap using a software prototype that uses the KA model in the REP. This study proposes a KA model using an iterative triangulation method. The proposed model is validated through a case study by using a software prototype developed based on the proposed KA model to see if this KA model is effective for software developers in REP by improving the completeness, correctness, and understandability of the elicited requirements knowledge. Research findings are based on responses of 40 respondents from software development organizations. The results of case study confirmed the effectiveness of KA model for REP with respect to completeness, correctness, and understandability. This research answers the call to assess knowledge in REP by developing a KA model and prototype to fill the existing gap in this area. Overall, a KA model for REP is introduced and validated to identify and assess knowledge that supports knowledge communication in REP.","2017","2023-05-03 16:02:22","2023-05-03 16:02:22","2023-05-03 16:02:22","257-268","","4","24","","","A knowledge audit model for requirement elicitation","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/kpm.1553","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2UPI92CW","conferencePaper","2008","Castro-Herrera, Carlos; Duan, Chuan; Cleland-Huang, Jane; Mobasher, Bamshad","Using Data Mining and Recommender Systems to Facilitate Large-Scale, Open, and Inclusive Requirements Elicitation Processes","2008 16th IEEE International Requirements Engineering Conference","","","10.1109/RE.2008.47","","Requirements related problems, especially those originating from inadequacies in the human-intensive task of eliciting stakeholderspsila needs and desires, have contributed to many failed and challenged software projects. This is especially true for large and complex projects in which requirements knowledge is distributed across thousands of stakeholders. This short paper introduces a new process and related framework that utilizes data mining and recommender technologies to create an open, scalable, and inclusive requirements elicitation process capable of supporting projects with thousands of stakeholders. The approach is illustrated and evaluated using feature requests mined from an open source software product.","2008-09","2023-05-03 16:02:24","2023-05-03 16:02:24","","165-168","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","","","","Collaboration; Large-scale systems; Requirements elicitation; Systems engineering and theory; Open source software; Collaborative tools; Data engineering; Data mining; feature requests; Paper technology; recommender systems; Recommender systems; Yarn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2008 16th IEEE International Requirements Engineering Conference","","","","","","","","","","","","","","",""
"E47EWDKT","conferencePaper","2014","Muqeem, Mohd.; Beg, Mohd. Rizwan","Validation of requirement elicitation framework using finite state machine","2014 International Conference on Control, Instrumentation, Communication and Computational Technologies (ICCICCT)","","","10.1109/ICCICCT.2014.6993145","","Requirement elicitation is considered to be a very vital activity in requirement engineering. It is a proven fact that improper elicitation of requirements leads to a project failure. So for the improvement in the software industry's success rate more attention is required in the elicitation process. In order to help elicitor to understand and select different methods, many frameworks are proposed that highlight the key issues of requirement elicitation but most of the frameworks are theoretical in nature. They lack practical guidance and extensive study of a wide variation of methods for requirements Elicitation. In this paper we propose a framework for requirement elicitation that support elicitor to understand and select methods for requirement elicitation and also addresses three core problem areas of requirements elicitation, pre-domain development, stakeholders management and elicitation technique selection that were identified as lacking and needed guidance and support. Finally we validate the framework of effective requirement elicitation using finite state machine. Test cases are generated for the validation of the framework. The approach for generating the test cases through FSM is very reliable and efficient and does not support for the invalid test cases. Valid input strings are generated as test cases.","2014-07","2023-05-03 16:02:27","2023-05-03 16:02:27","","1210-1216","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Software; Unified modeling language; Requirement Elicitation; Algorithm design and analysis; Automata; Elicitor; Instruments; Neural networks; Silicon; Stakeholder; Test Cases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 International Conference on Control, Instrumentation, Communication and Computational Technologies (ICCICCT)","","","","","","","","","","","","","","",""
"NZIVS9JN","conferencePaper","2007","Zong-yong, LI; Zhi-xue, WANG; Ying-ying, YANG; Yue, WU; Ying, LIU","Towards a Multiple Ontology Framework for Requirements Elicitation and Reuse","31st Annual International Computer Software and Applications Conference (COMPSAC 2007)","","","10.1109/COMPSAC.2007.216","","In order to elicit system requirements correctly and unambiguously, researchers in the requirements engineering community have been studying and developing a number of ontology based approaches. Many of them adopt the single ontology schema, which utilizes a global ontology to describe static knowledge for all domains. However, such ontologies lack dynamic conceptual description and they are difficult to reuse. Based on KADS knowledge modeling, this paper proposes a multiple ontology framework for requirements elicitation and reuse. Besides encapsulating the ontology of domain knowledge, it also includes the top level ontology, task ontology and application ontology. The framework provides a more powerful knowledge base for requirements elicitation and definitely defines the responsibilities of all stakeholders. The process of using the framework is discussed at last.","2007-07","2023-05-03 16:02:28","2023-05-03 16:02:28","","189-195","","","1","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 0730-3157","","","","","Programming; Software quality; Knowledge engineering; Application software; Automation; Information systems; Ontologies; Computer applications; Programmable logic arrays; Thesauri","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","31st Annual International Computer Software and Applications Conference (COMPSAC 2007)","","","","","","","","","","","","","","",""
"F9A7ZEGQ","journalArticle","2022","Canedo, Edna Dias; Bandeira, Ian Nery; Calazans, Angelica Toffano Seidel; Costa, Pedro Henrique Teixeira; Cançado, Emille Catarine Rodrigues; Bonifácio, Rodrigo","Privacy requirements elicitation: a systematic literature review and perception analysis of IT practitioners","Requirements Engineering","","1432-010X","10.1007/s00766-022-00382-8","https://doi.org/10.1007/s00766-022-00382-8","During the software development process and throughout the software lifecycle, organizations must guarantee users’ privacy by protecting personal data. There are several studies in the literature proposing methodologies, techniques, and tools for privacy requirements elicitation. These studies report that practitioners must use systematic approaches to specify these requirements during initial software development activities to avoid users’ data privacy breaches. The main goal of this study is to identify which methodologies, techniques, and tools are used in privacy requirements elicitation in the literature. We have also investigated Information Technology (IT) practitioners’ perceptions regarding the methodologies, techniques, and tools identified in the literature. We have carried out a systematic literature review (SLR) to identify the methodologies, techniques, and tools used for privacy requirements elicitation. Besides, we have surveyed IT practitioners to understand their perception of using these techniques and tools in the software development process. We have found several methodologies, techniques, and tools proposed in the literature to carry out privacy requirements elicitation. Out of 78 studies cataloged within the SLR, most of them did not verify their methodologies and techniques in a practical case study or illustrative contexts (38 studies), and less than 35% of them (26 studies) experimented with their propositions within an industry context. The Privacy Safeguard method (PriS) is the best known among the 198 practitioners in the industry who participated in the survey. Moreover, use cases and user story are their most-used techniques. This qualitative and quantitative study shows a perception of IT practitioners different from those presented in other research papers and suggests that methodologies, techniques, and tools play an important role in IT practitioners’ perceptions about privacy requirements elicitation.","2022-06-11","2023-05-03 16:02:29","2023-05-03 16:02:29","2023-05-03 16:02:29","","","","","","Requirements Eng","Privacy requirements elicitation","","","","","","","en","","","","","Springer Link","","","","","","","Systematic literature review; Methodologies; Privacy requirements elicitation; Techniques; Tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"25BPX98I","conferencePaper","2020","Giannakopoulou, Dimitra; Mavridou, Anastasia; Rhein, Julian; Pressburger, Thomas; Schumann, Johann; Shi, Nija","Formal Requirements Elicitation with FRET","","","","","https://ntrs.nasa.gov/citations/20200001989","FRET is a tool for writing, understanding, formalizing and analyzing requirements. Users write requirements in an intuitive, restricted natural language, called FRETISH, with precise, unambiguous meaning. For a FRETISH requirement, FRET: 1) produces natural language and diagrammatic explanations of its exact meaning, 2) formalizes the requirement in logics, and 3) supports interactive simulation of produced logic formulas to ensure that they capture user intentions. FRET connects to analysis tools by facilitating the mapping between requirements and models/code, and by generating verification code. FRET is available open source at https://github.com/NASA-SW-VnV/fret; a video can be accessed at : https://tinyurl.com/fretForREFSQ.","2020-03-24","2023-05-03 16:02:33","2023-05-03 16:02:33","2023-05-03 16:02:32","","","","","","","","","","","","","Pisa","","","","","","NASA NTRS","","NTRS Author Affiliations: NASA Ames Research Center, Stinger Ghaffarian Technologies Inc. (SGT Inc.), Technische Univ. NTRS Report/Patent Number: ARC-E-DAA-TN77785 NTRS Document ID: 20200001989 NTRS Research Center: Ames Research Center (ARC)","","C:\Users\gabra\Zotero\storage\KC55DVUE\Giannakopoulou et al. - 2020 - Formal Requirements Elicitation with FRET.pdf","","","Computer Programming And Software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","International Working Conference on Requirements Engineering: Foundation for Software Quality (REFSQ-2020)","","","","","","","","","","","","","","",""
"FNT6K8FV","thesis","2007","Coulin, Chad Raymond","A situational approach and intelligent tool for collaborative requirements elicitation","","","","","https://theses.hal.science/tel-00195833","Requirements elicitation is a fundamental part of the software development process, and widely regarded as one of its more challenging activities. Many of the current techniques, approaches, and tools are either unknown or too complex for novices, resulting in a significant gap between requirements elicitation theory and practice. Just as important, is the current gap between expert and novice analysts, which can be attributed to the extensive skill set and range of experiences that is often required to successfully conduct this difficult yet vital activity. Consequently, in this research we investigated both the state of the art and the state of practice, in order to develop and evaluate an approach and a tool to support novice analysts elicit requirements for software systems in a workshop environment. The first stage of the research was a literature review, which involved a thorough review and critical analysis of existing theory on and around the area of requirements elicitation. This was followed by a survey of practice, which consisted of in-depth interviews with experts, and an online questionnaire for novices, used to elicit approach guidelines and tool features. The OUTSET approach was then designed, and the supporting tool MUSTER constructed. The final stage of the research involved the evaluation of the approach and tool through a case study, case study experiment, and formal experiment. The empirical evaluations conducted showed that using the MUSTER tool improved the overall effectiveness of the requirements elicitation process, while the underlying OUTSET approach improved the overall efficiency. It was also shown that the combination of the approach and tool provided a collective system that was both useful and useable. In the experiment conducted, the MUSTER tool received more than three times the score of the manual tool for effectiveness, and more than double for usability. In addition, the combination of research methods used, and the successful a pplication of Situational Method Engineering (SME) and Group Support System (GSS) principles for the approach and tool respectively, was both novel and unique from any other previous work on requirements elicitation.","2007-09-25","2023-05-03 16:02:35","2023-05-03 16:02:35","2023-05-03 16:02:35","","","","","","","","","","","","Université Paul Sabatier - Toulouse III","","en","","phdthesis","","","theses.hal.science","","","","C:\Users\gabra\Zotero\storage\ZNVVD5ZL\Coulin - 2007 - A situational approach and intelligent tool for co.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QYC7ZZIJ","journalArticle","2022","Cheligeer, Cheligeer; Huang, Jingwei; Wu, Guosong; Bhuiyan, Nadia; Xu, Yuan; Zeng, Yong","Machine learning in requirements elicitation: a literature review","AI EDAM","","0890-0604, 1469-1760","10.1017/S0890060422000166","https://www.cambridge.org/core/journals/ai-edam/article/machine-learning-in-requirements-elicitation-a-literature-review/9B3886539161631E08661FDBCA4192BB","A growing trend in requirements elicitation is the use of machine learning (ML) techniques to automate the cumbersome requirement handling process. This literature review summarizes and analyzes studies that incorporate ML and natural language processing (NLP) into demand elicitation. We answer the following research questions: (1) What requirement elicitation activities are supported by ML? (2) What data sources are used to build ML-based requirement solutions? (3) What technologies, algorithms, and tools are used to build ML-based requirement elicitation? (4) How to construct an ML-based requirements elicitation method? (5) What are the available tools to support ML-based requirements elicitation methodology? Keywords derived from these research questions led to 975 records initially retrieved from 7 scientific search engines. Finally, 86 articles were selected for inclusion in the review. As the primary research finding, we identified 15 ML-based requirement elicitation tasks and classified them into four categories. Twelve different data sources for building a data-driven model are identified and classified in this literature review. In addition, we categorized the techniques for constructing ML-based requirement elicitation methods into five parts, which are Data Cleansing and Preprocessing, Textual Feature Extraction, Learning, Evaluation, and Tools. More specifically, 3 categories of preprocessing methods, 3 different feature extraction strategies, 12 different families of learning methods, 2 different evaluation strategies, and various off-the-shelf publicly available tools were identified. Furthermore, we discussed the limitations of the current studies and proposed eight potential directions for future research.","2022","2023-05-03 16:02:39","2023-05-03 16:02:39","2023-05-03 16:02:39","e32","","","36","","","Machine learning in requirements elicitation","","","","","","","en","","","","","Cambridge University Press","","Publisher: Cambridge University Press","","C:\Users\gabra\Zotero\storage\SLF66YPS\Cheligeer et al. - 2022 - Machine learning in requirements elicitation a li.pdf","","","requirement elicitation; Data-driven; machine learning; natural language processing; requirement classification; requirement engineering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R3Z5NETP","journalArticle","2016","Ramadan, Nagy; Abdelaziz, Ahmed; Abdelghany, Abdelghany","A Hybrid Machine Learning Model for Selecting Suitable Requirements Elicitation Techniques","International Journal of Computer Science and Information Security,","","","","","Requirements elicitation is the first and the most critical phase of Requirements Engineering (RE). Many techniques have been proposed to support the elicitation process. Each technique has its strengths and weaknesses. This variety makes the selection of technique or combination of techniques for a specific project a difficult task. Mostly techniques are selected based on personal preferences rather than on attributes of project, technique, and stakeholders. In this paper, the researchers propose a three-component approach for elicitation techniques selection. First, a literature review is conducted to identify the attributes affecting techniques selection and common elicitation techniques. Second, a multiple regression model is built to analyze these attributes in order to find the critical attributes influencing techniques selection. Finally, an Artificial Neural Network (ANN) based model for selecting adequate elicitation techniques for a given project is proposed. The ANN model helps reduce the human involvements in this process. It was implemented using Neural Network Fitting Tool in MATLAB. The network has accuracy of 81%. The ANN model was empirically validated by conducting a case study in a software company.","2016-06-30","2023-05-03 16:06:29","2023-05-03 16:06:29","","380-391","","","14","","International Journal of Computer Science and Information Security,","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\6KVBJJXF\Ramadan et al. - 2016 - A Hybrid Machine Learning Model for Selecting Suit.pdf; ","https://www.researchgate.net/profile/Nagy-Ramadan/publication/305636898_A_Hybrid_Machine_Learning_Model_for_Selecting_Suitable_Requirements_Elicitation_Techniques/links/5798041e08aec89db7b9b320/A-Hybrid-Machine-Learning-Model-for-Selecting-Suitable-Requirements-Elicitation-Techniques.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TRN83AA4","journalArticle","2015","Bhatti, Shahid Nazir; Usman, Maria; Jadi, Amr A.","Validation to the Requirement Elicitation Framework via Metrics","ACM SIGSOFT Software Engineering Notes","","0163-5948","10.1145/2815021.2815031","https://doi.org/10.1145/2815021.2815031","Requirement elicitation is the most significant factor in the requirement engineering process. It is already proven fact that improper elicitation of the requirements leads to the failure of the project, product. To improve the process quality and of that of industry we need a better elicitation technique or elicitation process (framework) to make it better. In this paper we have proposed a methodology that helps elicitor to validate the requirement elicitation using prioritization techniques and framework and further it will help the elicitor to effectively, efficiently select the elicitation technique.","2015-09-14","2023-05-03 16:06:35","2023-05-03 16:06:35","2023-05-03 16:06:35","1–7","","5","40","","SIGSOFT Softw. Eng. Notes","","","","","","","","","","","","","ACM Digital Library","","","","","","","Functional Requirement (FR); Non Functional Requirement (NFR); Requirement Elicitation (RE); Verification and Validation (V & V)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4N9H6MKL","journalArticle","2018","Ramdhani, Muhammad Ali; Maylawati, Dian Sa'adillah; Amin, Abdusy Syakur; Aulawi, Hilmi","Requirements elicitation in software engineering","International Journal of Engineering & Technology (UEA)","","2227-524X","","https://www.sciencepubco.com","Software Engineering (SE) is a discipline, concept, method that focus on all aspects related to software production. SE must adapt organized system and approach in building software. The objective of this article is to discuss needs elicitation in SE, so that the design can be done through utilizing appropriate tools and techniques based on the problem to be solved, restrictions and need that must be met, as well as resource availability. The method used in this article is literature review as a major source of problem analy-sis. In the next phase, the main topic of the article is clarified, validated, and verified by the model of the Focus Group Discussion (FGD). The respondents of FGD are lecturers of Informatics Department at UIN Sunan Gunung Djati Bandung. Requirements elici-tation is in-dept and comprehensive process of finding information from all stakeholders in relation to the built software. The result of requirements elicitation is the explanation from every stakeholder with natural language related to the will and interest of the built software. The mechanism of finding information can be done through observation, questionnaire, interview, and documentary study, which are then tested with data validation and verification in FGD. The product of requirements elicitation is the User Re-quirement Document (URD) that can be used as an early artifact in software development process. Furthermore, URD is used as a reference in tracking the suitability between the function of software and the needs of stakeholder. This article formulated analysis approach of SE need, so that it is easily modified, adaptive to growing software complexity, and connected with the analysis of hardware.","2018-05-22","2023-05-03 16:06:42","2023-05-03 16:06:42","2023-05-03 16:06:42","772-775","","2.19","7","","","","","","","","","","en","","","","","etheses.uinsgd.ac.id","","Number: 2.19 Publisher: Science Publishing Corporation","","C:\Users\gabra\Zotero\storage\RZT6EJ6L\Ramdhani et al. - 2018 - Requirements elicitation in software engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6FAHTUV9","journalArticle","2017","Joseph, Elijah","Survey on Requirement Elicitation Techniques: It's Effect on Software Engineering","International Journal of Innovative Research in Computer and Communication Engineering","","","","","Requirement Elicitation is one of the important factors in developing any new application. Most of systems fail just because of wrong elicitation practice. A requirement may be defined as a demand or need. In software engineering, a requirement is a description of what a system should do. System may have dozen to thousands of requirements. Without the elicitation techniques it is impossible to find out requirements and the needs of the developing system. It provides base for the developer to construct a structure of proposed system keeping in view the wish list of stake holders. This paper is based on understanding elicitation techniques and their usage in real time applications, by implementing the Elicitation techniques for knowing the needs of stakeholder so that system developer can get clear view of requirement for the developing system. Furthermore this paper provide the flexibility to requirements engineers to know the characteristics and effectiveness of every techniques, it will serve as a guideline in selecting a particular elicitation technique in respect to the type of application and situation.","2017-05-01","2023-05-03 16:06:46","2023-05-03 16:06:46","","9201-9215","","","5","","International Journal of Innovative Research in Computer and Communication Engineering","Survey on Requirement Elicitation Techniques","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\4QHM2TPF\Joseph - 2017 - Survey on Requirement Elicitation Techniques It's.pdf; ","https://www.researchgate.net/profile/Elijah-Joseph/publication/317606075_Survey_on_Requirement_Elicitation_Techniques_It's_Effect_on_Software_Engineering/links/5942f07f0f7e9b6910eae62d/Survey-on-Requirement-Elicitation-Techniques-Its-Effect-on-Software-Engineering.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"F82YEJ3L","journalArticle","2018","Saad, Aslina; Dawson, Christian","Requirement elicitation techniques for an improved case based lesson planning system","Journal of Systems and Information Technology","","1328-7265","10.1108/JSIT-12-2016-0080","https://doi.org/10.1108/JSIT-12-2016-0080","Purpose This paper presents a recommendation on how one requirement elicitation technique supports the other techniques in defining system requirement for a case-based system. A case-based lesson planning system aims to assist teachers in constructing quality lesson plans through its cycle which begins with case retrieval. To retrieve relevant lesson plans, appropriate inputs should be used and the intended output needs to be identified via suitable requirement elicitation techniques. The use of a single technique might result in inadequate requirement specification, thus affecting the quality of the output requirements as well as quality of the final information system. Design/methodology/approach Requirement elicitation was carried out in three phases: phase I involved document review, phase II was an interview and phase III used a survey. Respondents of the study comprised experienced teachers as well as new teachers. This research used both qualitative and quantitative approaches to answer the research questions, which involved semi-structured interviews, document review and survey to collect the relevant data. Documents were reviewed by analysing lesson plans from three different countries. In addition, a review of lesson plans prepared by teachers and the standard syllabus were carried out. Findings from the document review were used in structured interviews using a teach-back technique, sorting and matrix of attribute-values. A questionnaire was then constructed based on the interviews and document review. Findings The findings of this initial study, as part of a larger research investigation, would help in knowledge modelling and representation. This will contribute to effective case retrieval via good design of the system input and output. The study identifies important elements of a lesson plan according to their ranking. Keywords that were used by teachers as input for retrieval were identified together with the expected output. Research limitations/implications The main goal of requirement elicitation is to specify complete and detailed requirements of the proposed system. There are two main types of requirement: functional and non-functional requirements. This paper only focuses on functional requirements – specifically case retrieval with appropriate input and output. Practical implications Various requirement engineering (RE) techniques can be applied in different phases of requirement elicitation. Suitable technique should be chosen at different phases of RE, as it is important for triangulation purposes. Incomplete RE will affect the modelling part of system development, and, thus, affect the design and implementation of an information system. Social implications Software engineer or anybody involved in system development should plan accordingly for the RE process. They should be creative and reasonable in selecting suitable RE techniques to be applied. Originality/value This study aims to gain understanding of the various aspects of lesson planning. Crucial knowledge in lesson planning that was gathered from the elicitation phase is modelled to have a good understanding of the problems and constraints among teachers. The findings of this initial study, as part of a larger research investigation, would help in knowledge modelling and representation. This will contribute to effective case retrieval via a good design of the system input and output.","2018-01-01","2023-05-03 16:07:02","2023-05-03 16:07:02","2023-05-03 16:07:02","19-32","","1","20","","","","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Publishing Limited","","C:\Users\gabra\Zotero\storage\RWE23LNB\Saad and Dawson - 2018 - Requirement elicitation techniques for an improved.pdf","","","Requirement elicitation; Document review; Interview; Lesson plan; Requirement analysis; Survey","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K5JQUFIU","journalArticle","2009","Laporti, Viviane; Borges, Marcos R. S.; Braganholo, Vanessa","Athena: A collaborative approach to requirements elicitation","Computers in Industry","","0166-3615","10.1016/j.compind.2009.02.011","https://www.sciencedirect.com/science/article/pii/S0166361509000499","The quality of the requirements is crucial for a project's success. Requirements elicitation, however, is not an easy task. Viewpoint, mental model and expectation differences among users and analysts make this task hard and conflicting. In many cases, the clients are not completely sure about their real needs. In others, the current work process does not correspond to management expectations. In this paper, we try to overcome these problems by presenting Athena, an approach founded on collective knowledge to progressively build the system requirements from a narrative of user stories to the definition of use cases. Athena is a collaborative approach to elicit requirements. It is based on group storytelling, where stakeholders tell stories about current and past systems that support a given activity. The stories are merged to form a single story. Stories are then transformed into scenarios, and from scenarios to use cases. Our solution consists of a knowledge model based on stories about the system, a collective construction method, and a tool to support interactions. We have conducted experimental analyses to show the effectiveness of the proposed approach.","2009-08-01","2023-05-03 16:07:08","2023-05-03 16:07:08","2023-05-03 16:07:08","367-380","","6","60","","Computers in Industry","Athena","Collaborative Engineering: from Concurrent Engineering to Enterprise Collaboration","","","","","","en","","","","","ScienceDirect","","","","","","","Collaboration; Requirements; Group storytelling; Use cases","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PLFJ2KIH","journalArticle","2016","Menéndez, Danielle; Caetano da Silva, Paulo","A Requirement Elicitation Process for BI Projects","Lecture Notes on Software Engineering","","","10.7763/LNSE.2016.V4.218","","","2016-01-01","2023-05-03 16:07:16","2023-05-03 16:07:16","","20-26","","","4","","Lecture Notes on Software Engineering","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\6EXK6IBV\Menéndez and Caetano da Silva - 2016 - A Requirement Elicitation Process for BI Projects.pdf; ","https://www.researchgate.net/profile/Paulo-Caetano-Da-Silva/publication/276316837_A_Requirement_Elicitation_Process_for_BI_Projects/links/5670454008aececfd55315f9/A-Requirement-Elicitation-Process-for-BI-Projects.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3GB7RTGP","journalArticle","","Sharmila, P; Umarani, R","A walkthrough of Requirement Elicitation Techniques","International Journal of Engineering Research and Applications","","","","","","","2023-05-03 16:07:18","2023-05-03 16:07:18","","","","4","1","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\2BGRJ4AF\Sharmila and Umarani - A walkthrough of Requirement Elicitation Technique.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UCDEKM56","conferencePaper","2005","Hong, Dan; Chiu, Dickson K. W.; Shen, Vincent Y.","Requirements elicitation for the design of context-aware applications in a ubiquitous environment","Proceedings of the 7th international conference on Electronic commerce","978-1-59593-112-2","","10.1145/1089551.1089658","https://doi.org/10.1145/1089551.1089658","With the invention of new interaction devices and the requirements for ubiquitous access to application systems, user's interactions have moved beyond the desktop and evolved into a trend of ongoing development. The context in which the application is being used becomes an integral part of the activity carried out with the system. The inclusion of context-awareness provides convenience and efficiency to users for their ubiquitous access. Traditional human-computer interface (HCI) theories are now inadequate for developing these context-aware applications, as we believe that the notion of context should be extended to different categories: computing contexts, user contexts, and physical contexts for ubiquitous computing. This demands a new paradigm for system requirements elicitation and design in order to make good use of such extended context information. In this paper, we introduce a methodology for the elicitation of context-aware requirements and the matching of context-awareness features to the target context by capability matching. Based on this model, we analyze the design issues of some common ubiquitous access situations and show how to fit them systematically into a context-aware application by considering the requirements of a ubiquitous tourist application.","2005-08-15","2023-05-03 16:07:24","2023-05-03 16:07:24","2023-05-03","590–596","","","","","","","ICEC '05","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","context; context-aware application; design issues; HCI; tourist system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QDX2UDR6","conferencePaper","2010","Vijayan, Jaya; Raju, G.","Requirements Elicitation Using Paper Prototype","Advances in Software Engineering","978-3-642-17578-7","","10.1007/978-3-642-17578-7_4","","Requirements engineering is both the hardest and critical part of software development since errors at this beginning stage propagate through the development process and are the hardest to repair later. This paper proposes an improved approach for requirements elicitation using paper prototype. The paper progresses through an assessment of the new approach using student projects developed for various organizations. The scope of implementation of paper prototype and its advantages are unveiled.","2010","2023-05-03 16:07:27","2023-05-03 16:07:27","","30-37","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirements Engineering; Elicitation; Paper prototype","Kim, Tai-hoon; Kim, Haeng-Kon; Khan, Muhammad Khurram; Kiumi, Akingbehin; Fang, Wai-chi; Ślęzak, Dominik","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AXNQPBDW","journalArticle","2015","Seyff, Norbert; Todoran, Irina; Caluser, Kevin; Singer, Leif; Glinz, Martin","Using popular social network sites to support requirements elicitation, prioritization and negotiation","Journal of Internet Services and Applications","","1869-0238","10.1186/s13174-015-0021-9","https://doi.org/10.1186/s13174-015-0021-9","Social networks have changed our daily life and they have the potential to significantly influence and support Requirements Engineering (RE) activities. Social network-based RE approaches will allow us to overcome limitations of traditional approaches and allow end users to play a more prominent role in RE. They are key stakeholders in many software projects. However, involving end users is challenging, particularly when they are not within organizational reach. The goal of our work is to increase end user involvement in RE. In this paper we present an approach where we harness a social network to perform RE activities such as elicitation, prioritization and negotiation. Our approach was applied in three studies where students used Facebook to actively participate in RE activities of different projects. Although there are limitations, the results show that a popular social network site can support distributed RE.","2015-04-24","2023-05-03 16:08:25","2023-05-03 16:08:25","2023-05-03 16:08:25","7","","1","6","","Journal of Internet Services and Applications","","","","","","","","","","","","","BioMed Central","","","","C:\Users\gabra\Zotero\storage\2TX23T6K\Seyff et al. - 2015 - Using popular social network sites to support requ.pdf","","","Requirements engineering; End user involvement; Social network sites","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"AFSXB5UJ","journalArticle","2018","Saeed, Shehla; Fatima, Umbreen; Iqbal, Faiza","A review of Requirement Elicitation techniques in OSSD","","","","","","Open Source projects are getting very popular for more than last three decades. As Open Source Software development (OSSD) environment is globally dispersed, it is very important to determine and understand what particular approaches are being used for requirement elicitation in OSSD and how these approaches are different than traditional requirement elicitation. Requirement elicitation is human-centric approach done by interaction among various stakeholders to find out the needs of a project. Traditional RE process is a centralized approach involving social interaction of stakeholders. Whereas in OSSD stakeholder's interaction are decentralized and dynamic due to geographically dispersed locations of the stakeholders. The focus of this study is review of requirement elicitation process in globally distributed OSSD. How it deviates from traditional software engineering phases? What challenges are faced during requirement elicitation phase in OSSD? What methods or procedures can be used to overcome these challenges?","2018-03-01","2023-05-03 16:08:27","2023-05-03 16:08:27","","86","","","18","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\XRTIAGYH\Saeed et al. - 2018 - A review of Requirement Elicitation techniques in .pdf; ","https://www.researchgate.net/profile/Umbreen-Fatima-2/publication/351451131_A_review_of_Requirement_Elicitation_techniques_in_OSSD/links/6099017f458515d3150ca6ce/A-review-of-Requirement-Elicitation-techniques-in-OSSD.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2QAXZIHL","journalArticle","2006","Davis, Christopher J.; Fuller, Robert M.; Tremblay, Monica Chiarini; Berndt, Donald J.","Communication Challenges in Requirements Elicitation and the Use of the Repertory Grid Technique","Journal of Computer Information Systems","","0887-4417","10.1080/08874417.2006.11645926","https://doi.org/10.1080/08874417.2006.11645926","Requirements elicitation is a central and critical activity in the systems analysis and design process. This paper explores the nature of the challenges that confront analysts and their clients during requirements elicitation. A review of the literature highlights communication as a persistent locus of concern among systems analysts, users and procurers. The paper presents a classification of communication challenges that arise during the requirements elicitation process.Empirical evidence from a brief case study is used to illustrate the scope and impact of these communication challenges and to present a complementary approach to requirements elicitation. The paper introduces the Repertory Grid technique as a means to ameliorate some of the communication issues that persist, particularly in projects where information systems support specialized work.The paper is written in the form of a case tutorial, providing insight into the contribution of the Repertory Grid technique to requirements elicitation.","2006-06-01","2023-05-03 16:08:36","2023-05-03 16:08:36","2023-05-03 16:08:36","78-86","","5","46","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/08874417.2006.11645926","","","","","requirements elicitation; communication challenges; systems analysis and design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PLSKYLUQ","journalArticle","2012","Sakhnini, Victoria; Mich, Luisa; Berry, Daniel M.","The effectiveness of an optimized EPMcreate as a creativity enhancement technique for Web site requirements elicitation","Requirements Engineering","","1432-010X","10.1007/s00766-011-0133-0","https://doi.org/10.1007/s00766-011-0133-0","Creativity is often needed in requirements elicitation, i.e., requirement idea generation; and techniques to enhance creativity are believed to be useful. This paper describes two controlled experiments to compare the requirements-elicitation effectiveness of three creativity enhancement techniques (CET): (1) full EPMcreate; (2) Power-Only EPMcreate, an optimization of full EPMcreate; and (3) traditional brainstorming. In each experiment, one team of university students applied one of the two or three CETs under study in the experiment to generate ideas for requirements for enhancing a high school’s public Web site. The results of the first experiment indicate that Power-Only EPMcreate is more effective, by the quantity and quality of the ideas generated, than the full EPMcreate, which is, in turn, more effective than brainstorming. The results of the second experiment confirm that Power-Only EPMcreate is more effective, by the same measures, than full EPMcreate. In each experiment, for the sake of uniform, reproducible evaluation, a requirement idea is considered high quality if it is both new and useful.","2012-09-01","2023-05-03 16:08:45","2023-05-03 16:08:45","2023-05-03 16:08:45","171-186","","3","17","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Controlled experiment; Creativity; Creativity enhancement techniques; Multiple viewpoints; Optimization of creativity enhancement technique; Pragmatics of communication","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M9XP7X6E","conferencePaper","2014","Sadiq, Mohd; Jain, S. K.","Stakeholder identification method in goal oriented requirements elicitation process","2014 IEEE 5th International Workshop on Requirements Prioritization and Communication (RePriCo)","","","10.1109/RePriCo.2014.6895219","","In any software project, different stakeholders participate in requirements elicitation process to identify the requirements of software. Stakeholder Identification (SI) is an important part of requirements elicitation process. Despite its importance, SI methods have received less attention by goal oriented requirements engineering (GORE) community. Goals are high level objective of an organization; and are the basis of GORE. In literature, we identify that goal oriented requirements elicitation process (GOREP) like knowledge acquisition for automated specification (KAOS), attributed goal oriented requirements analysis (AGORA), and goal oriented idea generation (GOIG) etc. do not support SI methods. Therefore, to address this issue, we present a method for SI in GOREP which includes the following steps: specify stakeholder types, specify stakeholder roles, selecting and classifying stakeholders using fuzzy based approach, and stakeholder's analysis. Finally, the utilization of the proposed method is demonstrated with the help of an example.","2014-08","2023-05-03 16:08:49","2023-05-03 16:08:49","","25-33","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Requirements engineering; Software systems; Decision making; Stakeholder identification; Organizations; Silicon; Fuzzy logic; Goal oriented requirements engineering; Pragmatics; Requirements elicitation processes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 5th International Workshop on Requirements Prioritization and Communication (RePriCo)","","","","","","","","","","","","","","",""
"TUMQ5NA3","conferencePaper","2011","Sonia; Singhal, Archana","Development of Agile Security Framework Using a Hybrid Technique for Requirements Elicitation","Advances in Computing, Communication and Control","978-3-642-18440-6","","10.1007/978-3-642-18440-6_22","","Today’s competitive market demands immediate attention on security issues for developing secure software system. Security must be an integral part of any application development methodology. It becomes more challenging when developers design projects according to agile methodology. Traditional ways of development are sequential considering major changes during analysis. Agile methodology is required as there is a need for an iterative approach which encourages changes in requirements at any stage in software development lifecycle. In this paper, we are presenting a framework which effectively implements security practices in agile development and adopts additional features proposed by other researchers. The key point in our framework is that we are embedding a hybrid technique for requirement elicitation with Agile Software Development (ASD). This technique would combine abuser stories and attack trees drawing best features of each of their individual methods. This hybrid technique maps security threats found during security requirements effectively as compared to individual techniques.","2011","2023-05-03 16:11:22","2023-05-03 16:11:22","","178-188","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Agile Software Development; Abuser stories; Attack Trees; Software Security; Threat Modeling","Unnikrishnan, Srija; Surve, Sunil; Bhoir, Deepak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CFQIT6ST","conferencePaper","2010","Solís, Carlos; Ali, Nour","Distributed Requirements Elicitation Using a Spatial Hypertext Wiki","2010 5th IEEE International Conference on Global Software Engineering","","","10.1109/ICGSE.2010.35","","In Global Software Development (GSD), distributed stakeholders (e.g. team members, customers, etc) have to collaborate and communicate in an efficient and effective way to share, create and discuss knowledge. Nowadays, a challenge is to provide integrated collaborative tools that implement creativity techniques which allow distributed stakeholders to externalize their knowledge through brainstorming and share and store knowledge in a common repository. The Requirements Elicitation (RE) process is a clear example where this kind of support is needed in the software development process. This paper presents the Spatial Hypertext Wiki as a collaborative tool for supporting creativity in the RE process. The Spatial Hypertext characteristics of the wiki provide a virtual board where distributed stakeholders can share, brainstorm, negotiate, or prioritize the knowledge involved in RE.","2010-08","2023-05-03 16:11:28","2023-05-03 16:11:28","","237-246","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2329-6313","","C:\Users\gabra\Zotero\storage\Q7K22MDD\Solís and Ali - 2010 - Distributed Requirements Elicitation Using a Spati.pdf","","","Programming; Collaboration; Software; Requirements elicitation; Context; Electronic mail; global software development; Visualization; Face; ShyWiki; spatial hypertext wiki","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 5th IEEE International Conference on Global Software Engineering","","","","","","","","","","","","","","",""
"TJGGF36T","conferencePaper","2003","Kato, J.; Saeki, M.; Ohnishi, A.; Nagata, M.; Kaiya, H.; Komiyaa, S.; Yamamoto, S.; Horai, H.; Watahiki, K.","PAORE: package oriented requirements elicitation","Tenth Asia-Pacific Software Engineering Conference, 2003.","","","10.1109/APSEC.2003.1254354","","We propose a new requirements elicitation method in the domains of ERP, CRM, and SCM by using specifications of several existing package software. We have analyzed the requirements elicitation processes of experienced analysts in a specific domain, and found that they clarify requirements by referring the specifications of existing packages that seem to be satisfied with customer's needs. This process can be formulated into two subprocesses: 1) package selection, where an analyst compares the customer's needs with functions/nonfunctions of packages and selects the suitable candidates of packages; and 2) requirements evolution, where he examines the selected packages with his customer and an approved part of specifications of packages are added into their requirements. The proposed method, called PAORE (package oriented requirements elicitation method) is designed based on the analysis. We applied this method to a simple but realistic example of Web-based sales supporting system and assessed it.","2003-12","2023-05-03 16:11:30","2023-05-03 16:11:30","","17-26","","","","","","PAORE","","","","","","","","","","","","IEEE Xplore","","","","","","","Programming; Knowledge engineering; Software engineering; Application software; Design methodology; Concrete; Enterprise resource planning; Marketing and sales; Packaging; Software packages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tenth Asia-Pacific Software Engineering Conference, 2003.","","","","","","","","","","","","","","",""
"HJMBK2FZ","conferencePaper","2020","Sampada, G.C.; Sake, Tende Ivo; Chhabra, Megha","A Review on Advanced Techniques of Requirement Elicitation and Specification in Software Development Stages","2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC)","","","10.1109/PDGC50313.2020.9315741","","The requirement engineering stage is a significant stage during the development of the software. All the eventual stages in the development of the software are resolved by this stage. If this phase is dominated, then the software may not be developed as per the expectation of the client. The automation in requirement engineering provides a peril for the developers to amend the activities during the process. This paper reviews different approaches staged by the researchers to automate the requirement elicitation process of the software development cycle.","2020-11","2023-05-03 16:11:31","2023-05-03 16:11:31","","215-220","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2573-3079","","","","","Requirements engineering; Software; Unified modeling language; Automation; Stakeholders; natural language processing; requirement engineering; automated specification; classification; Classification algorithms; Natural languages; nonfunctional requirement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC)","","","","","","","","","","","","","","",""
"6DSRSGVU","journalArticle","2020","Rueda, Silvia; Panach, Jose Ignacio; Distante, Damiano","Requirements elicitation methods based on interviews in comparison: A family of experiments","Information and Software Technology","","0950-5849","10.1016/j.infsof.2020.106361","https://www.sciencedirect.com/science/article/pii/S0950584920301282","Context There are several methods to elicit requirements through interviews between an end-user and a team of software developers. The choice of the best method in this context is usually on subjective developers’ preferences instead of objective reasons. There is a lack of empirical evaluations of methods to elicit requirements that help developers to choose the most suitable one. Objective This paper designs and conducts a family of experiments to compare three methods to elicit requirements: Unstructured Interviews, where there is no specific protocol or artifacts; Joint Application Design (JAD), where each member of the development team has a specific role; Paper Prototyping, where developers contrast the requirements with the end-user through prototypes. Method The experiment is a between-subjects design with next response variables: number of requirements, time, diversity, completeness, quality and performance. The experiment consists of a maximum of 4 rounds of interviews between students that play the role of developers and an instructor that plays the role of client. Subjects had to elaborate a requirements specification document as results of the interviews. We recruited 167 subjects in 4 replications in 3 years. Subjects were gathered in development teams of 6 developers at most, and each team was an experimental unit. Results We found some significant differences. Paper Prototyping yields the best results to elicit as many requirements as possible, JAD requires the highest time to report the requirements and the least overlapping, and Unstructured Interviews yields the highest overlapping and the lowest time to report the requirements. Conclusions Paper Prototyping is the most suitable for eliciting functional requirements, JAD is the most suitable for non-functional requirements and to avoid overlapping, Unstructured Interviews is the fastest but with poor quality in the results.","2020-10-01","2023-05-03 16:11:32","2023-05-03 16:11:32","2023-05-03 16:11:32","106361","","","126","","Information and Software Technology","Requirements elicitation methods based on interviews in comparison","","","","","","","en","","","","","ScienceDirect","","","","","","","Empirical software engineering; Requirements elicitation; Joint application design; Prototyping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"C54IEL2M","conferencePaper","2010","Kaiya, Haruhiko; Shimizu, Yuutarou; Yasui, Hirotaka; Kaijiri, Kenji; Saeki, Motoshi","Enhancing Domain Knowledge for Requirements Elicitation with Web Mining","2010 Asia Pacific Software Engineering Conference","","","10.1109/APSEC.2010.11","","To elicit software requirements, we have to have knowledge about a problem domain, e.g., healthcare, shopping or banking where the software is applied. A description of domain knowledge such as a domain ontology helps requirements analysts to elicit requirements completely and correctly to some extent even if they do not have such knowledge sufficiently. Several requirements elicitation methods and tools using domain knowledge description have been thus proposed, but how to develop and to enhance such description is rarely discussed. Summarizing existing documents related to the domain is one of the typical ways to develop such description, and an interview to domain experts is another typical way. However, requirements cannot be elicited completely only with such domain-specific knowledge because a user of such knowledge, i.e., a requirements analyst is not a domain expert in general. Requirements could be also elicited more correctly with both specific and general knowledge because general knowledge sometimes improves understandings of analysts about domain-specific knowledge. In this paper, we propose a method and a tool to enhance an ontology of domain knowledge for requirements elicitation by using Web mining. In our method and our tool, a domain ontology consists of concepts and their relationships. Our method and tool helps an analyst with a domain ontology to mine general concepts necessary for his requirements elicitation from documents on Web and to add such concepts to the ontology. We confirmed enhanced ontologies contribute to improving the completeness and correctness of elicited requirements through a comparative experiment.","2010-11","2023-05-03 16:11:37","2023-05-03 16:11:37","","3-12","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1362","","","","","Software; Measurement; Requirements Elicitation; Ontologies; Books; Conference management; Domain Knowledge; Ontology; Web mining; Web Mining; Web pages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 Asia Pacific Software Engineering Conference","","","","","","","","","","","","","","",""
"T2ZEA8GE","journalArticle","2005","Mich, Luisa; Anesi, Cinzia; Berry, Daniel M.","Applying a pragmatics-based creativity-fostering technique to requirements elicitation","Requirements Engineering","","1432-010X","10.1007/s00766-005-0008-3","https://doi.org/10.1007/s00766-005-0008-3","This paper proposes the application to requirements elicitation of an innovative creativity fostering technique based on a model of the pragmatics of communication, the Elementary Pragmatic Model (EPM). The EPM has been used to define a creative process, called EPMcreate (EPM Creative Requirements Engineering TEchnique) that consists of sixteen steps. In each step, the problem is analyzed according to one elementary behavior identified by the EPM. Each behavior suggests that the analyst look at the problem from a different combination of users’ viewpoints. The feasibility and effectiveness of the technique in requirements elicitation was demonstrated by experiments on two projects with very different characteristics. Each experiment compared the performances of two analysis teams, one of which used EPMcreate and the other of which used brainstorming. The results of both experiments highlights the higher effectiveness of EPMcreate. Additional data from the experiments are examined for other insights into how and why EPMcreate is effective.","2005-11-01","2023-05-03 16:11:38","2023-05-03 16:11:38","2023-05-03 16:11:38","262-275","","4","10","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Pragmatics of communication; Exploratory experiment; Problem solving; Viewpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MIPDZRCG","journalArticle","2015","Sadiq, Mohd; Jain, S. K.","A fuzzy based approach for the selection of goals in goal oriented requirements elicitation process","International Journal of System Assurance Engineering and Management","","0976-4348","10.1007/s13198-014-0260-3","https://doi.org/10.1007/s13198-014-0260-3","Goal selection in goal oriented requirements elicitation process (GOREP) like KAOS, i*, AGORA etc., is a multi-criteria decision making problem. In literature, we identify that existing GOREP do not support to choose and adopt a goal out of the alternatives of the decomposed goals when multi-criteria decision making approaches are used and stakeholders’ preferences are in the form of linguistic variables. Therefore, this paper presents a fuzzy based approach to address the above issue by using α-level weighted F-preference relation in group decision making process. Finally, the utilization of the proposed approach is demonstrated with the help of an example.","2015-06-01","2023-05-03 16:11:48","2023-05-03 16:11:48","2023-05-03 16:11:48","157-164","","2","6","","Int J  Syst  Assur  Eng  Manag","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements elicitation; Fuzzy logic; Goal oriented requirements engineering; Decision making approach","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YN3YD8EF","conferencePaper","2013","Azadegan, Aida; Cheng, Xusen; Niederman, Fred; Yin, Guopeng","Collaborative Requirements Elicitation in Facilitated Collaboration: Report from a Case Study","2013 46th Hawaii International Conference on System Sciences","","","10.1109/HICSS.2013.136","","User requirements elicitation is a complex process that requires stakeholders in teams to collaborate, go through decision-making processes and, finally, to arrive at consensus. During the user requirements elicitation processes, stakeholders who have different backgrounds, view points and understandings, need to clarify, capture and uncover user requirements in an efficient and effective manner. Many industry experts have admitted that collaboration among stakeholders in a facilitated workshop, aimed at defining and articulating user requirements, is one of the most difficult tasks in software development. In this research we present a collaborative process for user requirements elicitation. We used the principles of the Collaboration Engineering (CE) to design the process, which consists of Think Lets, as process building blocks. We designed the process to predictably guide the stakeholders through decision-making processes in a collaborative manner. The process is evaluated in a case-study within an industrial IT firm in China.","2013-01","2023-05-03 16:11:54","2023-05-03 16:11:54","","569-578","","","","","","Collaborative Requirements Elicitation in Facilitated Collaboration","","","","","","","","","","","","IEEE Xplore","","ISSN: 1530-1605","","","","","Collaboration; Software; Companies; Conferences; Interviews; requirements elicitation; collaboration; facilitation; thinklets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 46th Hawaii International Conference on System Sciences","","","","","","","","","","","","","","",""
"DJRU6RJ7","journalArticle","2021","Díaz, Eduardo; Panach, José Ignacio; Rueda, Silvia; Ruiz, Marcela; Pastor, Oscar","Are requirements elicitation sessions influenced by participants' gender? An empirical experiment","Science of Computer Programming","","0167-6423","10.1016/j.scico.2020.102595","https://www.sciencedirect.com/science/article/pii/S0167642320302033","Context Requirements elicitation is a crucial phase in the software development life cycle. During requirements elicitation sessions, requirements engineers capture software requirements, and motivate stakeholders to express needs and expected software functionalities. In this context, there is a lack of extensive empirical research reporting the extent to which elicitation sessions can be influenced by participants' gender. Objective This paper presents our research endeavour to investigate requirements engineers' effort and elicited requirements' accuracy based on participants' gender. Method We conducted an experiment in two rounds with a total of 59 students who played the role of requirements engineers. In the first experimental task, the participant watched two videos where men and women stakeholders expressed software requirements. Later on, the participants specified software requirements in the shape of Business Process Model and Notation (BPMN) and next they generated Graphical User Interfaces (GUIs) from those models. Results We observed two significant differences. One between men and women requirements engineers in terms of dedicated effort during requirements specification: men took less effort. Other between stakeholders' gender in terms of accuracy resulted of BPMN models: models built from men stakeholders yield more accuracy. On the contrary, accuracy of resulted GUIs models did not show significant differences regarding requirements engineers or stakeholders' gender. Conclusions Analysing descriptive data, women spent more time both as stakeholders and as requirements engineers but their accuracy is better.","2021-04-01","2023-05-03 16:13:13","2023-05-03 16:13:13","2023-05-03 16:13:13","102595","","","204","","Science of Computer Programming","Are requirements elicitation sessions influenced by participants' gender?","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\YP335TLE\Díaz et al. - 2021 - Are requirements elicitation sessions influenced b.pdf","","","Requirements elicitation; BPMN model; Empirical experiment; Gender; Graphical user interfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UTQA96C6","journalArticle","","Dieste, Oscar; Lopez, Marta; Ramos, Felicidad","Updating a Systematic Review about Selection of Software Requirements Elicitation Techniques","","","","","","Quality of software products is closely related to the elicitation requirement process. Several studies point out that elicitation techniques achieve different results when applied in different contexts. This paper presents some recommendations about the situations in which elicitation techniques are useful. Recommendations are based on a previous systematic review, which was updated and expanded with 13 new empirical studies and more than 60 new empirical results. The aggregation process generated 5 new evidences and modified 4 existing ones. In the previous review, it was found that interviews were one of the most adequate techniques in most situations. The new evidence supports the same conclusion.","","2023-05-03 16:13:21","2023-05-03 16:13:21","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PLEXPQW2\Dieste et al. - Updating a Systematic Review about Selection of So.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6LLV729D","conferencePaper","2017","Asghar, Aneesa Rida; Tabassum, Atika; Bhatti, Shahid Nazir; Jadi, Amr Mohsen","Impact and challenges of requirements elicitation & prioritization in quality to agile process: Scrum as a case scenario","2017 International Conference on Communication Technologies (ComTech)","","","10.1109/COMTECH.2017.8065749","","Agile methodology is an innovative and iterative process that supports changing requirements and helps in addressing changes throughout the development process. Requirements are elicited at the beginning of every software development process and project (product) and latter are prioritized according to their importance to the market and to the product itself. One of the most important and influencing steps while making a software product is requirements prioritization. Prioritizing requirements helps the software team to understand the existence and importance of a particular requirement, there are several requirements prioritization methodologies that aid in decision making but importantly many lacks to account the important factors that have significant influence in prioritizing requirements. We have proposed a requirement prioritization methodology based on several factors such as time to market, cost, risk etc. The proposed model is expected to overcome this lack. In (Scrum) sprints, requirements will be prioritized both on the basis of influencing factors such as cost, value, risk, time to market etc. and through the effect of non-functional requirements over functional requirements. This will improve the overall quality of software product when it is included in the development process of scrum. Requirements will not only be prioritized based on sprints, human decision but by critically analyzing the factors (sub characteristics) that can cause the product to success/ fail repeatedly thus ensuring the consistency in right requirements and hence the right prioritized requirements will be selected for a particular sprint at a time.","2017-04","2023-05-03 16:13:25","2023-05-03 16:13:25","","50-55","","","","","","Impact and challenges of requirements elicitation & prioritization in quality to agile process","","","","","","","","","","","","IEEE Xplore","","","","","","","Software engineering; Requirements engineering; Software; Scrum; Stakeholders; Agile Software Development (ASD); Agile Software Engineering (ASE); Product Owner (PO); Scrum (Software development); Time to market","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2017 International Conference on Communication Technologies (ComTech)","","","","","","","","","","","","","","",""
"FLLCM8YL","journalArticle","2018","Wong, Lenis; Mauricio, David","New factors that affect the activities of the requirements elicitation process","Journal of Engineering Science and Technology","","","","","Given that requirements elicitation is one of the important stages in software development, many researchers agree that incorrect, incomplete and confusing requirements have a great negative impact on the quality, cost and delivery time of software projects. Therefore, factors that affect requirements elicitation and the activities of its process have been identified. However, there are no studies on what factors affect the activities Integration, Documentation and Refinement. Moreover, the theories of organizational behaviour, organizational learning, Technology acceptance model, among others, provide factors not studied in the area of requirements elicitation. The purpose of this research is to identify new factors that influence each activity of the requirements elicitation process and, consequently, the quality. Hence, in the present paper seven new factors that affect the activities of the requirements elicitation process are presented: learning capacity, negotiation capacity, permanent staff, perceived utility, confidence, stress, and semi-autonomous. In addition, 17 relationships (factor-activity) have been introduced. An empirical study was carried out on 182 respondents, obtaining, from the analysis of simple and multiple correspondences, that all the proposed factors have an influence between ""High"" and ""Very high"". Furthermore, the hypothesis test T-Students, with 95% confidence, verifies that 15 of the 17 relationships are valid.","2018-07-22","2023-05-03 16:13:29","2023-05-03 16:13:29","","1992-2015","","","13","","Journal of Engineering Science and Technology","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\B2GRC66J\Wong and Mauricio - 2018 - New factors that affect the activities of the requ.pdf; ","https://www.researchgate.net/profile/Lenis-Wong/publication/327160869_New_factors_that_affect_the_activities_of_the_requirements_elicitation_process/links/5b7d821692851c1e1227b2a9/New-factors-that-affect-the-activities-of-the-requirements-elicitation-process.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2GEL558H","journalArticle","2016","Bormane, Līga; Gržibovska, Jūlija; Bērziša, Solvita; Grabis, Jānis","Impact of Requirements Elicitation Processes on Success of Information System Development Projects","Information Technology and Management Science","","2255-9094","","https://itms-journals.rtu.lv/article/view/itms-2016-0012","Requirements articulating user needs and corresponding to enterprise business processes are a key to successful implementation of information system development projects. However, the parties involved in projects frequently are not able to agree on a common development vision and have difficulties expressing their needs. Several industry experts have acknowledged that requirements elicitation is one of the most difficult tasks in development projects. This study investigates the impact of requirements elicitation processes on project outcomes depending on the applied project development methodology.","2016","2023-05-03 16:13:40","2023-05-03 16:13:40","2023-05-03 16:13:40","57-64","","1","19","","","","","","","","","","en","Copyright (c) 2016 Līga Bormane, Jūlija Gržibovska, Solvita Bērziša, Jānis Grabis","","","","itms-journals.rtu.lv","","Number: 1","","C:\Users\gabra\Zotero\storage\ZMR5PHB2\Bormane et al. - 2016 - Impact of Requirements Elicitation Processes on Su.pdf","","","requirement elicitation; Agile programming methodology; business requirements; stakeholders; user requirements analysis; waterfall model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PHBLI43H","conferencePaper","2006","Lee, Yuqin; Zhao, Wenyun","Domain Requirements Elicitation and Analysis - An Ontology-Based Approach","Computational Science – ICCS 2006","978-3-540-34386-8","","10.1007/11758549_108","","Domain requirements are fundamental for software reuse and are the product of domain analysis. This paper presents an approach to elicit and analyze domain requirements based on ontology. Using subjective decomposition method, problem domain is decomposed into several sub problem domains. The top-down refinement method is used to refine each sub problem domain into primitive requirements, which are specified using ontology definition. Abstract stakeholders are used instead of real ones when decomposing problem domain and ontology is used to represent domain primitive requirements. Not only domain commonality, variability and qualities are presented, but also reasoning logic is used to detect and handle incompleteness and inconsistency of domain requirements. In addition, a case of ‘spot and futures trading’ e-business is used to illustrate the approach.","2006","2023-05-03 16:13:44","2023-05-03 16:13:44","","805-813","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\QMZHI6PF\Lee and Zhao - 2006 - Domain Requirements Elicitation and Analysis - An .pdf","","","Requirement Elicitation; Domain Requirement; Domain User; Problem Domain; Software Requirement Specification","Alexandrov, Vassil N.; van Albada, Geert Dick; Sloot, Peter M. A.; Dongarra, Jack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NJ53FFHP","conferencePaper","2019","Braz, Rafael dos Santos; Merlin, José Reinaldo; Freitas Guilhermino Trindade, Daniela; Eduardo Ribeiro, Carlos; Sgarbi, Ederson Marcos; Junior, Fabio de Sordi","Design Thinking and Scrum in Software Requirements Elicitation: A Case Study","Design, User Experience, and Usability. Design Philosophy and Theory","978-3-030-23570-3","","10.1007/978-3-030-23570-3_14","","Design Thinking is an innovative human-centered methodology that has gained visibility and importance for its great efficacy and efficiency in generating and testing innovative ideas. The present work seeks the application of this method in software development, more specifically in Software Requirements Elicitation. To this aim, the Design Thinking method was adapted by the team through the concepts of the Scrum framework for application in a case study that was conducted within a Brazilian state university. This study has verified this method to design a system for allocating and reserving resources for this university. Through the results obtained, this model can be considered positive, since it was possible to model a solution with 95% of average completeness and 100% of stakeholders’ satisfaction.","2019","2023-05-03 16:14:35","2023-05-03 16:14:35","","179-194","","","","","","Design Thinking and Scrum in Software Requirements Elicitation","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","","","","Prototypes; Software Engineering; Scrum; Design Thinking; Software Requirements Elicitation","Marcus, Aaron; Wang, Wentao","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YRCD3U5N","conferencePaper","2014","De Troyer, Olga; Janssens, Erik","A feature modeling approach for domain-specific requirement elicitation","2014 IEEE 4th International Workshop on Requirements Patterns (RePa)","","","10.1109/RePa.2014.6894839","","In this paper, we presented an approach for domain-specific requirement elicitation. Building domain-specific software requires the expertise of people with very different background and with different levels of experience in software development. This complicates the process of requirement elicitation. The purpose of the approach is twofold. On the one hand, we want to unlock available information on requirement elicitation for particular domains. On the other hand, we want to provide a mechanism for guiding the stakeholders (non-computing as well as computing people) through the requirement elicitation process in these domains. The approach is based on Feature Modeling, a variability modeling technique used in Software Product Lines. Furthermore, a tablet app has been developed to support the approach. We demonstrate the approach for two different domains, the domain of serious games for children and the domain of e-shop web applications. A first evaluation of the approach and the tool has been done by means of two explorative case studies and resulted in positive feedbacks.","2014-08","2023-05-03 16:14:44","2023-05-03 16:14:44","","17-24","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","","","","Usability; Unified modeling language; Context; Analytical models; Requirement elicitation; Abstracts; Domain-specific; Feature modeling; Games; Tool support","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 4th International Workshop on Requirements Patterns (RePa)","","","","","","","","","","","","","","",""
"ZUJX4EUL","journalArticle","2013","","IJASCSE, Volume 2, Issue 5, 2013","","","","","","Requirements engineering is the fundamental aspect of Software Process development. It is modularized into various stages of elicitation, Analysis, Validation and Documentation. The process of building software starts with requirement elicitation. This phase determines what problem needs to be solved or what software has to be developed. Requirements are constraints or demands which are described by the customers and must be met within a specific time period. While, Elicitation is all about gathering necessities and requirements from the end-user’s to recognize what a software system should consist of, acquisition of requirements is done via an interaction between the analysts and the stakeholders. If the need of the stakeholders doesn’t meet then the quality software will not be produced.","2013","2023-05-03 16:14:45","2023-05-03 16:14:45","","","","5","2","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\CIKH8C56\2013 - IJASCSE, Volume 2, Issue 5, 2013.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3Y9PNNUG","journalArticle","2019","Wang, Zuoxu; Chen, Chun-Hsien; Zheng, Pai; Li, Xinyu; Khoo, Li Pheng","A novel data-driven graph-based requirement elicitation framework in the smart product-service system context","Advanced Engineering Informatics","","1474-0346","10.1016/j.aei.2019.100983","https://www.sciencedirect.com/science/article/pii/S1474034619305567","Nowadays, industrial companies are facing ever-increasing challenges to generate new value-in-use and maintain their high competitiveness in the market. With the rapid development of Information and Communication Technology (ICT), IT is embedded in the products themselves, i.e. smart, connected products (SCPs) to generate values. Hence, an emerging value proposition paradigm, smart product-service system (Smart PSS) was introduced, by leveraging both SCPs and its generated services as a solution bundle to meet individual customer needs. Unlike other types of PSS, in Smart PSS, massive user-generated data and product-sensed data are collected during the usage phase, where potential requirements can be elicited readily in a value co-creation manner with context-awareness. Nevertheless, only few scholars discuss any systematic manner to support requirement elicitation in such context. To fill the gaps, this research proposes a novel data-driven graph-based requirement elicitation framework in the Smart PSS, so as to assist engineering/designers make better design improvement or new design concept generation in a closed-loop manner. It underlines the informatics-based approach by integrating heterogeneous data sources into a holistic consideration. Moreover, by leveraging graph-based approach, context-product-service information can be linked by the edges and nodes in-between them to derive reliable requirements. To validate its feasibility and advantages, an illustrative example of smart bicycle design improvement is further adopted. As an explorative study, it is hoped that this work provides useful insights for the requirement elicitation process in today’s smart connected environment.","2019-10-01","2023-05-03 16:14:54","2023-05-03 16:14:54","2023-05-03 16:14:54","100983","","","42","","Advanced Engineering Informatics","","","","","","","","en","","","","","ScienceDirect","","","","","","","Knowledge management; Requirement elicitation; Data-driven design; Product-service systems; Value co-creation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I5WQM7XU","webpage","","","EBSCOhost | 122961184 | An Integration of Threat Modeling with Attack Pattern and Misuse Case for Effective Security Requirement Elicitation.","","","","","https://web.p.ebscohost.com/abstract?direct=true&profile=ehost&scope=site&authtype=crawler&jrnl=09765697&AN=122961184&h=8lzyoZqDtkCnmoUnCrsqh3Agh7OIZLPr%2fbixTGHM5mWlBMfyPeA%2fadiFzhSW4anQhUwxW1bhU6gjJlct2363Tw%3d%3d&crl=c&resultNs=AdminWebAuth&resultLocal=ErrCrlNotAuth&crlhashurl=login.aspx%3fdirect%3dtrue%26profile%3dehost%26scope%3dsite%26authtype%3dcrawler%26jrnl%3d09765697%26AN%3d122961184","","","2023-05-03 16:14:56","2023-05-03 16:14:56","2023-05-03 16:14:56","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PDJ2UN7X","book","2013","Sadiq, Mohd; Jain, Sanjay","A fuzzy based approach for requirements prioritization in goal oriented requirements elicitation process (A step towards extension of AGORA method)","","","","","","Requirements elicitation is the first sub-process of requirements engineering (RE) and involves group decision making approaches for the selection and prioritization of requirements. Prioritizing requirements means to determine the implementation order of the requirements as well as the order of importance to some stakeholders or class of stakeholders along one or more dimensions e.g., preference, business value, cost of implementation etc. Based on our literature review, we identify that existing goal oriented requirements elicitation processes do not support to prioritize the requirements when the stakeholders' opinion are often vague and contain ambiguity and multiple meaning. Therefore, to address this issue, we present a fuzzy based approach for requirements prioritization in goal oriented requirements elicitation process by combining α-level weighted F-preference relation in group decision making process and binary sort tree method to get the prioritized list of requirements. Finally, the utilization of the proposed approach is demonstrated with the help of an example.","2013-01-01","2023-05-03 16:15:09","2023-05-03 16:15:09","","","","","","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\QJS8LM8D\Sadiq and Jain - 2013 - A fuzzy based approach for requirements prioritiza.pdf; ","https://www.researchgate.net/profile/Sanjay-Jain-28/publication/299588271_A_fuzzy_based_approach_for_requirements_prioritization_in_goal_oriented_requirements_elicitation_process_A_step_towards_extension_of_AGORA_method/links/570127a708ae1408e15ea395/A-fuzzy-based-approach-for-requirements-prioritization-in-goal-oriented-requirements-elicitation-process-A-step-towards-extension-of-AGORA-method.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4A4KK3QC","journalArticle","","Gobov, Denys; Huchenko, Inna","Software Requirements Elicitation Techniques Selection Method for the Project Scope Management","","","","","","Project Scope Management is one of the ten knowledge areas described in PMBOK. It refers to the set of processes that ensures a project’s scope is accurately defined and mapped. Elicitation is a critical part of the “Collect Requirements” process of the Scope Management that helps to derive and extract information from stakeholders or other sources. The results of elicitation are used as inputs for requirement analysis and management activities. Multiple elicitation techniques may be applied alternatively or in conjunction with other techniques to accomplish the elicitation. Business analysts can modify existing techniques or create new ones to adjust the project context. The selection of the best-suited techniques inﬂuences the business analysis approach, which is an important part of the scope management plan. This paper is intended to analyze the current practice of elicitation techniques application in the software development projects, define factors influencing technique selection based on the two-classification Machine Learning model, and predict the usage of a particular elicitation technique depending on the project attributes and business analyst background. We conducted a survey study involving 328 specialists from Ukrainian IT companies. Gathered data was used to build and evaluate the prediction models.","","2023-05-03 16:15:10","2023-05-03 16:15:10","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\CQV8HA3W\Gobov and Huchenko - Software Requirements Elicitation Techniques Selec.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"D9E6AZF2","conferencePaper","2009","Kitamura, Motohiro; Hasegawa, Ryo; Kaiya, Haruhiko; Saeki, Motoshi","A Supporting Tool for Requirements Elicitation Using a Domain Ontology","Software and Data Technologies","978-3-540-88655-6","","10.1007/978-3-540-88655-6_10","","Since requirements analysts do not have sufficient knowledge on a problem domain, i.e. domain knowledge, the technique how to make up for lacks of domain knowledge is a key issue. This paper proposes the usage of a domain ontology as domain knowledge during requirements elicitation processes and a supporting tool based on this technique. In addition, we had several experiments to show the usefulness of our tool.","2009","2023-05-03 16:15:14","2023-05-03 16:15:14","","128-140","","","","","","","Communications in Computer and Information Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Requirement Engineer; Requirement Engineering; Domain Knowledge; Domain Ontology; Inference Rule","Filipe, Joaquim; Shishkov, Boris; Helfert, Markus; Maciaszek, Leszek A.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SGHXDDL8","journalArticle","","Hehn, Jennifer; Uebernickel, Falk","Towards an understanding of the Role of Design Thinking for Requirements Elicitation - Findings from a Multiple-Case Study","","","","","","Effective requirements elicitation is perceived to be one of the most crucial activities in software-intensive development projects. While many scholars and practitioners have pointed out and agreed upon its numerous challenges, others consider the increasingly popular approach of Design Thinking to be the promising ‘cure.’ This paper provides robust empirical evidence of the role of Design Thinking for requirements elicitation and to help overcome its challenges. Specifically, this paper presents learnings in terms of process guidance, stakeholder communication, and requirements quality based on insights from a multiple-case study. In sum, Design Thinking introduces new structures and methods to enhance elicitation efforts and inspires a mind-shift towards a more human-centered and creative way of requirements elicitation. This work provides a better understanding of the multi-faceted potential of Design Thinking for requirements elicitation for both, scholars and practitioners.","","2023-05-03 16:15:15","2023-05-03 16:15:15","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PYG9S55G\Hehn and Uebernickel - Towards an understanding of the Role of Design Thi.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"5HH26AIX","document","2016","Taani, Rami; Razali, Rozilawati","1375-2828-1-PB","","","","","","","2016-12-21","2023-05-03 16:17:53","2023-05-03 16:17:53","","","","","","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\R5MAGI8F\Taani and Razali - 2016 - 1375-2828-1-PB.pdf; ","https://www.researchgate.net/profile/Rami-Taani/publication/311768960_1375-2828-1-PB/links/5859e21e08aeabd9a58b4e4b/1375-2828-1-PB.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T6C552PK","webpage","","","Understanding requirements prioritisation: literature survey and critical evaluation - Malgaonkar - 2020 - IET Software - Wiley Online Library⁤","","","","","https://ietresearch.onlinelibrary.wiley.com/doi/full/10.1049/iet-sen.2019.0215","","","2023-05-03 16:17:56","2023-05-03 16:17:56","2023-05-03 16:17:56","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\WWXNFSCQ\iet-sen.2019.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R74AJYEU","journalArticle","2001","Regnell, Björn; Höst, Martin; och Dag, Johan Natt; Beremark, Per; Hjelm, Thomas","An Industrial Case Study on Distributed Prioritisation in Market-Driven Requirements Engineering for Packaged Software","Requirements Engineering","","1432-010X","10.1007/s007660170015","https://doi.org/10.1007/s007660170015","","2001-02-01","2023-05-03 16:18:07","2023-05-03 16:18:07","2023-05-03 16:18:07","51-62","","1","6","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Key words:COTS – Disagreement – Prioritisation – Product scoping – Release planning – Satisfactory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9WHFV44E","webpage","","","Tool-Supported Collaborative Requirements Prioritisation | IEEE Conference Publication | IEEE Xplore⁤","","","","","https://ieeexplore.ieee.org/abstract/document/8029606","","","2023-05-03 16:18:09","2023-05-03 16:18:09","2023-05-03 16:18:09","","","","","","","","","","","","","","","","","","","","","","","C:\Users\gabra\Zotero\storage\JRCQKQG2\8029606.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ELT77EZX","journalArticle","2018","Hujainah, Fadhl; Bakar, Rohani Binti Abu; Abdulgabber, Mansoor Abdullateef; Zamli, Kamal Z.","Software Requirements Prioritisation: A Systematic Literature Review on Significance, Stakeholders, Techniques and Challenges","IEEE Access","","2169-3536","10.1109/ACCESS.2018.2881755","","As one of the gatekeepers of quality software systems, requirements' prioritization (RP) is often used to select the most important requirements as perceived by system stakeholders. To date, many RP techniques that adopt various approaches have been proposed in the literature. To identify the strengths, opportunities, and limitations of these existing approaches, this paper studied and analyzed the RP field in terms of its significance in the software development process based on the standard review guidelines by Kitchenham. By a rigorous study selection strategy, 122 relevant studies were selected to address the defined research questions. Findings indicated that RP plays a vital role in ensuring the development of a quality system with defined constraints. The stakeholders involved in RP were reported, and new categories of the participating stakeholders were proposed. Additionally, 108 RP techniques were identified and analyzed with respect to their benefits, prioritization criteria, size of requirements, types in terms of automation level, and their limitations; 84 prioritization criteria were disclosed with their frequency usages in prioritizing the requirements. The study revealed that the existing techniques suffer from serious limitations in terms of scalability, the lack of quantification, and the prioritization of the participating stakeholders, time consumption, requirement interdependences, and the need for highly professional human intervention. These findings are useful for researchers and practitioners in improving the current state of the art and state of practices.","2018","2023-05-03 16:18:11","2023-05-03 16:18:11","","71497-71523","","","6","","","Software Requirements Prioritisation","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Access","","C:\Users\gabra\Zotero\storage\SJITV77X\Hujainah et al. - 2018 - Software Requirements Prioritisation A Systematic.pdf","","","Software engineering; Bibliographies; Systematics; Software systems; Stakeholders; Requirements prioritization; stakeholders; challenges; Complexity theory; requirements prioritization criteria; systematic literature review; techniques","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FUSIXHR5","journalArticle","1997","Karlsson, Joachim; Olsson, Stefan; Ryan, Kevin","Improved practical support for large-scale requirements prioritising","Requirements Engineering","","1432-010X","10.1007/BF02802897","https://doi.org/10.1007/BF02802897","An efficient, accurate and practical process for prioritising requirements is of great importance in commercial software developments. This article improves an existing cost-value approach in which stakeholders compare all unique pairs of candidate requirements according to their value and their cost of implementation. Techniques for reducing the required number of comparisons are suggested, thus making the process more efficient. An initial approach for managing requirements interdependencies is proposed. A support tool for the improved process has been developed to make the process more practical in commercial developments. The improved process and its support tool have been applied and evaluated in an industrial project at Ericsson Radio Systems AB. The results indicate a pressing need for mature processes for prioritising requirements, and the work presented here is an important step in that direction.","1997-03-01","2023-05-03 16:18:14","2023-05-03 16:18:14","2023-05-03 16:18:14","51-60","","1","2","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Cost-value approach; Requirements prioritising","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NBTQKQL4","conferencePaper","2008","Hatton, Sarah","Choosing the Right Prioritisation Method","19th Australian Conference on Software Engineering (aswec 2008)","","","10.1109/ASWEC.2008.4483241","","There are many methods available for prioritising software requirements. Choosing the most suitable one can often be quite difficult. A number of factors need to be considered such as the project development methodology being used, the amount of time available, the amount of information known about requirements, the stage of the project and the degree of information about priority required. This paper examines the type of information available at different stages in a project and matches it to the properties of prioritisation methods. It then recommends the usage of specific prioritisation methods at certain stages of a project.","2008-03","2023-05-03 16:18:16","2023-05-03 16:18:16","","517-526","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2377-5408","","C:\Users\gabra\Zotero\storage\BNK99VGU\4483241.html","","","Software engineering; Software Engineering; Computer industry; Decision making; Iterative methods; System testing; Analytical Hierarchy Process; Australia; Computer science; Dynamic programming; Efficient Prioritisation; Hundred Dollar Method; MoSCoW; Requirements Prioritisation; Road transportation; Scheduling; Simple Ranking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","19th Australian Conference on Software Engineering (aswec 2008)","","","","","","","","","","","","","","",""
"GZ3HEDXS","conferencePaper","2021","Talele, Pratvina; Phalnikar, Rashmi","Classification and Prioritisation of Software Requirements using Machine Learning – A Systematic Review","2021 11th International Conference on Cloud Computing, Data Science & Engineering (Confluence)","","","10.1109/Confluence51648.2021.9377190","","Requirement Engineering (RE) plays an integral role throughout the process of software development. Requirement identification and prioritisation are the foremost phases of the RE process. Latest RE research work uses Machine Learning (ML) algorithms to tackle RE problems such as identifying requirements and assigning priorities to requirements, which have given better results than that of traditional natural language processing methods. An adequate understanding of these ML methods, however, is still lacking. The aim of this study is to understand which of the ML algorithms is likely to classify and prioritise the requirements efficiently and how they can be evaluated. It is observed that the current approaches are having constraints of scalability and complexity. Different methods used for the text preprocessing of requirements from SRS and user reviews are also proposed. 6 different ML algorithms and 6 different prioritisation algorithms, which are most common methods, are found. The most popular performance parameters used are accuracy, precision and recall. The limitations of these ML approaches are irrespective of dependency of requirements, priorities are assigned to requirements, the results with respect to scalability and speed is inferior.","2021-01","2023-05-03 16:18:17","2023-05-03 16:18:17","","912-918","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\N52KAUWY\9377190.html","","","Requirements engineering; Software; Systematics; Scalability; Classification algorithms; Classification; Machine learning; Machine Learning; Prioritisation; Software algorithms; Software Requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2021 11th International Conference on Cloud Computing, Data Science & Engineering (Confluence)","","","","","","","","","","","","","","",""
"D56WVECB","journalArticle","2021","Hujainah, Fadhl; Binti Abu Bakar, Rohani; Nasser, Abdullah B.; Al-haimi, Basheer; Zamli, Kamal Z.","SRPTackle: A semi-automated requirements prioritisation technique for scalable requirements of software system projects","Information and Software Technology","","0950-5849","10.1016/j.infsof.2020.106501","https://www.sciencedirect.com/science/article/pii/S0950584920302433","Context Requirement prioritisation (RP) is often used to select the most important system requirements as perceived by system stakeholders. RP plays a vital role in ensuring the development of a quality system with defined constraints. However, a closer look at existing RP techniques reveals that these techniques suffer from some key challenges, such as scalability, lack of quantification, insufficient prioritisation of participating stakeholders, overreliance on the participation of professional expertise, lack of automation and excessive time consumption. These key challenges serve as the motivation for the present research. Objective This study aims to propose a new semiautomated scalable prioritisation technique called ‘SRPTackle’ to address the key challenges. Method SRPTackle provides a semiautomated process based on a combination of a constructed requirement priority value formulation function using a multi-criteria decision-making method (i.e. weighted sum model), clustering algorithms (K-means and K-means++) and a binary search tree to minimise the need for expert involvement and increase efficiency. The effectiveness of SRPTackle is assessed by conducting seven experiments using a benchmark dataset from a large actual software project. Results Experiment results reveal that SRPTackle can obtain 93.0% and 94.65% as minimum and maximum accuracy percentages, respectively. These values are better than those of alternative techniques. The findings also demonstrate the capability of SRPTackle to prioritise large-scale requirements with reduced time consumption and its effectiveness in addressing the key challenges in comparison with other techniques. Conclusion With the time effectiveness, ability to scale well with numerous requirements, automation and clear implementation guidelines of SRPTackle, project managers can perform RP for large-scale requirements in a proper manner, without necessitating an extensive amount of effort (e.g. tedious manual processes, need for the involvement of experts and time workload).","2021-03-01","2023-05-03 16:18:45","2023-05-03 16:18:45","2023-05-03 16:18:45","106501","","","131","","Information and Software Technology","SRPTackle","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\7QT6CF7R\Hujainah et al. - 2021 - SRPTackle A semi-automated requirements prioritis.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IV63XKHE","journalArticle","2020","Malgaonkar, Saurabh; Licorish, Sherlock A.; Savarimuthu, Bastin Tony Roy","Understanding requirements prioritisation: literature survey and critical evaluation","IET Software","","1751-8814","10.1049/iet-sen.2019.0215","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0215","Requirements prioritisation deals with the ranking or classification of user requirements based on their importance. This process is central to releasing a software product with features most favoured by users. While studies have explored the efforts that are dedicated to this cause, these tend to focus on a subset of the solutions that are available in the software engineering domain. Current techniques investigated in the software engineering domain do not consider the strengths inherent in requirements prioritisation techniques developed in other disciplines (e.g. product manufacturing), a gap that should be addressed. The authors thus conducted a comprehensive systematic mapping study and critical evaluation of studies that have provided implementations of requirements prioritisation techniques across multiple disciplines (including software engineering, product manufacturing, and engineering). Among their findings, they observed that while many solutions are targeted, quite often researchers have proposed solutions that were not evaluated. Most solutions were only validated as being operational, and the attributes studied had limited effects on performance outcomes. Their evidence suggests that new techniques may address the requirements prioritisation challenge if they are inspired by hybrid approaches developed across multiple disciplines. In addition, performance trade-offs are to be expected of such techniques, depending on their performance targets.","2020","2023-05-03 16:19:08","2023-05-03 16:19:08","2023-05-03 16:19:08","607-622","","6","14","","","Understanding requirements prioritisation","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0215","","C:\Users\gabra\Zotero\storage\RDMMGVQB\Malgaonkar et al. - 2020 - Understanding requirements prioritisation literat.pdf","","","software engineering; decision making; formal specification; comprehensive systematic mapping study; multiple disciplines; product manufacturing; requirements prioritisation challenge; requirements prioritisation deals; requirements prioritisation techniques; software development management; software engineering domain; software product; user requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9NS72VIV","journalArticle","2018","Anand, R. Vijay; Dinakaran, M.","WhaleRank: an optimisation based ranking approach for software requirements prioritisation","International Journal of Environment and Waste Management","","1478-9876","10.1504/IJEWM.2018.091307","https://www.inderscienceonline.com/doi/abs/10.1504/IJEWM.2018.091307","Requirement prioritisation is one of the major areas in the software product development process. Ranking methods employed for prioritising orders the requirements based on their importance. Ranking the requirements contributes in enhancing the quality of the product using additional features and to attain customer satisfaction. However, effectiveness is the growing concern in requirement prioritisation. This paper proposes a ranking method WhaleRank to rank the requirement and the effectiveness of ranking gets enhanced using the whale optimisation algorithm (WOA). The WhaleRank method uses four ranking functions based on dictionary words, similarity measure, perception of the manager, and the newly updated requirements that are combined to form a linear rank using the ranking constants. WOA determines the optimal weights of the ranking constants that promote to determine the optimal rank for the requirements. Experimentation with the methods like CBRank, average rank, WhaleRank, and GA provide a comparative performance analysis that proves that the proposed WhaleRank outperforms all methods in terms of accuracy and disagreement measure (NDA) and the values of accuracy and NDA is 83.33% and 16.24% respectively.","2018-01","2023-05-03 16:19:18","2023-05-03 16:19:18","2023-05-03 16:19:18","1-21","","1","21","","","WhaleRank","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirement updates; similarity matrix; weighed ranking constants; whale rank optimisation; WhaleRank; WOA","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6R5TCNM8","conferencePaper","2021","Talele, Pratvina; Phalnikar, Rashmi","Software Requirements Classification and Prioritisation Using Machine Learning","Machine Learning for Predictive Analysis","9789811571060","","10.1007/978-981-15-7106-0_26","","Software Development Lifecycle (SDLC) is a systematic process used to achieve high quality software that meets customer requirements. During SDLC requirements, engineering plays an important role. Prioritisation helps to focus on the most important requirements in terms of importance, cost, penalty, time and risk. Stakeholders (users, developers) of the software product identify requirements. The two major activities of requirement engineering process are requirements classification and requirements prioritisation. Sometimes requirement mentioned by stakeholder can be of both types, i.e. functional and non-functional. So it is challenging to classify requirements separately in two different categories. There are many fundamental prioritisation techniques available to prioritise software requirements. In this paper, we have compared existing requirements prioritisation techniques based on ease of use, speed, scalability and accuracy. Our literature study suggests that the appropriate requirements prioritisation technique has to be selected that can help software developer to minimise the risk, penalty. In automating various tasks of software engineering, machine learning (ML) has shown useful positive impact. This paper discusses the various algorithms used to classify and prioritise the software requirements. The results in terms of performance, scalability and accuracy from different studies are contradictory in nature due to variations in research methodologies and the type of dataset used. Based on the literature survey conducted, we propose a new architecture that will use both types of datasets, i.e. Software Requirement Specifications (SRS) and user text reviews to create a generalised model. Our proposed architecture will attempt to extract features which can be used to train the model using ML algorithms. The ML algorithms for classifying and prioritising software requirements will be developed and assessed based on performance, scalability and accuracy.","2021","2023-05-03 16:21:42","2023-05-03 16:21:42","","257-267","","","","","","","Lecture Notes in Networks and Systems","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Machine learning; Requirement engieering; Software requirements","Joshi, Amit; Khosravy, Mahdi; Gupta, Neeraj","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"IGLH76TD","journalArticle","2004","","Requirements prioritisation: an experiment on exhaustive pair-wise comparisons versus planning game partitioning","","","2004-0407","","https://digital-library.theiet.org/content/conferences/10.1049/ic_20040407","The process of selecting the right set of requirements for a product release is highly dependent on how well we succeed in prioritising the requirements candidates. There are different techniques available for requirements prioritisation, some more elaborate than others. In order to compare different techniques, a controlled experiment was conducted with the objective of understanding differences regarding time consumption, ease of use, and accuracy. The requirements prioritisation techniques compared in the experiment are the analytical hierarchy process (AHP) and a variation of the planning game (PG), isolated from extreme programming. The subjects were 15 Ph.D. students and one professor, who prioritised mobile phone features using both methods. It was found that the straightforward and intuitive PG was less time consuming, and considered by the subjects as easier to use, and more accurate than AHP.","2004-01-01","2023-05-03 16:22:20","2023-05-03 16:22:20","2023-05-03 16:22:20","145-154","","","","","","Requirements prioritisation","","","","","","","en","","","","","digital-library.theiet.org","","Publisher: IET Digital Library","","C:\Users\gabra\Zotero\storage\E3UMMS6A\ic_20040407.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SCVHZLB7","journalArticle","2007","Karlsson, Lena; Thelin, Thomas; Regnell, Björn; Berander, Patrik; Wohlin, Claes","Pair-wise comparisons versus planning game partitioning—experiments on requirements prioritisation techniques","Empirical Software Engineering","","1573-7616","10.1007/s10664-006-7240-4","https://doi.org/10.1007/s10664-006-7240-4","The process of selecting the right set of requirements for a product release is dependent on how well the organisation succeeds in prioritising the requirements candidates. This paper describes two consecutive controlled experiments comparing different requirements prioritisation techniques with the objective of understanding differences in time-consumption, ease of use and accuracy. The first experiment evaluates Pair-wise comparisons and a variation of the Planning game. As the Planning game turned out as superior, the second experiment was designed to compare the Planning game to Tool-supported pair-wise comparisons. The results indicate that the manual pair-wise comparisons is the most time-consuming of the techniques, and also the least easy to use. Tool-supported pair-wise comparisons is the fastest technique and it is as easy to use as the Planning game. The techniques do not differ significantly regarding accuracy.","2007-02-01","2023-05-03 16:22:36","2023-05-03 16:22:36","2023-05-03 16:22:36","3-33","","1","12","","Empir Software Eng","","","","","","","","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\C6KF7ZR8\Karlsson et al. - 2007 - Pair-wise comparisons versus planning game partiti.pdf","","","Requirements engineering; Decision making; Controlled experiment; Release planning; Requirements prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"H75CANRW","journalArticle","2019","Hujainah, Fadhl; Bakar, Rohani Binti Abu; Abdulgabber, Mansoor Abdullateef","StakeQP: A semi-automated stakeholder quantification and prioritisation technique for requirement selection in software system projects","Decision Support Systems","","0167-9236","10.1016/j.dss.2019.04.009","https://www.sciencedirect.com/science/article/pii/S0167923619300764","Stakeholder quantification and prioritisation (SQP) is performed on the basis of the stakeholder's influence. The involvement of adequate stakeholders plays a crucial role in identifying and selecting the most essential requirements to produce a successful system. However, the current SQP techniques still face serious limitations, such as having insufficient low-level implementation details, being time-consuming, lacking an automation level, heavily relying on professional expertise and having no attribute measurement criteria (AMC) for stakeholder evaluation. These key issues serve as the motivation of the present study. Hence, this study is aimed at proposing a new semi-automated technique called StakeQP to address the reported key limitations. StakeQP introduces new low-level implementation details to perform SQP automatically on the basis of the newly proposed AMC using the multi-attribute decision-making method, namely, the technique of order preference similarity to the ideal solution (TOPSIS), to achieve an efficient StakeQP. The effectiveness of StakeQP is evaluated using a benchmark dataset of the actual software project. The findings show that StakeQP can produce more accurate results with less time consumption and is more effective in addressing the defined key limitations compared with other alternative techniques.","2019-06-01","2023-05-03 16:22:51","2023-05-03 16:22:51","2023-05-03 16:22:51","94-108","","","121","","Decision Support Systems","StakeQP","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\YFK6ACUW\S0167923619300764.html","","","Multi-attribute decision-making; Software system project; Stakeholder analysis; Stakeholder prioritisation; Stakeholder quantification; TOPSIS","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"8ND629CR","journalArticle","2003","Karatzas, Kostas; Dioudi, Eirini; Moussiopoulos, Nicolas","Identification of major components for integrated urban air quality management and information systems via user requirements prioritisation","Environmental Modelling & Software","","1364-8152","10.1016/S1364-8152(02)00053-1","https://www.sciencedirect.com/science/article/pii/S1364815202000531","Integrated environmental management and information systems are software applications with various components. In the current paper the identification of the major components of such systems is being performed with the aid of the prioritisation of user requirements. For this reason, the analytical hierarchy process is applied for an integrated urban air quality management and information system, which is developed as a portal for environmental information. Useful results are drawn regarding the relevant importance of the components of such systems and the sensitivity of the prioritisation during their selection as a function of their relevant cost and value.","2003-03-01","2023-05-03 16:22:56","2023-05-03 16:22:56","2023-05-03 16:22:56","173-178","","2","18","","Environmental Modelling & Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\5E8S6AWE\S1364815202000531.html","","","Analytical hierarchy process; Integrated information systems; Urban air quality management; User requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K5J83DGL","journalArticle","2013","Ejnioui, Abdel; Otero, Carlos E.; Otero, Luis D.","Prioritisation of software requirements using grey relational analysis","International Journal of Computer Applications in Technology","","0952-8091","10.1504/IJCAT.2013.054344","https://www.inderscienceonline.com/doi/abs/10.1504/IJCAT.2013.054344","While many efforts have been undertaken to prioritise requirements in software projects, almost none has shown practical methods to do so. Most methods that produce consistent results tend to be complex and consequently difficult to implement. On the other hand, informal methods can save time and are easy to implement, but lack the structure and consistency needed to reliably analyse requirements. This paper introduces a new approach for prioritising software requirements. Because of the imprecise nature of requirement and attribute data, this approach represents the problem as a grey multi–attribute decision problem by relying on grey relational analysis to address this decision problem. In addition, the approach allows decision makers to use an objective or subjective weighting scheme to model the importance of attributes before solving the decision problem. This approach is practical and can be easily implemented as a decision making tool to assist decision makers in prioritising requirements.","2013-01","2023-05-03 16:23:17","2023-05-03 16:23:17","2023-05-03 16:23:17","100-109","","2-3","47","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements engineering; software engineering; software requirements; GRA; grey relational analysis; grey systems theory; MADM; multi–attribute decision making; requirements prioritisation; software quality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"QZCEKADP","conferencePaper","2009","Svahnberg, Mikael; Karasira, Aimable","A Study on the Importance of Order in Requirements Prioritisation","2009 Third International Workshop on Software Product Management","","","10.1109/IWSPM.2009.1","","A key principle when performing research studies is that of randomisation, in order to counter any effects that the ordering of tasks, elements, subjects, etc. may have on the dependent variables. When performing requirements prioritisation, it is not always possible (e.g., because of how prioritisation methods are constructed) or even desirable to randomise all requirements before prioritising them. It is thus important to know the effect that the initial order of the requirements will have on their final priorities, and this is studied in this article. The results indicate that the initial order of elements does not significantly influence the resulting priorities of the most and least important requirements, but that it does indeed influence the results when looking at all of the requirements.","2009-09","2023-05-03 16:23:28","2023-05-03 16:23:28","","35-41","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\P6EK7D2N\5457322.html","","","Product development; Control systems; Counting circuits; History; Job production systems; Logistics; Voting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2009 Third International Workshop on Software Product Management","","","","","","","","","","","","","","",""
"AGZ9IUTF","conferencePaper","2006","Karlsson, Lena; Höst, Martin; Regnell, Björn","Evaluating the practical use of different measurement scales in requirements prioritisation","Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering","978-1-59593-218-1","","10.1145/1159733.1159782","https://doi.org/10.1145/1159733.1159782","The importance of prioritising requirements is widely recognised. A number of different techniques for prioritising requirements have been proposed, some based on an ordinal scale, others on a ratio scale. Some measurement scales provide more information than others, i.e. the ratio scale is richer than the ordinal scale. This paper aims to investigate the differences between the scales used in prioritisation. This is important since techniques using a richer scale tend to be more time-consuming and complex to use. Thus, there is a trade-off between simple techniques only providing ranks and complex techniques providing information about the relative distance between requirements priorities. The paper suggests an approach to measure the skewness of the ratio distribution and a way to use the cost-value approach on ordinal scale data. Four different empirical data sets were used to verify the suggested approaches. The skewness measure seems feasible to determine in which cases the ratio scale is valuable. It indicates that some of our subjects tend to use the extreme values of the scale while others are more modest. The cost-value approach based on ordinal scale data also seems feasible. The requirements selection decisions based on ordinal scale data agree substantially with the decisions based on ratio scale data.","2006-09-21","2023-05-03 16:23:41","2023-05-03 16:23:41","2023-05-03","326–335","","","","","","","ISESE '06","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements prioritisation; costvalue approach; ordinal scale data; ratio scale data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"9CZZELHW","journalArticle","2001","Kamara, J. M; Anumba, C. J","ClientPro: a prototype software for client requirements processing in construction","Advances in Engineering Software","","0965-9978","10.1016/S0045-7949(00)00142-5","https://www.sciencedirect.com/science/article/pii/S0045794900001425","This paper describes a prototype software, ClientPro, which was developed in response to the need for computer based tools to support the early stages of the construction process. ClientPro was developed as a Microsoft Access application, and it is designed to facilitate the effective processing of client requirements on construction projects. The methodology, development, operation and evaluation of the prototype are discussed, and it is concluded that, ClientPro is potentially useful in facilitating the systematic definition, analysis, and mapping of client requirements to design specifications. It also provides for the incorporation and prioritisation of the perspectives represented by the client, the determination of the relative importance of his/her requirements, and the early consideration of issues affecting the life cycle of a facility. Thus, it can contribute to the ultimate satisfaction of the requirements of construction clients.","2001-01-08","2023-05-03 16:23:48","2023-05-03 16:23:48","2023-05-03 16:23:48","141-158","","2","32","","Advances in Engineering Software","ClientPro","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\ICVW9QXR\S0045794900001425.html","","","Briefing; Client requirements processing; Construction; Prototype software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"D9NYT2NG","journalArticle","2022","Tøndel, Inger Anne; Cruzes, Daniela Soares; Jaatun, Martin Gilje; Sindre, Guttorm","Influencing the security prioritisation of an agile software development project","Computers & Security","","0167-4048","10.1016/j.cose.2022.102744","https://www.sciencedirect.com/science/article/pii/S0167404822001390","Software security is a complex topic, and for development projects it can be challenging to assess what security is necessary and cost-effective. Agile Software Development (ASD) values self-management. Thus, teams and their Product Owners are expected to also manage software security prioritisation. In this paper we build on the notion that security experts who want to influence the priority given to security in ASD need to do this through interactions and support for teams rather than prescribing certain activities or priorities. But to do this effectively, there is a need to understand what hinders and supports teams in prioritising security. Based on a longitudinal case study, this article offers insight into the strategy used by one security professional in an SME to influence the priority of security in software development projects in the company. The main result is a model of influences on security prioritisation that can assist in understanding what supports or hinders the prioritisation of security in ASD, thus providing recommendations for security professionals. Two alternative strategies are outlined for software security in ASD – prescribed and emerging – where we hypothesise that an emerging approach can be more relevant for SMEs doing ASD, and that this can impact how such companies should consider software security maturity.","2022-07-01","2023-05-03 16:23:54","2023-05-03 16:23:54","2023-05-03 16:23:53","102744","","","118","","Computers & Security","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\C9EQKYQT\S0167404822001390.html","","","Agile software development; Case study; Security priority; Security requirements; Software security","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"3WE5RZ6B","conferencePaper","2011","Taylor, Colin A.; Miranskyy, Andriy V.; Madhavji, Nazim H.","Request-implementation ratio as an indicator for requirements prioritisation imbalance","2011 Fifth International Workshop on Software Product Management (IWSPM)","","","10.1109/IWSPM.2011.6046206","","Software development organizations strive to implement features that will bring the highest business value to existing and prospective clients; hence the importance of requirements elicited directly from clients. However, some requirements need to be put into the backlog due to time and resource constraints in the development organization. Consequently, there have been numerous prioritisation approaches published in the literature and used in practice.","2011-08","2023-05-03 16:24:31","2023-05-03 16:24:31","","3-6","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\7YMVETQN\6046206.html","","","Databases; Planning; Software systems; Organizations; Requirements prioritisation; Correlation; Product management; request-implementation ratio (RI)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2011 Fifth International Workshop on Software Product Management (IWSPM)","","","","","","","","","","","","","","",""
"4J3NWCG3","journalArticle","2007","Karlsson, Lena; Dahlstedt, Åsa G.; Regnell, Björn; Natt och Dag, Johan; Persson, Anne","Requirements engineering challenges in market-driven software development – An interview study with practitioners","Information and Software Technology","","0950-5849","10.1016/j.infsof.2007.02.008","https://www.sciencedirect.com/science/article/pii/S0950584907000183","Requirements engineering for market-driven software development entails special challenges. This paper presents results from an empirical study that investigates these challenges, taking a qualitative approach using interviews with fourteen employees at eight software companies and a focus group meeting with practitioners. The objective of the study is to increase the understanding of the area of market-driven requirements engineering and provide suggestions for future research by describing encountered challenges. A number of challenging issues were found, including bridging communication gaps between marketing and development, selecting the right level of process support, basing the release plan on uncertain estimates, and managing the constant flow of requirements.","2007-06-01","2023-05-03 16:24:35","2023-05-03 16:24:35","2023-05-03 16:24:35","588-604","","6","49","","Information and Software Technology","","Qualitative Software Engineering Research","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\Q7BZE63L\S0950584907000183.html","","","Requirements engineering; Market-driven software development; Qualitative research; Semi-structured interview","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GDAE9XVR","bookSection","2022","Hoy, Zoe","Sixteen Limitations for Five Popular Requirements Prioritisation Approaches","Emerging Technologies for Innovation Management in the Software Industry","978-1-79989-059-1","","","https://www.igi-global.com/chapter/sixteen-limitations-for-five-popular-requirements-prioritisation-approaches/www.igi-global.com/chapter/sixteen-limitations-for-five-popular-requirements-prioritisation-approaches/304547","Software is an essential commodity that ensures mobile phones to the controls of an aeroplane work. There will always be more requirements for software than there is time and budget to achieve them, hence the need for various prioritisation approaches to decide which requirements to include in the s...","2022","2023-05-03 16:25:05","2023-05-03 16:25:05","2023-05-03 16:25:05","202-222","","","","","","","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-7998-9059-1.ch013","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"886HV23E","bookSection","2005","Greer, D.","Requirements Prioritisation for Incremental and Iterative Development","Requirements Engineering for Sociotechnical Systems","978-1-59140-506-1","","","https://www.igi-global.com/chapter/requirements-engineering-sociotechnical-systems/www.igi-global.com/chapter/requirements-engineering-sociotechnical-systems/28405","The problems associated with requirements prioritisation for an incremental and iterative software process are described. Existing approaches to prioritisation are then reviewed, including the Analytic Hierarchy Process, which involves making comparisons between requirements and SERUM, a method that...","2005","2023-05-03 16:25:08","2023-05-03 16:25:08","2023-05-03 16:25:08","100-118","","","","","","","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-59140-506-1.ch007","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"4WQTBZ6N","journalArticle","2002","Moisiadis, Frank","THE FUNDAMENTALS OF PRIORITISING REQUIREMENTS","Systems Engineering","","","","","In systems development projects the activity of prioritising requirements is carried out during the requirements engineering phase. The current trend is to develop systems that are quick-tomarket, bound by strict budget constraints, and released in progressive versions. The inherent risks with this trend include not adequately fulfilling the core requirements or simply missing important ones altogether.","2002","2023-05-03 16:25:19","2023-05-03 16:25:19","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\F8AIKPTM\Moisiadis - 2002 - THE FUNDAMENTALS OF PRIORITISING REQUIREMENTS.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"DZRWPDU8","conferencePaper","1996","Finkelstein, A.; Spanoudakis, G.; Ryan, M.","Software package requirements and procurement","Proceedings of the 8th International Workshop on Software Specification and Design","","","10.1109/IWSSD.1996.501156","","The paper outlines the problems of specifying requirements and deploying these requirements in the procurement of software packages. Despite the fact that software construction de novo is the exception rather than the rule, little or no support for the task of formulating requirements to support assessment and selection among existing software packages has been developed. We analyse the problems arising in this process and review related work. We outline the key components of a programme of research in this area.","1996-03","2023-05-03 16:25:24","2023-05-03 16:25:24","","141-145","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\C28UIE4T\Finkelstein et al. - 1996 - Software package requirements and procurement.pdf; C:\Users\gabra\Zotero\storage\3PYWYR4Y\501156.html","","","Software packages; Procurement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings of the 8th International Workshop on Software Specification and Design","","","","","","","","","","","","","","",""
"7C8EJGMD","journalArticle","2018","Saher, Najia; Baharom, Fauziah; Romli, Rohaida","A Review of Requirement Prioritization Techniques in Agile Software Development","","","","","","Prioritization is a crucial process in Requirement Change Management (RCM), as erroneous requirements prioritisation may increase the cost of development and lead to project failures. In Agile Software Development (ASD), requirement prioritization (RP) is difficult to maintain and requires more formal process. Changes in the priority list leads towards rework. Moreover, requirement prioritization in Agile is a difficult task due to its volatile nature. Ignorance of critical requirements during prioritization will result in numerous problems like poor quality of product and unsatisfied client. This paper presents a comprehensive review of RP by reviewing the strengths and weaknesses of existing RP techniques. This paper also provides information related to the current state-of-the-art on techniques and practices of RP and the research gaps in related works. These findings will contribute as inputs to construct a framework for selecting suitable RP techniques in ASD which can help software practitioners in choosing suitable prioritization techniques for handling continuous requirement change in ASD.","2018","2023-05-03 16:25:31","2023-05-03 16:25:31","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\D9MQMKJR\Saher et al. - 2018 - A Review of Requirement Prioritization Techniques .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2H78LH2L","journalArticle","","Kifetew, Fitsum Meshesha; Susi, Angelo; Munante, Denisse; Perini, Anna; Siena, Alberto; Busetta, Paolo","Towards Multi-decision-maker Requirements Prioritisation via Multi-Objective Optimisation","","","","","","Requirements prioritisation is a key decision making activity of the software development process, which relies on the capability of diﬀerent decision-makers to identify the optimal candidate rankings of the requirements, in order to be able to perform a strategic choice among them. In this paper, we formulate such multi-decision-maker requirements prioritisation as a multi-objective optimisation problem, and outline a solution that takes advantage of metaheuristic algorithms. The proposed solution allows diﬀerent decision-makers to specify their rankings according to a set of prioritisation criteria, it then synthesises them into a set of Pareto optimal global rankings. The ultimate choice of the prioritisation of the requirements would be made upon a focused analysis of the trade-oﬀs amongst the solutions on the Pareto frontier.","","2023-05-03 16:25:36","2023-05-03 16:25:36","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PY39QGEC\Kifetew et al. - Towards Multi-decision-maker Requirements Prioriti.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RSZG3MEV","conferencePaper","2011","Lim, Soo Ling; Damian, Daniela; Finkelstein, Anthony","StakeSource2.0: using social networks of stakeholders to identify and prioritise requirements","Proceedings of the 33rd International Conference on Software Engineering","978-1-4503-0445-0","","10.1145/1985793.1985983","https://doi.org/10.1145/1985793.1985983","Software projects typically rely on system analysts to conduct requirements elicitation, an approach potentially costly for large projects with many stakeholders and requirements. This paper describes StakeSource2.0, a web-based tool that uses social networks and collaborative filtering, a ""crowdsourcing"" approach, to identify and prioritise stakeholders and their requirements.","2011-05-21","2023-05-03 16:25:52","2023-05-03 16:25:52","2023-05-03","1022–1024","","","","","","StakeSource2.0","ICSE '11","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements elicitation; collaborative filtering; social networks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GPDCXU6A","journalArticle","2017","Anand, R. Vijay; Dinakaran, M.","Multi-voting and binary search tree-based requirements prioritisation for e-service software project development","Electronic Government, an International Journal","","1740-7494","10.1504/EG.2017.086041","https://www.inderscienceonline.com/doi/abs/10.1504/EG.2017.086041","In an ever changing modern business environment, the movement and trends are so unpredictable and almost imposes challenges that are not viable for the professionals to resolve and fulfil the requirements at once. Prioritisation is one of the foremost concerns for any business professionals and individuals as it helps them to achieve better results in production management, and quality and assurance sites. In the past, various methods were proposed such as MoSCoW, business value based, technology risk based, Kano model, agile methods, walking skeleton and validated learning which suffered in addressing the problem of stakeholder conflict (SC). In this paper, we have proposed a framework model for e-service development using multi-voting and binary search tree to prioritise requirements with systematic probability sample selection of stakeholders. Relative weighting method was adopted to perform prioritisation in iteration process which helps the stakeholders to maximise their returns of investment (ROI).","2017-01","2023-05-03 16:25:56","2023-05-03 16:25:56","2023-05-03 16:25:56","111-128","","2","13","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements prioritisation; binary search tree; e-governance; iteration with relative weighting; multi-voting; response rate estimation; systematic probability sampling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7ISVKZW5","book","2017","Munante, Denisse; Kifetew, Fitsum Meshesha; Albrecht, Oliver","Modelling Prioritisation Decision-making in Software Evolution","","","","","","Decisions concerning prioritisation occur in different moments during software development and can involve different stakehold-ers. Our research objective is to develop prioritisation processes that meet stakeholders' needs, and allow obtaining better quality decisions. In this paper we propose a structured approach to model decision-making in real setting with the purpose of eliciting from the stakeholders involved in the decision-making process their needs for improvements. We use the resulting models to derive a general model for prioritisation processes and outline how such processes could be tool-supported.","2017-02-27","2023-05-03 16:26:01","2023-05-03 16:26:01","","","","","","","","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\V528CI3A\Munante et al. - 2017 - Modelling Prioritisation Decision-making in Softwa.pdf; ","https://www.researchgate.net/profile/Fitsum-Meshesha-Kifetew/publication/317358546_Modelling_Prioritisation_Decision-making_in_Software_Evolution/links/593679b5aca272fc556f1045/Modelling-Prioritisation-Decision-making-in-Software-Evolution.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7I6T7ZW2","journalArticle","2014","Gambo, Ishaya P.; Soriyan, Abimbola H.; Ikono, Rhoda N.","A Proposed Process Model for Requirements Engineering using Delphi Techniques for Prioritisation","International Journal of Information Technology and Computer Science","","20749007, 20749015","10.5815/ijitcs.2015.01.09","http://www.mecs-press.org/ijitcs/ijitcs-v7-n1/v7n1-9.html","Requirements engineering (RE) addresses the first software development step and lays the foundation for a successful system. Consequently, ability to identify problems and suggestions for improvements in the RE process opens up significant potential for increasing the success of software projects. Since RE process is naturally collaborative in nature, the intensiveness from both knowledge and human perspectives opens up the problem of decision making on requirements that can be facilitated by requirements prioritisation. In this regard, the paper opined the need for requirements prioritization techniques that will help the developers to obtain consensus among stakeholders using a suitable technique. In particular, the paper proposed a RE process model using Delphi technique. The Delphi technique was suggested in this paper to facilitate and enhance the process of requirements prioritisation in a multilevel prioritisation dimension. Therefore, the proposed model on implementation will contribute to the formulation of an interactive framework for requirements prioritisation to produce a requirement ordering which complies with the existing priorities.","2014-12-08","2023-05-03 16:26:12","2023-05-03 16:26:13","2023-05-03 16:26:12","73-80","","1","7","","IJITCS","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\A4VZYLWT\Gambo et al. - 2014 - A Proposed Process Model for Requirements Engineer.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"A8Y6T8A6","journalArticle","2002","Carlshamre, Pär","Release Planning in Market-Driven Software Product Development: Provoking an Understanding","Requirements Engineering","","1432-010X","10.1007/s007660200010","https://doi.org/10.1007/s007660200010","","2002-09-01","2023-05-03 16:26:14","2023-05-03 16:26:14","2023-05-03 16:26:13","139-151","","3","7","","Requirements Eng","Release Planning in Market-Driven Software Product Development","","","","","","","en","","","","","Springer Link","","","","","","","Key words:Pragmatic algorithm – Provotype – Release planning – Requirements coupling – Requirements interdependencies – Wicked problem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"GMDJF36G","conferencePaper","2018","Gralha, Catarina; Damian, Daniela; Wasserman, Anthony I. (Tony); Goulão, Miguel; Araújo, João","The evolution of requirements practices in software startups","Proceedings of the 40th International Conference on Software Engineering","978-1-4503-5638-1","","10.1145/3180155.3180158","https://doi.org/10.1145/3180155.3180158","We use Grounded Theory to study the evolution of requirements practices of 16 software startups as they grow and introduce new products and services. These startups operate in a dynamic environment, with significant time and market pressure, and rarely have time for systematic requirements analysis. Our theory describes the evolution of practice along six dimensions that emerged as relevant to their requirements activities: requirements artefacts, knowledge management, requirements-related roles, planning, technical debt and product quality. Beyond the relationships among the dimensions, our theory also explains the turning points that drove the evolution along these dimensions. These changes are reactive, rather than planned, suggesting an overall pragmatic lightness, i.e., flexibility, in the startups' evolution towards engineering practices for requirements. Our theory organises knowledge about evolving requirements practice in maturing startups, and provides practical insights for startups' assessing their own evolution as they face challenges to their growth. Our research also suggests that a startup's evolution along the six dimensions is not fundamental to its success, but has significant effects on their product, their employees and the company.","2018-05-27","2023-05-03 16:26:17","2023-05-03 16:26:17","2023-05-03","823–833","","","","","","","ICSE '18","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","requirements engineering; grounded theory; evolution; startups","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J5R6U44R","journalArticle","2018","Hujainah, Fadhl; Abu Bakar, Rohani Binti; Al-haimi, Basheer; Abdulgabber, Mansoor Abdullateef","Stakeholder quantification and prioritisation research: A systematic literature review","Information and Software Technology","","0950-5849","10.1016/j.infsof.2018.05.008","https://www.sciencedirect.com/science/article/pii/S0950584917302422","Context Stakeholder quantification and prioritisation (SQP) is executed to quantify and prioritise stakeholders of the system based on their impacts. Selecting and involving the appropriate stakeholders are considered one of the major factors for producing a successful system. Objective The objectives of this paper is to provide precise investigation regarding the SQP domain with respect to its impact on prioritising requirements, identifying SQP attributes, critically investigating the existing techniques, and presenting the challenges and recommended future works. Method The systematic literature review (SLR) guidelines proposed by Kitchenham are adopted to guide the review process. The identified related studies underwent a rigorous study selection process. Thus, 31 out of 210 identified studies were selected as primary studies to address adequately the formulated research questions. Results Findings demonstrate that SQP is a crucial process in requirement prioritisation (RP) because of its ability to identify stakeholders’ impact on the systems requirements that lead to the production of a correctly prioritised list of requirements. Seventeen SQP attributes are revealed along with their description, usage impact, and degree of importance. Furthermore, nine techniques that focus on quantification and prioritisation of the stakeholders are identified and critically analysed in terms of their description, SQP process involved, SQP attributes used, types, and limitations. The findings reveal that these techniques face some challenges with respect to the lack of low-level implementation details, lack of automation and intelligence level, and heavy reliance on the involvement of experts. Conclusion SQP has been extensively discussed in stakeholder analysis and requirement prioritisation domains. Based on the findings, a new intelligent solution is suggested to minimise the need for expert participation in conducting the SQP process along with proposing measurement criteria for the attributes used to evaluate the stakeholders. The deficiency of research works regarding the selection of SQP techniques is also observed.","2018-10-01","2023-05-03 16:26:24","2023-05-03 16:26:24","2023-05-03 16:26:24","85-99","","","102","","Information and Software Technology","Stakeholder quantification and prioritisation research","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\HRX7HFAF\S0950584917302422.html","","","Systematic review; Stakeholders prioritisation; Stakeholders quantification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"V8VTGTBM","journalArticle","2020","Ali, Sadia; Hafeez, Yaser; Asghar, Sohail; Nawaz, Asif; Saeed, Saqib","Aspect-based requirements mining technique to improve prioritisation process: multi-stakeholder perspective","IET Software","","1751-8814","10.1049/iet-sen.2019.0332","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0332","Requirement prioritisation and selection is an essential activity in modern-day large software development. Optimal prioritisation process is critical for successful implementation and release planning in a software development project. Requirement prioritisation becomes more challenging in projects having large sets of requirements and stakeholders, having diverse perspectives resulting in irrelevancy and ambiguity during features extraction. This study aims to improve requirement prioritisation process using text mining and clustering techniques for accurate extraction of features and requirement prioritisation in multi-stakeholder context. The proposed framework developed to avoid incompleteness in requirements and disagreement among development teams and stakeholders. Thus, the proposed framework compared with other requirement prioritisation techniques (i.e. Analytical Heretical Process, Commutative Voting and Wiegers) to highlight the significance of the proposed framework while conducting an experimental study. The results show that the proposed framework outperformed the traditional techniques and enhanced the prioritisation process with complete semantic information of extracted features and taking into account the diverse perspective of stakeholders.","2020","2023-05-03 16:26:32","2023-05-03 16:26:32","2023-05-03 16:26:32","482-492","","5","14","","","Aspect-based requirements mining technique to improve prioritisation process","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0332","","C:\Users\gabra\Zotero\storage\UACIIS42\Ali et al. - 2020 - Aspect-based requirements mining technique to impr.pdf","","","decision making; systems analysis; formal specification; software development management; analytical heretical process; clustering techniques; data mining; development teams; feature extraction; multistakeholder context; multistakeholder perspective; optimal prioritisation process; release planning; requirement prioritisation process; requirement prioritisation techniques; software development project; text mining","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"P6A3Q5BV","bookSection","2022","Hoy, Zoe","Use of Framework Synthesis to Identify the Factors Considered for Five Popular Prioritisation Approaches","Emerging Technologies for Innovation Management in the Software Industry","978-1-79989-059-1","","","https://www.igi-global.com/chapter/use-of-framework-synthesis-to-identify-the-factors-considered-for-five-popular-prioritisation-approaches/www.igi-global.com/chapter/use-of-framework-synthesis-to-identify-the-factors-considered-for-five-popular-prioritisation-approaches/304543","Software requirement prioritisation is an important task that ultimately determines whether the software is successful and achieves customer satisfaction. Startups use agile methodologies to develop software, as it adapts to requirement changes well and delivers software quickly in short increments,...","2022","2023-05-03 16:26:38","2023-05-03 16:26:38","2023-05-03 16:26:38","157-167","","","","","","","","","","","IGI Global","","en","Access limited to members","","","","www.igi-global.com","","DOI: 10.4018/978-1-7998-9059-1.ch009","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"98EQQGAG","journalArticle","2002","Helmer, Guy; Wong, Johnny; Slagell, Mark; Honavar, Vasant; Miller, Les; Lutz, Robyn","A Software Fault Tree Approach to Requirements Analysis of an Intrusion Detection System","Requirements Engineering","","1432-010X","10.1007/s007660200016","https://doi.org/10.1007/s007660200016","","2002-12-01","2023-05-03 16:29:31","2023-05-03 16:29:31","2023-05-03 16:29:31","207-220","","4","7","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Key words:Coloured Petri nets – Intrusion detection system – Mobile agents – Requirements analysis – Software fault tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"G4J3CI9H","conferencePaper","2014","Snijders, Remco; Dalpiaz, Fabiano; Hosseini, Mahmood; Shahri, Alimohammad; Ali, Raian","Crowd-centric Requirements Engineering","2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing","","","10.1109/UCC.2014.96","","Requirements engineering is a preliminary and crucial phase for the correctness and quality of software systems. Despite the agreement on the positive correlation between user involvement in requirements engineering and software success, current development methods employ a too narrow concept of that user and rely on a recruited set of users considered to be representative. Such approaches might not cater for the diversity and dynamism of the actual users and the context of software usage. This is especially true in new paradigms such as cloud and mobile computing. To overcome these limitations, we propose crowd-centric requirements engineering (CCRE) as a revised method for requirements engineering where users become primary contributors, resulting in higher-quality requirements and increased user satisfaction. CCRE relies on crowd sourcing to support a broader user involvement, and on gamification to motivate that voluntary involvement.","2014-12","2023-05-03 16:29:37","2023-05-03 16:29:37","","614-615","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\UBWA5Z27\Snijders et al. - 2014 - Crowd-centric Requirements Engineering.pdf","","","requirements engineering; Companies; Educational institutions; Software systems; Context; user involvement; Cloud computing; crowdsourcing; Crowdsourcing; gamification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing","","","","","","","","","","","","","","",""
"5YL6GM2Y","journalArticle","2010","Dzamashvili Fogelström, Nina; Gorschek, Tony; Svahnberg, Mikael; Olsson, Peo","The impact of agile principles on market-driven software product development","Journal of Software Maintenance and Evolution: Research and Practice","","1532-0618","10.1002/spip.420","https://onlinelibrary.wiley.com/doi/abs/10.1002/spip.420","Agile development methods such as extreme programming (XP), SCRUM, Lean Software Development (Lean SD) and others have gained much popularity during the last years. Agile methodologies promise faster time-to-market, satisfied customers and high quality software. While these prospects are appealing, the suitability of agile practices to different domains and business contexts still remains unclear. In this article we investigate the applicability of agile principles in the context of market-driven software product development (MDPD), focusing on pre-project activities. This article presents results of a comparison between typical properties of agile methods to the needs of MDPD, as well as findings of a case study conducted at Ericsson, an early adopter of agile product development. The results show misalignment between the agile principles and needs of pre-project activities in market-driven development. This misalignment threatens to subtract from the positive aspects of agile development, but maybe more importantly, threaten the overall product development by disabling effective product management. Copyright © 2009 John Wiley & Sons, Ltd.","2010","2023-05-03 16:29:44","2023-05-03 16:29:44","2023-05-03 16:29:44","53-80","","1","22","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spip.420","","C:\Users\gabra\Zotero\storage\BNJGFK9B\spip.html","","","case study; agile methods; market-driven software development; software product management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U7FWL4GH","conferencePaper","2010","Pandey, Dhirendra; Suman, U.; Ramani, A.K.","An Effective Requirement Engineering Process Model for Software Development and Requirements Management","2010 International Conference on Advances in Recent Technologies in Communication and Computing","","","10.1109/ARTCom.2010.24","","Requirement engineering is the most effective phase of software development process. It aims to collect good requirements from stakeholders in the right way. It is important for every organization to develop quality software products that can satisfy user's needs. Requirements engineering for software development process is a complex exercise that considers product demands from a vast number of viewpoints, roles, responsibilities, and objectives. Therefore, it becomes necessary to apply requirement engineering practices in every phase of software development process. In this paper, we propose an effective requirements engineering process model to produce quality requirements for software development. Requirement management and planning phase is executed independently for an effective management of requirements. It is iterative in nature for better requirement engineering and later maintenance. The successful implementation of proposed requirement engineering process can have a good impact on the production of quality software product.","2010-10","2023-05-03 16:29:56","2023-05-03 16:29:56","","287-291","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\29IIABA8\5656776.html","","","Programming; Documentation; Software engineering; Software; Planning; Resource management; Requirement engineering; requirement elicitation; Presses; requirement analysis; requirement development; requirement management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2010 International Conference on Advances in Recent Technologies in Communication and Computing","","","","","","","","","","","","","","",""
"BMWVVNU2","conferencePaper","2014","Valença, George; Alves, Carina; Heimann, Virgínia; Jansen, Slinger; Brinkkemper, Sjaak","Competition and collaboration in requirements engineering: A case study of an emerging software ecosystem","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","10.1109/RE.2014.6912289","","Increasingly, small to medium software producing organisations are working together in collaboration networks to supply complex compositions of their products and services to customers. In this paper, we present a case study of two software companies that are evolving their partnership towards the creation of a software ecosystem. We investigate the impacts of their tightening partnership on software product management, with a focus on requirements engineering practices. We observe that the requirements definition and negotiation processes are directly affected by their fluid collaborative and competitive relationships. Power disputes, volatile roles and mismatches in release synchronisation are also aspects observed in the studied software ecosystem.We extract several observations from the case study that support small to medium software firms in making decisions within their software ecosystem.","2014-08","2023-05-03 16:30:00","2023-05-03 16:30:00","","384-393","","","","","","Competition and collaboration in requirements engineering","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\LZ8YTW9F\6912289.html","","","Collaboration; Software; Companies; Interviews; Planning; Ecosystems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2014 IEEE 22nd International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"WGT53V22","journalArticle","","Regnell, Björn","Requirements Engineering with Use Cases","","","","","","","","2023-05-03 16:30:31","2023-05-03 16:30:31","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\3YGPB3RT\Regnell - Requirements Engineering with Use Cases.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VN6V859I","journalArticle","2017","Sharma, Ashish K.; Khandait, Sunanda P.","Development of a fuzzy integrated software tool to prioritise technical requirements for effective design of online shopping websites","International Journal of Computational Systems Engineering","","2046-3391","10.1504/IJCSYSE.2017.083168","https://www.inderscienceonline.com/doi/abs/10.1504/IJCSYSE.2017.083168","Recently, there has been a tremendous growth in the online shopping; nevertheless the users' satisfaction rate has dropped largely due to poor design of websites. Thus, there is a pressing need of well-designed websites. Decision making plays a significant role in effective design of websites. Quality function deployment (QFD) being a decision making tool, can be employed for the design of online shopping websites. However, QFD uses linguistic expressions and follows crisp approach generating uncertainty and vagueness which leads to inconsistency in results. This requires fuzzy integration with QFD to address the issue. In QFD, the customer needs (CNs) and technical requirements (TRs) are prioritised. However, the paper considers TRs prioritisation only and in this regard it aims to develop a fuzzy integrated technical requirements prioritisation software tool for effective design of online shopping websites. The tool is developed using VB.Net and MS-Access and symmetrical triangular fuzzy numbers (STFNs) are proposed to deal with the uncertainty and vagueness.","2017-01","2023-05-03 16:30:47","2023-05-03 16:30:47","2023-05-03 16:30:47","91-110","","1-2","3","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","decision making; customer needs; fuzzy integrated software; fuzzy logic; online shopping websites; prioritisation; QFD; quality function deployment; STFN; symmetrical triangular fuzzy numbers; technical requirements; uncertainty; user satisfaction; vagueness; VBNet; website design","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M45Y3FIM","conferencePaper","2009","Yoo, Shin; Harman, Mark; Tonella, Paolo; Susi, Angelo","Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge","Proceedings of the eighteenth international symposium on Software testing and analysis","978-1-60558-338-9","","10.1145/1572272.1572296","https://doi.org/10.1145/1572272.1572296","Pair-wise comparison has been successfully utilised in order to prioritise test cases by exploiting the rich, valuable and unique knowledge of the tester. However, the prohibitively large cost of the pair-wise comparison method prevents it from being applied to large test suites. In this paper, we introduce a cluster-based test case prioritisation technique. By clustering test cases, based on their dynamic runtime behaviour, we can reduce the required number of pair-wise comparisons significantly. The approach is evaluated on seven test suites ranging in size from 154 to 1,061 test cases. We present an empirical study that shows that the resulting prioritisation is more effective than existing coverage-based prioritisation techniques in terms of rate of fault detection. Perhaps surprisingly, the paper also demonstrates that clustering (even without human input) can outperform unclustered coverage-based technologies, and discusses an automated process that can be used to determine whether the application of the proposed approach would yield improvement.","2009-07-19","2023-05-03 16:30:52","2023-05-03 16:30:52","2023-05-03","201–212","","","","","","","ISSTA '09","","","","Association for Computing Machinery","New York, NY, USA","","","","","","ACM Digital Library","","","","","","","ahp; clustering; test case prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TZS4KSKU","journalArticle","2020","Prakash, B.; Viswanathan, V.","A comparative study of meta-heuristic optimisation techniques for prioritisation of risks in agile software development","International Journal of Computer Applications in Technology","","0952-8091","10.1504/IJCAT.2020.104688","https://www.inderscienceonline.com/doi/abs/10.1504/IJCAT.2020.104688","Risks are in general termed as threats or uncertainties that influence the project performance and its outcomes to the greater extent. To ensure software quality and project success, every organisation should enforce a proper mechanism to efficiently manage the risks irrespective of the development model they follow. Risk prioritisation is a most critical step in risk management process that helps the organisation to resolve the risks in shorter duration of time. In this paper, a comparative study about different meta-heuristic optimisation techniques for prioritising the risks in agile environments is presented. The five most effective meta-heuristic optimisation algorithms such as Genetic Algorithm (GA), Particle Swarm Optimisation (PSO), Ant Colony Optimisation (ACO), Grey Wolf Optimisation (GWO) and Analytical Hierarchy Process (AHP) are considered and the results are evaluated based on four key criterion attributes such as error rate, accuracy, reliability, and running time. The result proves that GWO outperforms other four meta-heuristic optimisation techniques for the prioritisation of risks in agile environment.","2020-01","2023-05-03 16:31:06","2023-05-03 16:31:06","2023-05-03 16:31:06","175-188","","2","62","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","agile software development; project management; meta-heuristic optimisation; risk management; risk prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6E6JLIBH","conferencePaper","1999","Greer, D.; Bustard, D.W.; Sunazuka, T.","Prioritisation of system changes using cost-benefit and risk assessments","Proceedings IEEE International Symposium on Requirements Engineering (Cat. No.PR00188)","","","10.1109/ISRE.1999.777998","","This paper proposes an approach to the prioritisation of system changes that takes account of the relative costs and benefits of those changes and the risks that they reduce or introduce. This is part of the SERUM methodology (Software Engineering Risk: Understanding and Management), which is being developed to help identify effective ways of using risk analysis and control in software production. SERUM introduces risk management at the initial business analysis stage of requirements investigation, and assumes an evolutionary approach to software delivery. Prioritisation is determined from five factors: benefits, costs and risk exposure in the current system, target system, and development process. The relative importance of these factors is adjustable. Results from a case study at NEC illustrate the prioritisation process and a supporting software tool is also described.","1999-06","2023-05-03 16:31:11","2023-05-03 16:31:11","","180-187","","","","","","","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\MDRAUTJX\777998.html","","","Software engineering; Software systems; Application software; Costs; Read only memory; Business; National electric code; Production; Risk analysis; Risk management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE International Symposium on Requirements Engineering (Cat. No.PR00188)","","","","","","","","","","","","","","",""
"P8KFQTFI","journalArticle","","Regnell, Björn","Requirements Engineering with Use Cases","","","","","","","","2023-05-03 16:31:13","2023-05-03 16:31:13","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\CHVHMBG4\Regnell - Requirements Engineering with Use Cases.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"UEYZ7XYX","preprint","2013","Ellis-Braithwaite, Richard","Analysing the Assumed Benefits of Software Requirements","","","","10.48550/arXiv.1305.3853","http://arxiv.org/abs/1305.3853","Often during the requirements engineering (RE) process, the value of a requirement is assessed, e.g., in requirement prioritisation, release planning, and trade-off analysis. In order to support these activities, this research evaluates Goal Oriented Requirements Engineering (GORE) methods for the description of a requirement's value. Specifically, we investigate the goal-to-goal contribution relationship for its ability to demonstrate the value of a requirement, and propose that it is enriched with concepts such as correlation, confidence, and utility.","2013-06-13","2023-05-03 16:31:19","2023-05-03 16:31:19","2023-05-03 16:31:18","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1305.3853 [cs]","","C:\Users\gabra\Zotero\storage\7PQ2JGKS\Ellis-Braithwaite - 2013 - Analysing the Assumed Benefits of Software Require.pdf; C:\Users\gabra\Zotero\storage\4Z8TTE35\1305.html","","","Computer Science - Software Engineering; D.2.1","","","","","","","","","","","","","","","","","","","arXiv:1305.3853","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"FJ6XMNQY","journalArticle","","Regnell, Björn","Requirements Engineering with Use Cases","","","","","","","","2023-05-03 16:31:21","2023-05-03 16:31:21","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\9DDW5SAW\Regnell - Requirements Engineering with Use Cases.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MYYV43U8","journalArticle","2015","Latha, T. Jessie; Suganthi, L.","An empirical study on creating software product value in India – an analytic hierarchy process approach","International Journal of Business Information Systems","","1746-0972","10.1504/IJBIS.2015.066125","https://www.inderscienceonline.com/doi/abs/10.1504/IJBIS.2015.066125","India is growing strongly in the software industry and has a dynamic global market in software development. In today’s competitive market it is necessary for the software companies to maximise the creation of software product value to remain a success in the market. The value of a software product is largely derived through the fulfilment of requirements. Therefore, it is necessary to carefully select the requirements to include in a specific software release. This paper presents an empirical study to understand how the value is created by finding the importance of different decision-making criteria and the perspectives that motivates them. The study is carried out among multinational software companies operating in India. The analytic hierarchy process is used to find the relative importance of the 13 criteria and to prioritise them by considering what creates business value in a software product. The results depict that for any product to be accepted in the market or by the potential customers business perspective is vital.","2015-01","2023-05-03 16:31:40","2023-05-03 16:31:40","2023-05-03 16:31:40","26-43","","1","18","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements engineering; AHP; analytic hierarchy process; business value; criteria prioritisation; India; value-based software engineering; VBSE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"TQSHN6EH","conferencePaper","2007","Bang, Tom J.","An Agile Approach to Requirement Specification","Agile Processes in Software Engineering and Extreme Programming","978-3-540-73101-6","","10.1007/978-3-540-73101-6_35","","This experience report is about how one project in Norway made an agile approach to specifying software requirements for a new intranet. Rather than spending months on trying to detail all requirements and aspects of the solution, the team spent a few weeks specifying a prioritized list of high-level requirements. Further details will emerge by face-to-face communication through the iterations of the project quickly turning in to valuable working software for the customer.","2007","2023-05-03 16:31:48","2023-05-03 16:31:48","","193-197","","","","","","","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Content Management System; Project Plan; Requirement Specification; Student Welfare; User Story","Concas, Giulio; Damiani, Ernesto; Scotto, Marco; Succi, Giancarlo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"R84889WV","journalArticle","2014","Achimugu, Philip; Selamat, Ali; Ibrahim, Roliana; Mahrin, Mohd Naz’ri","A systematic literature review of software requirements prioritization research","Information and Software Technology","","0950-5849","10.1016/j.infsof.2014.02.001","https://www.sciencedirect.com/science/article/pii/S0950584914000354","Context During requirements engineering, prioritization is performed to grade or rank requirements in their order of importance and subsequent implementation releases. It is a major step taken in making crucial decisions so as to increase the economic value of a system. Objective The purpose of this study is to identify and analyze existing prioritization techniques in the context of the formulated research questions. Method Search terms with relevant keywords were used to identify primary studies that relate requirements prioritization classified under journal articles, conference papers, workshops, symposiums, book chapters and IEEE bulletins. Results 73 Primary studies were selected from the search processes. Out of these studies; 13 were journal articles, 35 were conference papers and 8 were workshop papers. Furthermore, contributions from symposiums as well as IEEE bulletins were 2 each while the total number of book chapters amounted to 13. Conclusion Prioritization has been significantly discussed in the requirements engineering domain. However, it was generally discovered that, existing prioritization techniques suffer from a number of limitations which includes: lack of scalability, methods of dealing with rank updates during requirements evolution, coordination among stakeholders and requirements dependency issues. Also, the applicability of existing techniques in complex and real setting has not been reported yet.","2014-06-01","2023-05-03 16:31:50","2023-05-03 16:31:50","2023-05-03 16:31:50","568-585","","6","56","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\IMJDHMQD\S0950584914000354.html","","","Software systems; Requirements; Stakeholders; Requirement engineering; Prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"U3UZDGEN","journalArticle","1998","Karlsson, Joachim; Wohlin, Claes; Regnell, Björn","An evaluation of methods for prioritizing software requirements","Information and Software Technology","","0950-5849","10.1016/S0950-5849(97)00053-0","https://www.sciencedirect.com/science/article/pii/S0950584997000530","This article describes an evaluation of six different methods for prioritizing software requirements. Based on the quality requirements for a telephony system, the authors individually used all six methods on separate occasions to prioritize the requirements. The methods were then characterized according to a number of criteria from a user's perspective. We found the analytic hierarchy process to be the most promising method, although it may be problematic to scale-up. In an industrial follow-up study we used the analytic hierarchy process to further investigate its applicability. We found that the process is demanding but worth the effort because of its ability to provide reliable results, promote knowledge transfer and create consensus among project members.","1998-01-01","2023-05-03 16:31:55","2023-05-03 16:31:55","2023-05-03 16:31:55","939-947","","14","39","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\R5M37GJ6\S0950584997000530.html; C:\Users\gabra\Zotero\storage\JGEMVPAP\Karlsson et al. - 1998 - An evaluation of methods for prioritizing software.pdf","","","Experimental evaluation; Requirements, engineering; Requirements, prioritising","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ZV3MZHAP","journalArticle","2013","AL-Ta’ani, Rami Hasan; Razali, Rozilawati","Prioritizing Requirements in Agile Development: A Conceptual Framework","Procedia Technology","","2212-0173","10.1016/j.protcy.2013.12.252","https://www.sciencedirect.com/science/article/pii/S2212017313004064","The advance of technology and business needs have triggered user requirements to evolvealmost every day.It is therefore impossible to fulfill the requirements at once. Agile methods have been introduced to mitigate such issues by implementing user requirements incrementally and iteratively. Selecting a group of prominent requirements to be implemented in iterationsis considered as essential in agile development. This can be achieved by performing continuous requirements prioritisation. Practitioners however are confronted with difficulties in making decisions about which requirements should be considered for implementation at the inter-iteration period. This paper proposes a conceptual framework that outlines the contributing factors and how these factors affect the process and the final product of requirements prioritisation process in agile methods. Thefactors were identified by reviewing the related work. The data were analysed by using content analysis. The proposed conceptual framework aims to guide practice and future research on effective requirements prioritisation process thatcan produce high quality requirementswhich meet the needsof the intendedusers.","2013-01-01","2023-05-03 16:32:03","2023-05-03 16:32:03","2023-05-03 16:32:03","733-739","","","11","","Procedia Technology","Prioritizing Requirements in Agile Development","4th International Conference on Electrical Engineering and Informatics, ICEEI 2013","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\5ENBQJL4\AL-Ta’ani and Razali - 2013 - Prioritizing Requirements in Agile Development A .pdf; C:\Users\gabra\Zotero\storage\KPKU792H\S2212017313004064.html","","","Agile Methods; Requirements Prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"38FCPRDQ","journalArticle","2013","Colomo-Palacios, Ricardo; Casado-Lumbreras, Cristina; Soto-Acosta, Pedro; García-Crespo, Ángel","Decisions in software development projects management. An exploratory study","Behaviour & Information Technology","","0144-929X","10.1080/0144929X.2011.630414","https://doi.org/10.1080/0144929X.2011.630414","Given the importance of software in today's world, the development of software systems is a key activity that requires complex management scenarios. This article explores the implications of hard decisions in the context of software development projects (SDPs). More in deep, it focuses on the emotional consequences of making hard decisions in IT organisations. Complex SDPs involve a great variety of actors. This fact entails morale, feelings and emotions, which play an important role for communication, interaction and, ultimately, decision making. The aim of the article is twofold. First (Study 1), to identify which are the most important hard decisions in SDPS. Second (Study 2), to study the influence of emotions on decision-making processes (Study 2). Findings show the complex emotional consequences and difficulties that managers must face in hard decision-making processes.","2013-11-01","2023-05-03 16:32:23","2023-05-03 16:32:23","2023-05-03 16:32:23","1077-1085","","11","32","","","","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/0144929X.2011.630414","","C:\Users\gabra\Zotero\storage\LGVV2DZP\Colomo-Palacios et al. - 2013 - Decisions in software development projects managem.pdf","","","decision making; Delphi method; emotional response; emotions; hard decisions; information systems success; organisational performance; software project management; task analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"2GCZ7I9E","journalArticle","2013","Thakurta, Rahul","A value-based approach to prioritise non-functional requirements during software project development","International Journal of Business Information Systems","","1746-0972","10.1504/IJBIS.2013.053213","https://www.inderscienceonline.com/doi/abs/10.1504/IJBIS.2013.053213","Non-functional requirements determine the characteristics of a software product or service as a whole. The research described in this paper presents an empirical framework involving respondents of both the project and the business organisation, in order to select and prioritise a list of non-functional requirements for implementation during software project development. The assessment process takes into consideration the extent of relative value addition while making trade-off in selection of non-functional requirements for inclusion in the project’s requirement set. The final results are expected to be beneficial to both the business and the project organisation by identifying and implementing the desired non-functional requirements that contributes to business value in a cost effective manner.","2013-01","2023-05-03 16:32:28","2023-05-03 16:32:28","2023-05-03 16:32:28","363-382","","4","12","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","business value; NFR; non-functional requirement; software project development","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VTW6FWJ2","conferencePaper","2013","Valen¸a, George","Requirements negotiation model: A social oriented approach for software ecosystems evolution","2013 21st IEEE International Requirements Engineering Conference (RE)","","","10.1109/RE.2013.6636763","","Software Ecosystems is becoming a relevant research topic by analysing the software industry as networked organisations based on a common interest in a central software technology. In this context, appropriately handling Requirements Engineering is a success factor for Software Platform Management. Nevertheless, recent research in this subject does not integrate the ecosystem's social dimension to a business view during requirements negotiations. The state-of-the-art is generally concerned with challenges of achieving and agreed requirements understanding. Thereby, this PhD proposes a Requirements Negotiation Model to address the negotiation process through a more holistic perspective. It aims to present an insightful reasoning on how requirements negotiation collaborates to ecosystem's health and success, defining negotiation strategies along Software Ecosystem evolution considering the Software Platform Management.","2013-07","2023-05-03 16:34:39","2023-05-03 16:34:39","","393-396","","","","","","Requirements negotiation model","","","","","","","","","","","","IEEE Xplore","","ISSN: 2332-6441","","C:\Users\gabra\Zotero\storage\LNH8V77E\6636763.html","","","Software; Companies; Conferences; Decision making; Context; decision making; Ecosystems; Requirements negotiation; social aspects; software ecosystems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2013 21st IEEE International Requirements Engineering Conference (RE)","","","","","","","","","","","","","","",""
"Q4Y9TJS9","bookSection","2016","Fernandes, João M.; Machado, Ricardo J.","Requirements Negotiation and Prioritisation","Requirements in Engineering Projects","978-3-319-18597-2","","","https://doi.org/10.1007/978-3-319-18597-2_6","The quality of a software application is highly dependent on its ability to meet the necessities of customers and users, so it is crucial to capture and specify all requirements that the system must possess. However, many projects have more candidate requirements than those that can be built without exceeding the available time and budget. This chapter presents and discusses the need to allow stakeholders to collectively negotiate the requirements in order to decide which ones shall be incorporated in the system. The chapter also discusses the importance of assigning priorities to requirements, in the context of a system project. The aspects related to requirements prioritisation and some of the most popular prioritisation techniques are also presented.","2016","2023-05-03 16:34:43","2023-05-03 16:34:43","2023-05-03 16:34:39","119-136","","","","","","","Lecture Notes in Management and Industrial Engineering","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","DOI: 10.1007/978-3-319-18597-2_6","","","","","Requirement Engineer; Analytical Hierarchy Process; Negotiation Process; Null Point; Prioritisation Method","Fernandes, João M.; Machado, Ricardo J.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ALQC2QVU","journalArticle","2014","Zhang, He; Li, Juan; Zhu, Liming; Jeffery, Ross; Liu, Yan; Wang, Qing; Li, Mingshu","Investigating dependencies in software requirements for change propagation analysis","Information and Software Technology","","0950-5849","10.1016/j.infsof.2013.07.001","https://www.sciencedirect.com/science/article/pii/S095058491300147X","Context The dependencies between individual requirements have an important influence on software engineering activities e.g., project planning, architecture design, and change impact analysis. Although dozens of requirement dependency types were suggested in the literature from different points of interest, there still lacks an evaluation of the applicability of these dependency types in requirements engineering. Objective Understanding the effect of these requirement dependencies to software engineering activities is useful but not trivial. In this study, we aimed to first investigate whether the existing dependency types are useful in practise, in particular for change propagation analysis, and then suggest improvements for dependency classification and definition. Method We conducted a case study that evaluated the usefulness and applicability of two well-known generic dependency models covering 25 dependency types. The case study was conducted in a real-world industry project with three participants who offered different perspectives. Results Our initial evaluation found that there exist a number of overlapping and/or ambiguous dependency types among the current models; five dependency types are particularly useful in change propagation analysis; and practitioners with different backgrounds possess various viewpoints on change propagation. To improve the state-of-the-art, a new dependency model is proposed to tackle the problems identified from the case study and the related literature. The new model classifies dependencies into intrinsic and additional dependencies on the top level, and suggests nine dependency types with precise definitions as its initial set. Conclusions Our case study provides insights into requirement dependencies and their effects on change propagation analysis for both research and practise. The resulting new dependency model needs further evaluation and improvement.","2014-01-01","2023-05-03 16:34:50","2023-05-03 16:34:50","2023-05-03 16:34:50","40-53","","1","56","","Information and Software Technology","","Special sections on International Conference on Global Software Engineering – August 2011 and Evaluation and Assessment in Software Engineering – April 2012","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\N8TJUUXW\S095058491300147X.html","","","Case study; Change propagation; Impact analysis; Requirement dependency; Requirement relationship; Requirement traceability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"WJ7RYFKD","journalArticle","2001","Lang, Michael; Duggan, Jim","A Tool to Support Collaborative Software Requirements Management","Requirements Engineering","","1432-010X","10.1007/s007660170002","https://doi.org/10.1007/s007660170002","","2001-10-01","2023-05-03 16:35:13","2023-05-03 16:35:13","2023-05-03 16:35:13","161-172","","3","6","","Requirements Eng","","","","","","","","en","","","","","Springer Link","","","","","","","Key words:Computer-aided software engineering – Requirements management – Requirements volatility – Software development process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KHDB4BI2","journalArticle","1998","Regnell, Björn; Beremark, Per; Eklundh, Ola","A market-driven requirements engineering process: Results from an industrial process improvement programme","Requirements Engineering","","1432-010X","10.1007/BF02919972","https://doi.org/10.1007/BF02919972","In market-driven software evolution, the objective of a requirements engineering process include the envisioning and fostering of new requirements on existing packaged software products in a way that ensures competitiveness in the marketplace. This paper describes an industrial, market-driven requirements engineering process which incorporates continuous requirements elicitation and prioritisation together with expert cost estimation as a basis for release planning. The company has gained a measurable improvement in delivery precision and product quality of their packaged software. The described process will act as a baseline against which promising new techniques can be evaluated in the continuation of the improvement programme.","1998-06-01","2023-05-03 16:35:24","2023-05-03 16:35:24","2023-05-03 16:35:24","121-129","","2","3","","Requirements Eng","A market-driven requirements engineering process","","","","","","","en","","","","","Springer Link","","","","","","","Requirements engineering; Release planning; Requirements prioritisation; COTS; Process improvement; Process scenarios","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"7VXJ2JC8","conferencePaper","2005","Martínez Carod, Nadina; Cechich, Alejandra","Classifying software requirement prioritization approaches","","","","","http://sedici.unlp.edu.ar/handle/10915/23059","Defining software requirements is a complex and difficult process, which often leads to costly project failures. Requirements emerge from a collaborative and interactive negotiation process that involves heterogeneous stakeholders (people involved in an elicitation process such as users, analysts, developers, and customers). Practical experience shows that prioritizing requirements is not as straightforward task as the literature suggests. A process for prioritizing requirements must not only be simple and fast, but it must obtain trustworthy results. The objective of this paper is to provide a classification framework to characterize prioritization proposals. We highlight differences among eleven selected approaches by emphasizing their most important features","2005-10","2023-05-03 16:35:27","2023-05-03 16:35:27","2023-05-03 16:35:27","","","","","","","","","","","","","","en","http://creativecommons.org/licenses/by-nc-sa/2.5/ar/","","","","sedici.unlp.edu.ar","","","","C:\Users\gabra\Zotero\storage\BAT3MPIT\Martínez Carod and Cechich - 2005 - Classifying software requirement prioritization ap.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XI Congreso Argentino de Ciencias de la Computación","","","","","","","","","","","","","","",""
"PDKYE52G","journalArticle","2014","Gupta, Varun; Chauhan, Durg Singh; Gupta, Chetna; Dutta, Kamlesh","Current prioritisation and reprioritisation practices: a case study approach","International Journal of Computer Aided Engineering and Technology","","1757-2657","10.1504/IJCAET.2014.060297","https://www.inderscienceonline.com/doi/abs/10.1504/IJCAET.2014.060297","Prioritisation and reprioritisation consider both requirements as well as decision aspects for creating the implementation ordering in the incremental delivery of evolving software. These activities determine the success of a software product and hence the survivability of the developing organisation in the markets. The practices of the organisations involved in mass market developments need to be analysed to provide the basis for the research focused on providing solution strategies with the aim to incorporate the missing activities and overall improvement of the development process. This paper addresses the findings acquired after the conduct of interviews with the representatives of few software developing firms in the field of web, mobile and desktop applications. The findings suggest that the customer and developer centric effortful activities related to prioritisation and reprioritisation are missing from the practices of the organisations. Organisations believe regression testing to be an expensive activity and in the absence of the developer, it will be very difficult to perform impact analysis during regression testing, as the documentations are outdated and complete development knowledge resides in the brain of the developer.","2014-01","2023-05-03 16:35:34","2023-05-03 16:35:34","2023-05-03 16:35:34","159-170","","2","6","","","Current prioritisation and reprioritisation practices","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","prioritisation; decision aspects; market driven developments; regression testing; reprioritisations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"BM2IE6VG","webpage","","","Requirements Engineering","Guide books","","","","https://dl.acm.org/doi/abs/10.5555/1869735","Requirements engineering is the process of eliciting individual stakeholder requirements and needs and developing them into detailed, agreed requirements documented and specified in such a way that...","","2023-05-03 16:35:45","2023-05-03 16:35:45","2023-05-03 16:35:45","","","","","","","","","","","","","","EN","","","","","","","Archive Location: world DOI: 10.5555/1869735","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"59VX33BT","journalArticle","2016","Thakurta, Rahul","A specification of principles governing the design of requirement prioritisation approaches","International Journal of Business Information Systems","","1746-0972","10.1504/IJBIS.2016.074262","https://www.inderscienceonline.com/doi/abs/10.1504/IJBIS.2016.074262","The importance of prioritising requirements stems from the fact that not all requirements can usually be met with available time and resource constraints. Although several papers have been published in this domain, they mainly focus on descriptive research endeavours to suggest different requirement prioritisation approaches. Prescriptive research dealing with design science for a systematic and holistic understanding of the prioritisation process is still scarce. The gap motivates our research, which aims at arriving at a set of design principles that explains the form and function of a requirement prioritisation approach. We resort to a non-experimental approach using content analysis to identify and analyse articles on requirement prioritisation in order to arrive at the set of six design principles addressed in the paper. This subsequently is evaluated based on expert feedbacks to validate our design principles. We finally give a brief outlook on implications and issues for further research.","2016-01","2023-05-03 16:35:48","2023-05-03 16:35:48","2023-05-03 16:35:48","206-220","","2","21","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","content analysis; design principles; design science; prioritisation approaches; requirement prioritisation; requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"L2YNYBYJ","conferencePaper","2020","Moyón, Fabiola; Méndez, Daniel; Beckers, Kristian; Klepper, Sebastian","How to Integrate Security Compliance Requirements with Agile Software Engineering at Scale?","Product-Focused Software Process Improvement","978-3-030-64148-1","","10.1007/978-3-030-64148-1_5","","Integrating security into agile software development is an open issue for research and practice. Especially in strongly regulated industries, complexity increases not only when scaling agile practices but also when aiming for compliance with security standards. To achieve security compliance in a large-scale agile context, we developed S2C-SAFe: An extension of the Scaled Agile Framework that is compliant to the security standard IEC 62443-4-1 for secure product development.","2020","2023-05-03 16:36:17","2023-05-03 16:36:17","","69-87","","","","","","","Lecture Notes in Computer Science","","","","Springer International Publishing","Cham","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\SYV2CUA6\Moyón et al. - 2020 - How to Integrate Security Compliance Requirements .pdf","","","Scaled Agile Framework; Secure software engineering; Security standards","Morisio, Maurizio; Torchiano, Marco; Jedlitschka, Andreas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"RMI3STSN","journalArticle","2018","Rincon-Garcia, Nicolas; Waterson, Ben J.; Cherrett, Tom J.","Requirements from vehicle routing software: perspectives from literature, developers and the freight industry","Transport Reviews","","0144-1647","10.1080/01441647.2017.1297869","https://doi.org/10.1080/01441647.2017.1297869","Routing and scheduling software is part of the information and technology systems available to support the transport industry, and uses complex algorithms along with geographical representations of the road network to allow better planning of daily collection and delivery schedules. This paper reviews the evolution of routing and scheduling software, the algorithms used along with reported barriers to wider take-up and potential industry-driven improvements that could be made. A survey of transport companies in the U.K. was conducted in order to validate and prioritise the software capabilities that require the most development according to the new challenges that the industry is facing. Responses suggested that companies required improved route optimisation to tackle congestion based on time-dependent data and models, and greater accuracy in the representation of the road network. Not considering congestion leads to the underestimation of travel times and the production of inaccurate schedules. Literature shows that operational research techniques are available to solve problems that represent real-world conditions, but research into the relative merits of using time-dependent models needs to be undertaken. Data might be improved by cooperation between government and private sector.","2018-01-02","2023-05-03 16:36:23","2023-05-03 16:36:23","2023-05-03 16:36:23","117-138","","1","38","","","Requirements from vehicle routing software","","","","","","","","","","","","Taylor and Francis+NEJM","","Publisher: Routledge _eprint: https://doi.org/10.1080/01441647.2017.1297869","","","","","vehicle routing problem; Vehicle routing software","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"KG84ZTSL","conferencePaper","2012","Phillips, Laura B.; Aurum, Aybüke; Svensson, Richard Berntsson","Managing Software Quality Requirements","2012 38th Euromicro Conference on Software Engineering and Advanced Applications","","","10.1109/SEAA.2012.65","","This research study explores current quality requirements (QR) management practices in Australian organisations focusing on the elicitation, handling processes, challenges faced, quantification methods used and interdependency management. This research was conducted through six mini case studies, examining organizations that varied in size, structure, industry and function. A mixed methodology was utilised through an online survey for gathering quantitative data and semi-structured interviews for gathering explanatory qualitative data. The results found that five out of the six organisations studied did not have a formal and defined process for the handling of QRs. Large organisations treated QRs are part of their overall project specifications, while smaller organisations saw the management of QRs as more ad hoc. When prioritising QRs, Accuracy was considered the most important priority followed by Security and Reliability. The main challenges that organisations face in their management of QRs is defining and quantifying these requirements.","2012-09","2023-05-03 16:36:29","2023-05-03 16:36:29","","349-356","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 2376-9505","","","","","Software; Companies; Interviews; Industries; Testing; non-functional requirements; Accuracy; industrial practice; prioritization; Software quality requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2012 38th Euromicro Conference on Software Engineering and Advanced Applications","","","","","","","","","","","","","","",""
"6PCMENVG","journalArticle","2019","Cha, Jonghyuk; Maytorena-Sanchez, Eunice","Prioritising project management competences across the software project life cycle","International Journal of Managing Projects in Business","","1753-8378","10.1108/IJMPB-11-2017-0145","https://doi.org/10.1108/IJMPB-11-2017-0145","Purpose The purpose of this paper is to investigate the relative importance of project management (PM) competences across the different stages of a software project life cycle to identify competence development gaps and opportunities. Design/methodology/approach A deductive and quantitative approach was adopted to address the research questions with a web-based survey for data collection. Findings After reviewing the context of competences and PM competences, the importance of the PM competences overall and for specific stages in the project life cycle was analysed. The result highlights that functional and meta-competences are perceived to be the most important competence dimensions for software project practitioners. Originality/value This study makes three contributions. First, it consolidates PM competences into a set of 20 within four competence dimensions. Second, it prioritises these competences across the software project life cycle. Third, it identifies the significance of the inter-relationship between PM competences and project life cycle to reveal PM competence development gaps and opportunities.","2019-01-01","2023-05-03 16:36:36","2023-05-03 16:36:36","2023-05-03 16:36:36","961-978","","4","12","","","","","","","","","","","","","","","Emerald Insight","","Publisher: Emerald Publishing Limited","","C:\Users\gabra\Zotero\storage\XTSMVRFH\Cha and Maytorena-Sanchez - 2019 - Prioritising project management competences across.pdf; C:\Users\gabra\Zotero\storage\PHZYJSW8\html.html","","","Competence prioritisation; Project management competence; Project management life cycle; Software project","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"JD2DKD9C","journalArticle","2023","Madampe, Kashumi; Hoda, Rashina; Grundy, John","A Framework for Emotion-oriented Requirements Change Handling in Agile Software Engineering","IEEE Transactions on Software Engineering","","1939-3520","10.1109/TSE.2023.3253145","","Background: Requirements Changes (RCs) – the additions/modifications/deletions of functional/non-functional requirements in software products – are challenging for software practitioners to handle. Handling some changes may significantly impact the emotions of the practitioners. Objective: We wanted to know the key challenges that make RC handling difficult, how these impact the emotions of software practitioners, what influences their RC handling, and how RC handling can be made less emotionally challenging. Method: We followed a mixed-methods approach. We conducted two survey studies, with 40 participants and 201 participants respectively. The presentation of key quantitative data was followed by descriptive statistical analysis, and the qualitative data was analysed using Strauss–Corbinian Grounded Theory, and Socio–Technical Grounded Theory analysis techniques. Findings: We found (1) several key factors that make RC handling an emotional challenge, (2) varying emotions that practitioners feel when it is challenging to handle RCs, (3) how stakeholders, including practitioners themselves, peers, managers and customers, influence the RC handling and how practitioners feel due to the stakeholder influence, and (4) practices that can be used to better handle RCs. Conclusion: Some challenges are technical and some are social which also belong to aspects of agile practice, emotional intelligence, and likely belong to cognitive intelligence. Therefore, to better handle RCs with positive emotions in socio–technical environments, agility, emotional intelligence, and cognitive intelligence need to work in synergy with each other.","2023","2023-05-03 16:36:52","2023-05-03 16:36:52","","1-20","","","","","","","","","","","","","","","","","","IEEE Xplore","","Conference Name: IEEE Transactions on Software Engineering","","C:\Users\gabra\Zotero\storage\8EJNENP9\10061282.html","","","Software engineering; agile; Software; software engineering; Productivity; Stakeholders; emotions; requirements; affects; changes; Codes; emotional intelligence; Emotional responses; human factors; job-related affective well-being scale; mixed-methods; socio-technical grounded theory; software teams; Statistical analysis; well-being; workplace awareness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"MQDI64PM","journalArticle","2017","Sebega, Yanda; Mnkandla, Ernest","Exploring Issues in Agile Requirements Engineering in the South African Software Industry","THE ELECTRONIC JOURNAL OF INFORMATION SYSTEMS IN DEVELOPING COUNTRIES","","1681-4835","10.1002/j.1681-4835.2017.tb00597.x","https://onlinelibrary.wiley.com/doi/abs/10.1002/j.1681-4835.2017.tb00597.x","Issues of the agile requirements engineering (ARE) process are abundant and pervasive throughout software projects. The aim of this study was to determine common issues experienced in agile requirements engineering in the South African software industry and identify tools and frameworks to mitigate risks emanating from such problems. This includes finding out how much value software practitioners put in the agile principles of the Agile Manifesto. This study was essentially quantitative. Self-administered questionnaires were used to collect required data which was then subjected to exploratory data analysis, a tool for statistical analysis. The results suggest that software practitioners have a strong penchant for principles of the Agile Manifesto. A detailed baseline of issues in agile requirements engineering was created along with a set of recommended tools and techniques used in the software industry. And developers are divergent on the idea of non-functional requirements integration which is vital for software quality.","2017","2023-05-03 16:37:03","2023-05-03 16:37:03","2023-05-03 16:37:03","1-18","","1","81","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/j.1681-4835.2017.tb00597.x","","C:\Users\gabra\Zotero\storage\BFFVIXTU\Sebega and Mnkandla - 2017 - Exploring Issues in Agile Requirements Engineering.pdf; C:\Users\gabra\Zotero\storage\DY646UPB\j.1681-4835.2017.tb00597.html","","","Agile Requirements Engineering; Agile Tools and Techniques; Customer Collaboration; Issues of Agile Requirements Engineering; Non-Functional Requirements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"Z6YWJFVC","journalArticle","","Nuseibeh, Bashar","Department of Computing Imperial College 180 Queen’s Gate London SW7 2BZ, U.K. Email: svs@doc.ic.ac.uk","","","","","","Determining which requirements are selected for implementation of software applications is crucial to the satisfaction of customers. In a commercial setting, the value assigned by markets to a publicly held company is the ultimate measure of the degree to which the company meets its business goals -- satisfies its customers. We argue that portfolio theory provides a market driven, systematic, and more objective approach to selecting requirements and also accounts for uncertainty and incomplete knowledge in the real world. We illustrate through two examples, that the economic dimension is an important factor of software engineering decision-making because it facilitates the calibration of our estimates of limited resources. The underlying point is that the success or otherwise of software systems in commercial settings can be better ascertained by making the connection to market-assigned value explicit. Our particular application of portfolio-based reasoning is a step in contributing towards this objective.","","2023-05-03 16:37:12","2023-05-03 16:37:12","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\PGRXB3ZV\Nuseibeh - Department of Computing Imperial College 180 Queen.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EX2ELDPQ","conferencePaper","2002","Hall, J.G.; Jackson, M.; Laney, R.C.; Nuseibeh, B.; Rapanotti, L.","Relating software requirements and architectures using problem frames","Proceedings IEEE Joint International Conference on Requirements Engineering","","","10.1109/ICRE.2002.1048516","","Problem frames provide a means of analyzing and decomposing problems. They emphasise the world outside of the computer, helping the developer to focus on the problem domain, instead of drifting into inventing solutions. However, even modestly complex problems can force us into detailed consideration of the architecture of the solution. This is counter to the intention of the problem frames approach, which is to delay consideration of the solution space until a good understanding of the problem is gained. We therefore extend problem frames, allowing architectural structures, services and artifacts to be considered as part of the problem domain. Through a case study, we show how this extension enhances the applicability of problem frames in permitting an architecture-based approach to software development. We conclude that, through our extension, the applicability of problem frames is extended to include domains with existing architectural support.","2002-09","2023-05-03 16:37:20","2023-05-03 16:37:20","","137-144","","","","","","","","","","","","","","","","","","IEEE Xplore","","ISSN: 1090-705X","","C:\Users\gabra\Zotero\storage\MU2KSYJZ\Hall et al. - 2002 - Relating software requirements and architectures u.pdf; C:\Users\gabra\Zotero\storage\FINSVZ7U\1048516.html","","","Programming; Computer architecture; Software architecture; Delay; Counting circuits; Shape","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proceedings IEEE Joint International Conference on Requirements Engineering","","","","","","","","","","","","","","",""
"KSJ8IDQQ","journalArticle","2010","Hannola, Lea; Elfvengren, Kalle; Tuominen, Markku","A group support system process for the definition of software requirements","International Journal of Innovation and Learning","","1471-8197","10.1504/IJIL.2010.030612","https://www.inderscienceonline.com/doi/abs/10.1504/IJIL.2010.030612","The definition of software requirements in the early phases of the software innovation process is considered to be an extremely important and challenging task, as decisions about precisely what will be developed are made during this stage. This paper presents a Group Support System (GSS) process for the definition of software requirements, and studies the usability of a GSS as a tool for requirements definition. The developed process was validated in a telecommunications company, and the study shows that requirements definition was expedited and more effective with the GSS-supported process compared to the traditional methods used in the case company.","2010-01","2023-05-03 16:37:27","2023-05-03 16:37:27","2023-05-03 16:37:27","171-186","","2","7","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","software development; group support systems; GSS; learning; process improvement; requirements definition; software innovation; telecommunications industry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"M3LLTPPF","conferencePaper","2011","Conboy, Kieran; Lang, Michael","The Paradox of “Structured” Methods for Software Requirements Management: A Case Study of an e-Government Development Project","Information Systems Development","978-1-4419-7355-9","","10.1007/978-1-4419-7355-9_19","","This chapter outlines the alternative perspectives of “rationalism” and “improvisation” within information systems development and describes the major shortcomings of each. It then discusses how these shortcomings manifested themselves within an e-government case study where a “structured” requirements management method was employed. Although this method was very prescriptive and firmly rooted in the “rational” paradigm, it was observed that users often resorted to improvised behaviour, such as privately making decisions on how certain aspects of the method should or should not be implemented.","2011","2023-05-03 16:37:34","2023-05-03 16:37:34","","223-232","","","","","","The Paradox of “Structured” Methods for Software Requirements Management","","","","","Springer","New York, NY","en","","","","","Springer Link","","","","C:\Users\gabra\Zotero\storage\XJW6V5Y9\Conboy and Lang - 2011 - The Paradox of “Structured” Methods for Software R.pdf","","","Requirements prioritisation; e-Government systems development; Method enactment; Requirements manage-ment; Situated action","Song, William Wei; Xu, Shenghua; Wan, Changxuan; Zhong, Yuansheng; Wojtkowski, Wita; Wojtkowski, Gregory; Linger, Henry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"347EXAD7","journalArticle","2014","Ruhaya, A A; Bernard, W","Exploring the Relationships Between Requirements Relationships Knowledge and Requirements Prioritisation Towards Software Development Project Success","Australian Journal of Basic and Applied Sciences","","","","","In software development project, requirements are very important and they need to be managed effectively for the project to be successful. One of the important parts in managing requirements is prioritising the requirements. However, prioritising requirements is difficult as requirements do not stand alone and they are typically related to one another in several ways. These relationships may affect individual requirement as well as the whole process of software development project. Hence, requirements relationships need to be captured, analysed, and managed carefully to avoid any costly mistake. This research aims to investigate how these types of requirements relationships impact requirements prioritisation as well as the success of software development project. We examined the impacts from the perspective of business analyst. Partial least square (PLS) and structural equation modelling (SEM) were used to analyse the data. The findings from this research can be used as a guide on working with requirements relationships knowledge useful for business analysts and research community.","2014","2023-05-03 16:37:52","2023-05-03 16:37:52","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\U7G5QH45\Ruhaya and Bernard - 2014 - Exploring the Relationships Between Requirements R.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"S3CTGBG9","journalArticle","2018","Gambo, Ishaya; Ikono, Rhoda; Achimugu, Philip; Soriyan, Abimbola","An Integrated Framework for Prioritizing Software Specifications in Requirements Engineering","International Journal of Software Engineering and Its Applications","","17389984, 17389984","10.14257/ijseia.2018.12.1.03","http://www.sersc.org/journals/IJSEIA/vol12_no1_2018/3.pdf","Requirements prioritization is an established activity facilitating good decision making for the purpose of coping with complexities that often arise when determining the right choice of requirement during requirements engineering process. However, making precise and accurate decision for the purpose of averting subsequent system failure is an issue of concern when developing large scale systems. In this paper, we proposed the use of imprecise knowledge-based solutions over precise-knowledge based solutions for prioritizing software requirements to overcome the problem of decision making. In this regard, our proposed technique is an integration of Fuzzy Multi Criteria Decision Making (FMCDM), similarity measures and target-based approach to requirements prioritization using linguistic values of triangular fuzzy numbers. With the integrated framework, the challenge of making decisions under uncertain conditions are considered. The integrated framework was based on some defined criteria, a three-phased process comprising of five steps and a five-point scale used to determine the relative values of requirements. The result is the specification of a stepwise process of the computations that can be performed during decision making by the integrated technique proposed. It is hoped that when this technique is implemented, executed, evaluated and validated on case study, a promising results will be achieved. For validating the proposed technique, requirements from reallife case studies can be elicited, analysed, and reconciled for completeness and consistency.","2018-02-28","2023-05-03 16:37:58","2023-05-03 16:37:59","2023-05-03 16:37:58","33-46","","1","12","","IJSEIA","","","","","","","","en","","","","","DOI.org (Crossref)","","","","C:\Users\gabra\Zotero\storage\84WQUN5R\Gambo et al. - 2018 - An Integrated Framework for Prioritizing Software .pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"26JYDDVR","thesis","2015","Ellis-Braithwaite, Richard","Modelling the instrumental value of software requirements","","","","","https://hdl.handle.net/2134/21803","Numerous studies have concluded that roughly half of all implemented software requirements are never or rarely used in practice, and that failure to realise expected benefits is a major cause of software project failure. This thesis presents an exploration of these concepts, claims, and causes. It evaluates the literature s proposed solutions to them, and then presents a unified framework that covers additional concerns not previously considered. The value of a requirement is assessed often during the requirements engineering (RE) process, e.g., in requirement prioritisation, release planning, and trade-off analysis. In order to support these activities, and hence to support the decisions that lead to the aforementioned waste, this thesis proposes a framework built on the modelling languages of Goal Oriented Requirements Engineering (GORE), and on the principles of Value Based Software Engineering (VBSE). The framework guides the elicitation of a requirement s value using philosophy and business theory, and aims to quantitatively model chains of instrumental value that are expected to be generated for a system s stakeholders by a proposed software capability. The framework enriches the description of the individual links comprising these chains with descriptions of probabilistic degrees of causation, non-linear dose-response and utility functions, and credibility and confidence. A software tool to support the framework s implementation is presented, employing novel features such as automated visualisation, and information retrieval and machine learning (recommendation system) techniques. These software capabilities provide more than just usability improvements to the framework. For example, they enable visual comprehension of the implications of what-if? questions, and enable re-use of previous models in order to suggest modifications to a project s requirements set, and reduce uncertainty in its value propositions. Two case studies in real-world industry contexts are presented, which explore the problem and the viability of the proposed framework for alleviating it. The thesis research questions are answered by various methods, including practitioner surveys, interviews, expert opinion, real-world examples and proofs of concept, as well as less-common methods such as natural language processing analysis of real requirements specifications (e.g., using TF-IDF to measure the proportion of software requirement traceability links that do not describe the requirement s value or problem-to-be-solved). The thesis found that in general, there is a disconnect between the state of best practice as proposed by the literature, and current industry practice in requirements engineering. The surveyed practitioners supported the notion that the aforementioned value realisation problems do exist in current practice, that they would be treatable by better requirements engineering practice, and that this thesis proposed framework would be useful and usable in projects whose complexity warrants the overhead of requirements modelling (e.g., for projects with many stakeholders, competing desires, or having high costs of deploying incorrect increments of software functionality).","2015","2023-05-03 16:38:14","2023-05-03 16:38:14","2023-05-03 16:38:14","","","","","","","","","","","","Loughborough University","","eng","","Ph.D.","","","ethos.bl.uk","","Accepted: 2015","","C:\Users\gabra\Zotero\storage\FCUPK4VI\OrderDetails.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SG67GL5C","conferencePaper","2015","Madhavji, Nazim H.; Miranskyy, Andriy; Kontogiannis, Kostas","Big Picture of Big Data Software Engineering: With Example Research Challenges","2015 IEEE/ACM 1st International Workshop on Big Data Software Engineering","","","10.1109/BIGDSE.2015.10","","In the rapidly growing field of Big Data, we note that a disproportionately larger amount of effort is being invested in infrastructure development and data analytics in comparison to applications software development – approximately a 80:20 ratio. This prompted us to create a context model of Big Data Software Engineering (BDSE) containing various elements – such as development practice, Big Data systems, corporate decision-making, and research – and their relationships. The model puts into perspective where various types of stakeholders fit in. From the research perspective, we describe example challenges in BDSE, specifically requirements, architectures, and testing and maintenance.","2015-05","2023-05-03 16:38:19","2023-05-03 16:38:19","","11-14","","","","","","Big Picture of Big Data Software Engineering","","","","","","","","","","","","IEEE Xplore","","","","C:\Users\gabra\Zotero\storage\WAQPVB83\7165992.html","","","Software engineering; Software; Computer architecture; Software Engineering; Testing; Data models; Big Data; Business; Applications; Big data; Context model; Research challenges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2015 IEEE/ACM 1st International Workshop on Big Data Software Engineering","","","","","","","","","","","","","","",""
"Z3SUNN7C","journalArticle","2022","Tøndel, Inger Anne; Cruzes, Daniela Soares","Continuous software security through security prioritisation meetings","Journal of Systems and Software","","0164-1212","10.1016/j.jss.2022.111477","https://www.sciencedirect.com/science/article/pii/S0164121222001625","Software security needs to be a continuous endeavour in current software development practices. Frequent software updates, paired with an ongoing flow of security breaches, requires software companies to address software security throughout development and post deployment. Prescriptive software security approaches do not match well with agile software development and its emphasis on self-management. Agile approaches are however in favour of meetings as a coordination and problem-solving strategy. This article investigates the role of regular security meetings centred on making security priorities and decisions for achieving continuous software security. Through technical action research and an observational case study, we studied variations of such meetings in three companies. We found that such meetings can reach key stakeholders, make security more visible, and contribute to ongoing security prioritisation. Thus, security meetings are a promising approach, especially for small and medium sized development companies with basic yet immature security competence. Future research should investigate further the role of such meetings and how best to organise them for different contexts and needs. For this we outline implications for research and practice, e.g., related to participants and how to organise the discussions and prioritisations in the meeting.","2022-12-01","2023-05-03 16:38:22","2023-05-03 16:38:22","2023-05-03 16:38:22","111477","","","194","","Journal of Systems and Software","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\RUGFR2X9\S0164121222001625.html","","","Agile software development; Security requirements; Software security; Security meeting; Security prioritisation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"I7NBHF4Q","journalArticle","","Verma, Abhijeet","Requirements analysis phase reengineering:  Decision making & requirements prioritisation among stakeholders for a new bespoke software project","","","","","","","","2023-05-03 16:38:33","2023-05-03 16:38:33","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\QH99IPFG\Verma - Requirements analysis phase reengineering  Decisi.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"ELCKJRNJ","journalArticle","2010","Hannola, Lea; Nikula, Uolevi; Leino, Kari; Tuominen, Markku; , Heikki Kalviainen","The front end of innovation – a group method for the elicitation of software requirements","International Journal of Innovation and Learning","","1471-8197","10.1504/IJIL.2010.031952","https://www.inderscienceonline.com/doi/abs/10.1504/IJIL.2010.031952","The objective of software development is to develop and modify systems to satisfy customer needs, on schedule and within the budget. The front end activities of software development are most important when customer needs are assessed and software requirements collected. This paper proposes a new group method for the elicitation of software requirements, and the method is validated with empirical case studies. The results of the study show that the method expedites requirements elicitation and is effective. The participants found the method useful, and worth using again, and were willing to recommend it to their colleagues.","2010-01","2023-05-03 16:41:21","2023-05-03 16:41:21","2023-05-03 16:41:21","359-375","","3","7","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements engineering; software development; requirements elicitation; customer needs; learning; process improvement; budgets; front end; group methods; innovation; needs assessments; scheduling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"YWM2NUF6","journalArticle","2019","Hujainah, Fadhl Mohammed Omar","A SEMI-AUTOMATED REQUIREMENTS PRIORITISATION TECHNIQUE FOR SCALABLE REQUIREMENTS WITH STAKEHOLDER QUANTIFICATION AND PRIORITISATION","","","","","","","2019","2023-05-03 16:41:34","2023-05-03 16:41:34","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\S65648UF\Hujainah - 2019 - A SEMI-AUTOMATED REQUIREMENTS PRIORITISATION TECHN.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"K38FJ4VV","preprint","2013","Ellis-Braithwaite, Richard; Lock, Russell; Dawson, Ray; Haque, Badr","Towards an Approach for Analysing the Strategic Alignment of Software Requirements using Quantified Goal Graphs","","","","10.48550/arXiv.1307.2580","http://arxiv.org/abs/1307.2580","Analysing the strategic alignment of software requirements primarily provides assurance to stakeholders that the software-to-be will add value to the organisation. Additionally, such analysis can improve a requirement by disambiguating its purpose and value, thereby supporting validation and value-oriented decisions in requirements engineering processes, such as prioritisation, release planning, and trade-off analysis. We review current approaches that could enable such an analysis. We focus on Goal Oriented Requirements Engineering methodologies, since goal graphs are well suited for relating software goals to business goals. However, we argue that unless the extent of goal-goal contribution is quantified with verifiable metrics, goal graphs are not sufficient for demonstrating the strategic alignment of software requirements. Since the concept of goal contribution is predictive, what results is a forecast of the benefits of implementing software requirements. Thus, we explore how the description of the contribution relationship can be enriched with concepts such as uncertainty and confidence, non-linear causation, and utility. We introduce the approach using an example software project from Rolls-Royce.","2013-12-30","2023-05-03 16:41:36","2023-05-03 16:41:36","2023-05-03 16:41:36","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1307.2580 [cs]","","C:\Users\gabra\Zotero\storage\DKPHYACG\Ellis-Braithwaite et al. - 2013 - Towards an Approach for Analysing the Strategic Al.pdf; C:\Users\gabra\Zotero\storage\N9NAS7NA\1307.html","","","Computer Science - Software Engineering; D.2.1","","","","","","","","","","","","","","","","","","","arXiv:1307.2580","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"PRUCN3HV","journalArticle","2010","Hannola, Lea; Nikula, Uolevi; Leino, Kari; Tuominen, Markku; , Heikki Kalviainen","The front end of innovation – a group method for the elicitation of software requirements","International Journal of Innovation and Learning","","1471-8197","10.1504/IJIL.2010.031952","https://www.inderscienceonline.com/doi/abs/10.1504/IJIL.2010.031952","The objective of software development is to develop and modify systems to satisfy customer needs, on schedule and within the budget. The front end activities of software development are most important when customer needs are assessed and software requirements collected. This paper proposes a new group method for the elicitation of software requirements, and the method is validated with empirical case studies. The results of the study show that the method expedites requirements elicitation and is effective. The participants found the method useful, and worth using again, and were willing to recommend it to their colleagues.","2010-01","2023-05-03 16:41:40","2023-05-03 16:41:40","2023-05-03 16:41:39","359-375","","3","7","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","requirements engineering; software development; requirements elicitation; customer needs; learning; process improvement; budgets; front end; group methods; innovation; needs assessments; scheduling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"X8Q2EXUZ","journalArticle","2015","Babar, Muhammad Imran; Ghazali, Masitah; Jawawi, Dayang N. A.; Shamsuddin, Siti Maryam; Ibrahim, Noraini","PHandler: An expert system for a scalable software requirements prioritization process","Knowledge-Based Systems","","0950-7051","10.1016/j.knosys.2015.04.010","https://www.sciencedirect.com/science/article/pii/S0950705115001483","Software requirements engineering is a critical discipline in the software development life cycle. The major problem in software development is the selection and prioritization of the requirements in order to develop a system of high quality. This research analyzes the issues associated with existing software requirement prioritization techniques. One of the major issues in software requirement prioritization is that the existing techniques handle only toy projects or software projects with very few requirements. The current techniques are not suitable for the prioritization of a large number of requirements in projects where requirements may grow to the hundreds or even thousands. The research paper proposes an expert system, called the Priority Handler (PHandler), for requirement prioritization. PHandler is based on the value-based intelligent requirement prioritization technique, neural network and analytical hierarchical process in order to make the requirement prioritization process scalable. The back-propagation neural network is used to predict the value of a requirement in order to reduce the extent of expert biases and make the PHandler efficient. Moreover, the analytical hierarchy process is applied on prioritized groups of requirements in order to enhance the scalability of the requirement prioritization process.","2015-08-01","2023-05-03 16:42:05","2023-05-03 16:42:05","2023-05-03 16:42:04","179-202","","","84","","Knowledge-Based Systems","PHandler","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\TVQSUTVB\S0950705115001483.html","","","Artificial neural networks; Decision support; Expert systems; Hybrid model; Software requirement prioritization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"26B26J8V","journalArticle","2008","Boness, K.; Finkelstein, A.; Harrison, R.","A lightweight technique for assessing risks in requirements analysis","IET Software","","1751-8814","10.1049/iet-sen:20070068","https://digital-library.theiet.org/content/journals/10.1049/iet-sen_20070068","A simple and practical technique for assessing the risks, that is, the potential for error, and consequent loss, in software system development, acquired during a requirements engineering phase is described. The technique uses a goal-based requirements analysis as a framework to identify and rate a set of key issues in order to arrive at estimates of the feasibility and adequacy of the requirements. The technique is illustrated and how it has been applied to a real systems development project is shown. How problems in this project could have been identified earlier is shown, thereby avoiding costly additional work and unhappy users.","2008-02-01","2023-05-03 16:42:08","2023-05-03 16:42:08","2023-05-03 16:42:09","46-57","","1","2","","","","","","","","","","en","","","","","digital-library.theiet.org","","Publisher: IET Digital Library","","C:\Users\gabra\Zotero\storage\B6I48J89\iet-sen_20070068.html","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"T9YXGAVA","journalArticle","2013","Rajarathinam, Kavitha; Natarajan, Sureshkumar","Test suite prioritisation using trace events technique","IET Software","","1751-8814","10.1049/iet-sen.2011.0203","https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2011.0203","The size of the test suite and the duration of time determines the time taken by the regression testing. Conversely, the testers can prioritise the test cases by the use of a competent prioritisation technique to obtain an increased rate of fault detection in the system, allowing for earlier corrections, and getting higher overall confidence that the software has been tested suitably. A prioritised test suite is more likely to be more effective during that time period than would have been achieved via a random ordering if execution needs to be suspended after some time. An enhanced test case ordering may be probable if the desired implementation time to run the test cases is proven earlier. This research work's main intention is to prioritise the regression-testing test cases. In order to prioritise the test cases some factors are considered here. These factors are employed in the prioritisation algorithm. The trace events are one of the important factors, used to find the most significant test cases in the projects. The requirement factor value is calculated and subsequently a weightage is calculated and assigned to each test case in the software based on these factors by using a thresholding technique. Later, the test cases are prioritised according to the weightage allocated to them. Executing the test cases based on the prioritisation will greatly decreases the computation cost and time. The proposed technique is efficient in prioritising the regression test cases. The new prioritised subsequences of the given unit test suites are executed on Java programs after the completion of prioritisation. Average of the percentage of faults detected is an evaluation metric used for evaluating the ‘superiority’ of these orderings.","2013","2023-05-03 16:42:17","2023-05-03 16:42:17","2023-05-03 16:42:17","85-92","","2","7","","","","","","","","","","en","","","","","Wiley Online Library","","_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2011.0203","","C:\Users\gabra\Zotero\storage\FN8NTA8N\Rajarathinam and Natarajan - 2013 - Test suite prioritisation using trace events techn.pdf; C:\Users\gabra\Zotero\storage\KGXMYDXY\iet-sen.2011.html","","","Java; test case prioritisation; regression testing; fault detection; Java programs; ordering superiority evaluation; prioritisation algorithm; prioritised subsequence execution; program testing; random ordering; random processes; regression analysis; software fault tolerance; software testing; test case ordering; test suite prioritisation; thresholding technique; trace event technique","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"NJQ5WWGL","conferencePaper","2018","Salih, Ahmad M.; Omar, Mazni; Yasin, Azman","Understanding Uncertainty of Software Requirements Engineering: A Systematic Literature Review Protocol","Requirements Engineering for Internet of Things","978-981-10-7796-8","","10.1007/978-981-10-7796-8_13","","Requirements engineering uncertainty is considered as one of the main problems in software industry. It can complicate early decisions on requirements and architecture and might expose the software project to significant risks. Continuous effort by researchers has resulted in a largely grown body of work on uncertainty in software requirements. In this paper, a systematic literature review protocol is presented to investigate the research literature on approaches deals with uncertainty in software requirements engineering. Requirements management was widely studied on the uncertainty in software requirement engineering. Results showed that review and analyses approach are most widely approaches dealt with requirements uncertainty and some were briefly explained. Further research is required on the identification of prominent causes of software requirements uncertainty and the solution to cope with such causes.","2018","2023-05-03 16:42:19","2023-05-03 16:42:19","","164-171","","","","","","Understanding Uncertainty of Software Requirements Engineering","Communications in Computer and Information Science","","","","Springer","Singapore","en","","","","","Springer Link","","","","","","","Systematic literature review; Requirements engineering; Requirements uncertainty","Kamalrudin, Massila; Ahmad, Sabrina; Ikram, Naveed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"54633MWT","preprint","2013","Ellis-Braithwaite, Richard; Lock, Russell; Dawson, Ray; Haque, Badr","Modelling the Strategic Alignment of Software Requirements using Goal Graphs","","","","10.48550/arXiv.1211.6258","http://arxiv.org/abs/1211.6258","This paper builds on existing Goal Oriented Requirements Engineering (GORE) research by presenting a methodology with a supporting tool for analysing and demonstrating the alignment between software requirements and business objectives. Current GORE methodologies can be used to relate business goals to software goals through goal abstraction in goal graphs. However, we argue that unless the extent of goal-goal contribution is quantified with verifiable metrics and confidence levels, goal graphs are not sufficient for demonstrating the strategic alignment of software requirements. We introduce our methodology using an example software project from Rolls-Royce. We conclude that our methodology can improve requirements by making the relationships to business problems explicit, thereby disambiguating a requirement's underlying purpose and value.","2013-03-25","2023-05-03 16:42:26","2023-05-03 16:42:26","2023-05-03 16:42:26","","","","","","","","","","","","arXiv","","","","","","","arXiv.org","","arXiv:1211.6258 [cs]","","C:\Users\gabra\Zotero\storage\YS2VLWY9\Ellis-Braithwaite et al. - 2013 - Modelling the Strategic Alignment of Software Requ.pdf; C:\Users\gabra\Zotero\storage\QELTMDDL\1211.html","","","Computer Science - Software Engineering; D.2.1","","","","","","","","","","","","","","","","","","","arXiv:1211.6258","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"J3AAEMJN","journalArticle","","Beus-Dukic, Ljerka","Non-Functional Requirements for COTS Software Components","","","","","","Commercially available software components come with the built-in functionality often offering end-user more than they need. A fact that end-user has no or very little influence on component’s functionality promoted nonfunctional requirements which are getting more attention than ever before. In this paper, we identify some of the problems encountered when non-functional requirements for COTS software components need to be defined.","","2023-05-03 16:42:28","2023-05-03 16:42:28","","","","","","","","","","","","","","","en","","","","","Zotero","","","","C:\Users\gabra\Zotero\storage\FN8N4W3S\Beus-Dukic - Non-Functional Requirements for COTS Software Comp.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CMGWSU4R","journalArticle","2015","Kamalrudin, Massila; Sidek, Safiah","A Review on Software Requirements Validation and Consistency Management","International Journal of Software Engineering and Its Applications","","","10.14257/ijseia.2015.9.10.05","","Requirements need to be validated at the early phase of the software development to avoid errors such as inconsistency, incompleteness and incorrectness. Drawn from this argument, a requirements validation process needs to consider Consistency, Completeness and Correctness (""3 Cs"") for the production of a quality software specifications. This paper provides a review of requirements validation and consistency management based on the existing literature in order to identify the gaps in the existing knowledge on the process of software requirements specifications. This paper begins with a review of the definitions of the 3Cs,upon which the understanding of the 3Cs is derived. Next comprehensive review of related works on the identified consistency management techniques: traceability and analysis approaches are then presented. This is supported with a heat map representations of the related research on the types of contributions, techniques, specifications and semantics used in consistency management. Since semi-formal specifications were found as the most common representation of the requirements, the types of models used as semi-formal specifications to represent the requirements were also discussed. Overall, this paper identifies the various gaps existing within the process of validating and managing the consistency of requirements to avoid re-inventing the wheels in the diverse and comprehensive knowledge of requirements engineering.","2015-10-31","2023-05-03 16:42:44","2023-05-03 16:42:44","","39-58","","","9","","International Journal of Software Engineering and Its Applications","","","","","","","","","","","","","ResearchGate","","","","C:\Users\gabra\Zotero\storage\Q5NVHNC7\Kamalrudin and Sidek - 2015 - A Review on Software Requirements Validation and C.pdf; ","https://www.researchgate.net/profile/Massila-Kamalrudin/publication/283685838_A_Review_on_Software_Requirements_Validation_and_Consistency_Management/links/5749ae0108ae5f7899b9f588/A-Review-on-Software-Requirements-Validation-and-Consistency-Management.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"VSPVML76","thesis","2009","Ma, Qiao","The effectiveness of requirements prioritization techniques for a medium to large number of requirements: a systematic literature review","","","","","http://hdl.handle.net/10292/833","In software system development, it can be a challenge for people to select the ‘right’ requirement among several or many options if it is not obvious which requirement is desirable. Requirements prioritization helps people to discover the most desirable requirements. It seems that most requirements prioritization techniques work well on a small number of requirements, but many of them have constraints on medium to large numbers of requirements. This directly leads to a question: are there prioritization techniques that are suitable for people to prioritize medium to large numbers of requirements? In order to find an answer to this question, this research investigates the strength of evidence for the effectiveness of different requirements prioritization techniques for medium to large numbers of requirements. The methodology used for this research is a Systematic Literature Review. A Systematic Literature Review investigates research questions through identifying, evaluating and interpreting all relevant studies. It summarises the existing evidence for a certain technology. The reason a Systematic Literature Review was used to conduct this research is because it matches the purpose of this research, which is to systematically assess current studies in requirements prioritisation techniques as reported in literature, and analyse and draw together the results. After conducting the Systematic Literature Review, prioritization techniques that have been applied to medium to large numbers of requirements are identified and the strength of evidence for effectiveness of each technique is evaluated. It is found that the strength of evidence for effectiveness is weak for most prioritization techniques for large numbers of requirements. More studies on prioritization techniques for large numbers of requirements are needed. Stronger evidence presented for prioritization techniques for medium sized numbers of requirements shows the techniques are more mature. However, all the studies in the medium-size category use a subjective measure of improvement based on the users’ perceptions of level of improvement. It seems that the evaluations are still not strong for these studies.","2009","2023-05-03 16:42:49","2023-05-03 16:42:49","2023-05-03 16:42:49","","","","","","","The effectiveness of requirements prioritization techniques for a medium to large number of requirements","","","","","Auckland University of Technology","","en","","","","","openrepository.aut.ac.nz","","","","C:\Users\gabra\Zotero\storage\J5KYWF8R\Ma - 2009 - The effectiveness of requirements prioritization t.pdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"CCX2FYKZ","journalArticle","2010","Şen, Ceyda Güngör; Baraçlı, Hayri","Fuzzy quality function deployment based methodology for acquiring enterprise software selection requirements","Expert Systems with Applications","","0957-4174","10.1016/j.eswa.2009.10.006","https://www.sciencedirect.com/science/article/pii/S0957417409008720","In many software acquisition methods, functional software requirements are resolved, but non-functional requirements are more or less deliberately put aside. A large body of research exists on the necessity of handling specific non-functional requirements as major drivers in the software development process. However, prior research does not provide adequate support for managing non-functional requirements in the software selection process, and suggests a unique technique and methodology for identifying the selection criteria. This paper presents a fuzzy quality function deployment approach for determining which of the non-functional requirements reported by earlier studies are important to a company’s software selection decision based on and integrated with its functional requirements. The solution provided in this study not only assists decision makers in acquiring software requirements and defining selection criteria, but also supports determining the relative importance of these criteria. An actual case in Audio Electronics of Turkey’s electronic industry demonstrates the feasibility of applying the proposed framework in practice.","2010-04-01","2023-05-03 16:42:52","2023-05-03 16:42:52","2023-05-03 16:42:50","3415-3426","","4","37","","Expert Systems with Applications","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\F2TVAVAW\S0957417409008720.html","","","Non-functional requirements; ERP; Fuzzy QFD; Software requirements analysis; Software selection process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"6UCX8QKF","journalArticle","2019","Sadiq, Mohd.; Nazneen, Sanjida","Elicitation of software testing requirements from the selected set of software's requirements in GOREP","International Journal of Computational Systems Engineering","","2046-3391","10.1504/IJCSYSE.2019.100743","https://www.inderscienceonline.com/doi/abs/10.1504/IJCSYSE.2019.100743","Requirements engineering (RE) is employed to elicit, model, and analyse the requirements of software. Software requirements elicitation is the first sub-process of RE; and it is used to identify the requirements of software according to the need of the stakeholders. In literature, we identify that goal oriented requirements elicitation process (GOREP) do not support the identification of testing requirements from the functional requirements (FR) of software in early phase of RE. Therefore, to tackle this research issue, we proposed a method for the identification of the testing requirements from the FR in GOREP. In real life applications, only those requirements are implemented and tested, which are selected by the stakeholders. So in the proposed method we used fuzzy based technique for FR selection on the basis of non-functional requirements (NFR). The 'canonical representation of multiplication operation' (CRMO) associated with L−1 R−1 inverse arithmetic principle and 'graded mean integration representation' (GMIR) based on 'triangular fuzzy numbers' (TFNs) have been applied for the selection of the FR. In our work, an Institute Examination System (IES) is used as a case study to explain the steps of the proposed method.","2019-01","2023-05-03 16:42:53","2023-05-03 16:42:53","2023-05-03 16:42:52","152-160","","3","5","","","","","","","","","","","","","","","inderscienceonline.com (Atypon)","","Publisher: Inderscience Publishers","","","","","non-functional requirements; NFR; functional requirements; fuzzy based approach; test cases; testing requirements; TFNs; triangular fuzzy numbers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"LAJQ2PUY","journalArticle","2018","Jayatilleke, Shalinka; Lai, Richard","A systematic review of requirements change management","Information and Software Technology","","0950-5849","10.1016/j.infsof.2017.09.004","https://www.sciencedirect.com/science/article/pii/S0950584917304664","Context Software requirements are often not set in concrete at the start of a software development project; and requirements changes become necessary and sometimes inevitable due to changes in customer requirements and changes in business rules and operating environments; hence, requirements development, which includes requirements changes, is a part of a software process. Previous work has shown that failing to manage software requirements changes well is a main contributor to project failure. Given the importance of the subject, there's a plethora of research work that discuss the management of requirements change in various directions, ways and means. An examination of these works suggests that there's a room for improvement. Objective In this paper, we present a systematic review of research in Requirements Change Management (RCM) as reported in the literature. Method We use a systematic review method to answer four key research questions related to requirements change management. The questions are: (1) What are the causes of requirements changes? (2) What processes are used for requirements change management? (3) What techniques are used for requirements change management? and (4) How do organizations make decisions regarding requirements changes? These questions are aimed at studying the various directions in the field of requirements change management and at providing suggestions for future research work. Results The four questions were answered; and the strengths and weaknesses of existing techniques for RCM were identified. Conclusions This paper has provided information about the current state-of-the-art techniques and practices for RCM and the research gaps in existing work. Benefits, risks and difficulties associated with RCM are also made available to software practitioners who will be in a position of making better decisions on activities related to RCM. Better decisions will lead to better planning which will increase the chance of project success.","2018-01-01","2023-05-03 16:42:55","2023-05-03 16:42:55","2023-05-03 16:42:54","163-185","","","93","","Information and Software Technology","","","","","","","","en","","","","","ScienceDirect","","","","C:\Users\gabra\Zotero\storage\SEXL39JW\S0950584917304664.html","","","Systematic review; Agile; Requirements change management","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"EA6T9Z56","conferencePaper","2008","Zhang, Yuanyuan; Finkelstein, Anthony; Harman, Mark","Search Based Requirements Optimisation: Existing Work and Challenges","Requirements Engineering: Foundation for Software Quality","978-3-540-69062-7","","10.1007/978-3-540-69062-7_8","","In this position paper, we argue that search based software engineering techniques can be applied to the optimisation problem during the requirements analysis phase. Search based techniques offer significant advantages; they can be used to seek robust, scalable solutions, to perform sensitivity analysis, to yield insight and provide feedback explaining choices to the decision maker. This position paper overviews existing achievements and sets out future challenges.","2008","2023-05-03 16:43:01","2023-05-03 16:43:01","","88-94","","","","","","Search Based Requirements Optimisation","Lecture Notes in Computer Science","","","","Springer","Berlin, Heidelberg","en","","","","","Springer Link","","","","","","","Pareto Front; Release Problem; Requirement Dependency; Requirement Optimisation; Requirement Prioritisation","Paech, Barbara; Rolland, Colette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""